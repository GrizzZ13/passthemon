/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 72.0, "minX": 0.0, "maxY": 36064.0, "series": [{"data": [[0.0, 72.0], [0.1, 143.0], [0.2, 253.0], [0.3, 365.0], [0.4, 383.0], [0.5, 423.0], [0.6, 433.0], [0.7, 454.0], [0.8, 481.0], [0.9, 523.0], [1.0, 546.0], [1.1, 585.0], [1.2, 618.0], [1.3, 624.0], [1.4, 644.0], [1.5, 657.0], [1.6, 666.0], [1.7, 679.0], [1.8, 715.0], [1.9, 797.0], [2.0, 829.0], [2.1, 872.0], [2.2, 899.0], [2.3, 968.0], [2.4, 1030.0], [2.5, 1070.0], [2.6, 1114.0], [2.7, 1169.0], [2.8, 1201.0], [2.9, 1267.0], [3.0, 1339.0], [3.1, 1347.0], [3.2, 1428.0], [3.3, 1454.0], [3.4, 1544.0], [3.5, 1565.0], [3.6, 1598.0], [3.7, 1613.0], [3.8, 1624.0], [3.9, 1630.0], [4.0, 1669.0], [4.1, 1692.0], [4.2, 1726.0], [4.3, 1746.0], [4.4, 1780.0], [4.5, 1811.0], [4.6, 1829.0], [4.7, 1844.0], [4.8, 1927.0], [4.9, 1942.0], [5.0, 1962.0], [5.1, 2007.0], [5.2, 2034.0], [5.3, 2045.0], [5.4, 2067.0], [5.5, 2092.0], [5.6, 2117.0], [5.7, 2149.0], [5.8, 2219.0], [5.9, 2248.0], [6.0, 2280.0], [6.1, 2289.0], [6.2, 2311.0], [6.3, 2339.0], [6.4, 2377.0], [6.5, 2383.0], [6.6, 2411.0], [6.7, 2427.0], [6.8, 2463.0], [6.9, 2484.0], [7.0, 2518.0], [7.1, 2535.0], [7.2, 2584.0], [7.3, 2613.0], [7.4, 2697.0], [7.5, 2790.0], [7.6, 2816.0], [7.7, 2835.0], [7.8, 2858.0], [7.9, 2895.0], [8.0, 2925.0], [8.1, 2949.0], [8.2, 3014.0], [8.3, 3056.0], [8.4, 3083.0], [8.5, 3103.0], [8.6, 3159.0], [8.7, 3186.0], [8.8, 3218.0], [8.9, 3262.0], [9.0, 3302.0], [9.1, 3328.0], [9.2, 3357.0], [9.3, 3444.0], [9.4, 3484.0], [9.5, 3507.0], [9.6, 3568.0], [9.7, 3589.0], [9.8, 3613.0], [9.9, 3652.0], [10.0, 3667.0], [10.1, 3679.0], [10.2, 3739.0], [10.3, 3766.0], [10.4, 3815.0], [10.5, 3818.0], [10.6, 3836.0], [10.7, 3864.0], [10.8, 3920.0], [10.9, 4000.0], [11.0, 4067.0], [11.1, 4119.0], [11.2, 4167.0], [11.3, 4182.0], [11.4, 4202.0], [11.5, 4236.0], [11.6, 4296.0], [11.7, 4309.0], [11.8, 4343.0], [11.9, 4393.0], [12.0, 4402.0], [12.1, 4445.0], [12.2, 4464.0], [12.3, 4524.0], [12.4, 4551.0], [12.5, 4576.0], [12.6, 4624.0], [12.7, 4654.0], [12.8, 4688.0], [12.9, 4700.0], [13.0, 4728.0], [13.1, 4780.0], [13.2, 4818.0], [13.3, 4846.0], [13.4, 4913.0], [13.5, 4933.0], [13.6, 4960.0], [13.7, 4984.0], [13.8, 5009.0], [13.9, 5080.0], [14.0, 5115.0], [14.1, 5131.0], [14.2, 5188.0], [14.3, 5222.0], [14.4, 5268.0], [14.5, 5293.0], [14.6, 5320.0], [14.7, 5329.0], [14.8, 5387.0], [14.9, 5418.0], [15.0, 5457.0], [15.1, 5533.0], [15.2, 5578.0], [15.3, 5620.0], [15.4, 5663.0], [15.5, 5671.0], [15.6, 5702.0], [15.7, 5730.0], [15.8, 5770.0], [15.9, 5784.0], [16.0, 5803.0], [16.1, 5812.0], [16.2, 5849.0], [16.3, 5897.0], [16.4, 5942.0], [16.5, 5966.0], [16.6, 6012.0], [16.7, 6047.0], [16.8, 6077.0], [16.9, 6108.0], [17.0, 6136.0], [17.1, 6162.0], [17.2, 6189.0], [17.3, 6195.0], [17.4, 6219.0], [17.5, 6243.0], [17.6, 6253.0], [17.7, 6300.0], [17.8, 6338.0], [17.9, 6372.0], [18.0, 6417.0], [18.1, 6445.0], [18.2, 6497.0], [18.3, 6512.0], [18.4, 6551.0], [18.5, 6578.0], [18.6, 6602.0], [18.7, 6628.0], [18.8, 6664.0], [18.9, 6680.0], [19.0, 6691.0], [19.1, 6755.0], [19.2, 6795.0], [19.3, 6861.0], [19.4, 6940.0], [19.5, 6964.0], [19.6, 6992.0], [19.7, 6996.0], [19.8, 7021.0], [19.9, 7030.0], [20.0, 7055.0], [20.1, 7101.0], [20.2, 7135.0], [20.3, 7157.0], [20.4, 7213.0], [20.5, 7219.0], [20.6, 7244.0], [20.7, 7261.0], [20.8, 7328.0], [20.9, 7333.0], [21.0, 7340.0], [21.1, 7365.0], [21.2, 7393.0], [21.3, 7448.0], [21.4, 7476.0], [21.5, 7478.0], [21.6, 7514.0], [21.7, 7545.0], [21.8, 7577.0], [21.9, 7596.0], [22.0, 7623.0], [22.1, 7636.0], [22.2, 7685.0], [22.3, 7698.0], [22.4, 7728.0], [22.5, 7737.0], [22.6, 7755.0], [22.7, 7780.0], [22.8, 7810.0], [22.9, 7819.0], [23.0, 7839.0], [23.1, 7859.0], [23.2, 7885.0], [23.3, 7925.0], [23.4, 7937.0], [23.5, 7962.0], [23.6, 7974.0], [23.7, 8012.0], [23.8, 8030.0], [23.9, 8063.0], [24.0, 8089.0], [24.1, 8159.0], [24.2, 8190.0], [24.3, 8202.0], [24.4, 8224.0], [24.5, 8263.0], [24.6, 8305.0], [24.7, 8322.0], [24.8, 8335.0], [24.9, 8363.0], [25.0, 8366.0], [25.1, 8394.0], [25.2, 8419.0], [25.3, 8431.0], [25.4, 8454.0], [25.5, 8460.0], [25.6, 8480.0], [25.7, 8503.0], [25.8, 8528.0], [25.9, 8540.0], [26.0, 8553.0], [26.1, 8584.0], [26.2, 8607.0], [26.3, 8631.0], [26.4, 8675.0], [26.5, 8684.0], [26.6, 8717.0], [26.7, 8735.0], [26.8, 8752.0], [26.9, 8791.0], [27.0, 8814.0], [27.1, 8853.0], [27.2, 8917.0], [27.3, 8946.0], [27.4, 8981.0], [27.5, 9004.0], [27.6, 9038.0], [27.7, 9047.0], [27.8, 9070.0], [27.9, 9102.0], [28.0, 9121.0], [28.1, 9131.0], [28.2, 9190.0], [28.3, 9198.0], [28.4, 9217.0], [28.5, 9234.0], [28.6, 9271.0], [28.7, 9310.0], [28.8, 9328.0], [28.9, 9349.0], [29.0, 9396.0], [29.1, 9422.0], [29.2, 9459.0], [29.3, 9498.0], [29.4, 9532.0], [29.5, 9551.0], [29.6, 9608.0], [29.7, 9654.0], [29.8, 9698.0], [29.9, 9760.0], [30.0, 9821.0], [30.1, 9825.0], [30.2, 9855.0], [30.3, 9886.0], [30.4, 9913.0], [30.5, 9933.0], [30.6, 9962.0], [30.7, 9992.0], [30.8, 10040.0], [30.9, 10084.0], [31.0, 10117.0], [31.1, 10158.0], [31.2, 10167.0], [31.3, 10180.0], [31.4, 10201.0], [31.5, 10235.0], [31.6, 10284.0], [31.7, 10303.0], [31.8, 10362.0], [31.9, 10389.0], [32.0, 10462.0], [32.1, 10475.0], [32.2, 10497.0], [32.3, 10504.0], [32.4, 10523.0], [32.5, 10554.0], [32.6, 10589.0], [32.7, 10609.0], [32.8, 10652.0], [32.9, 10690.0], [33.0, 10713.0], [33.1, 10764.0], [33.2, 10819.0], [33.3, 10859.0], [33.4, 10885.0], [33.5, 10967.0], [33.6, 11022.0], [33.7, 11062.0], [33.8, 11078.0], [33.9, 11101.0], [34.0, 11124.0], [34.1, 11134.0], [34.2, 11152.0], [34.3, 11236.0], [34.4, 11261.0], [34.5, 11278.0], [34.6, 11288.0], [34.7, 11297.0], [34.8, 11323.0], [34.9, 11340.0], [35.0, 11346.0], [35.1, 11381.0], [35.2, 11398.0], [35.3, 11429.0], [35.4, 11464.0], [35.5, 11531.0], [35.6, 11578.0], [35.7, 11624.0], [35.8, 11640.0], [35.9, 11681.0], [36.0, 11712.0], [36.1, 11743.0], [36.2, 11789.0], [36.3, 11821.0], [36.4, 11850.0], [36.5, 11874.0], [36.6, 11898.0], [36.7, 11946.0], [36.8, 11955.0], [36.9, 11979.0], [37.0, 12023.0], [37.1, 12031.0], [37.2, 12056.0], [37.3, 12084.0], [37.4, 12113.0], [37.5, 12149.0], [37.6, 12170.0], [37.7, 12189.0], [37.8, 12234.0], [37.9, 12265.0], [38.0, 12317.0], [38.1, 12363.0], [38.2, 12389.0], [38.3, 12438.0], [38.4, 12463.0], [38.5, 12483.0], [38.6, 12498.0], [38.7, 12522.0], [38.8, 12562.0], [38.9, 12609.0], [39.0, 12656.0], [39.1, 12698.0], [39.2, 12720.0], [39.3, 12752.0], [39.4, 12798.0], [39.5, 12838.0], [39.6, 12897.0], [39.7, 12919.0], [39.8, 12955.0], [39.9, 12979.0], [40.0, 12994.0], [40.1, 13034.0], [40.2, 13068.0], [40.3, 13112.0], [40.4, 13151.0], [40.5, 13196.0], [40.6, 13231.0], [40.7, 13243.0], [40.8, 13252.0], [40.9, 13293.0], [41.0, 13319.0], [41.1, 13344.0], [41.2, 13375.0], [41.3, 13403.0], [41.4, 13445.0], [41.5, 13480.0], [41.6, 13490.0], [41.7, 13542.0], [41.8, 13587.0], [41.9, 13658.0], [42.0, 13694.0], [42.1, 13728.0], [42.2, 13737.0], [42.3, 13780.0], [42.4, 13846.0], [42.5, 13891.0], [42.6, 13961.0], [42.7, 14050.0], [42.8, 14137.0], [42.9, 14204.0], [43.0, 14226.0], [43.1, 14263.0], [43.2, 14279.0], [43.3, 14311.0], [43.4, 14376.0], [43.5, 14388.0], [43.6, 14400.0], [43.7, 14428.0], [43.8, 14440.0], [43.9, 14474.0], [44.0, 14503.0], [44.1, 14514.0], [44.2, 14525.0], [44.3, 14564.0], [44.4, 14608.0], [44.5, 14672.0], [44.6, 14698.0], [44.7, 14731.0], [44.8, 14770.0], [44.9, 14890.0], [45.0, 14907.0], [45.1, 14930.0], [45.2, 14946.0], [45.3, 14972.0], [45.4, 15044.0], [45.5, 15092.0], [45.6, 15097.0], [45.7, 15128.0], [45.8, 15175.0], [45.9, 15252.0], [46.0, 15285.0], [46.1, 15345.0], [46.2, 15385.0], [46.3, 15400.0], [46.4, 15416.0], [46.5, 15526.0], [46.6, 15547.0], [46.7, 15636.0], [46.8, 15684.0], [46.9, 15723.0], [47.0, 15758.0], [47.1, 15792.0], [47.2, 15815.0], [47.3, 15854.0], [47.4, 15870.0], [47.5, 15920.0], [47.6, 15955.0], [47.7, 16019.0], [47.8, 16038.0], [47.9, 16096.0], [48.0, 16148.0], [48.1, 16206.0], [48.2, 16263.0], [48.3, 16317.0], [48.4, 16351.0], [48.5, 16386.0], [48.6, 16455.0], [48.7, 16522.0], [48.8, 16552.0], [48.9, 16586.0], [49.0, 16692.0], [49.1, 16753.0], [49.2, 16775.0], [49.3, 16825.0], [49.4, 16849.0], [49.5, 16948.0], [49.6, 16990.0], [49.7, 17073.0], [49.8, 17131.0], [49.9, 17229.0], [50.0, 17253.0], [50.1, 17288.0], [50.2, 17324.0], [50.3, 17407.0], [50.4, 17446.0], [50.5, 17524.0], [50.6, 17577.0], [50.7, 17603.0], [50.8, 17639.0], [50.9, 17703.0], [51.0, 17720.0], [51.1, 17757.0], [51.2, 17815.0], [51.3, 17894.0], [51.4, 17940.0], [51.5, 17969.0], [51.6, 17991.0], [51.7, 17999.0], [51.8, 18050.0], [51.9, 18088.0], [52.0, 18121.0], [52.1, 18180.0], [52.2, 18213.0], [52.3, 18261.0], [52.4, 18289.0], [52.5, 18317.0], [52.6, 18373.0], [52.7, 18385.0], [52.8, 18418.0], [52.9, 18447.0], [53.0, 18499.0], [53.1, 18571.0], [53.2, 18606.0], [53.3, 18684.0], [53.4, 18711.0], [53.5, 18730.0], [53.6, 18742.0], [53.7, 18771.0], [53.8, 18806.0], [53.9, 18869.0], [54.0, 18908.0], [54.1, 18939.0], [54.2, 18990.0], [54.3, 19045.0], [54.4, 19060.0], [54.5, 19090.0], [54.6, 19128.0], [54.7, 19177.0], [54.8, 19254.0], [54.9, 19329.0], [55.0, 19362.0], [55.1, 19412.0], [55.2, 19500.0], [55.3, 19571.0], [55.4, 19604.0], [55.5, 19637.0], [55.6, 19657.0], [55.7, 19692.0], [55.8, 19725.0], [55.9, 19773.0], [56.0, 19807.0], [56.1, 19823.0], [56.2, 19861.0], [56.3, 19956.0], [56.4, 19975.0], [56.5, 20083.0], [56.6, 20147.0], [56.7, 20198.0], [56.8, 20221.0], [56.9, 20248.0], [57.0, 20280.0], [57.1, 20304.0], [57.2, 20343.0], [57.3, 20418.0], [57.4, 20425.0], [57.5, 20442.0], [57.6, 20454.0], [57.7, 20475.0], [57.8, 20514.0], [57.9, 20545.0], [58.0, 20618.0], [58.1, 20646.0], [58.2, 20677.0], [58.3, 20744.0], [58.4, 20818.0], [58.5, 20840.0], [58.6, 20921.0], [58.7, 21003.0], [58.8, 21072.0], [58.9, 21117.0], [59.0, 21134.0], [59.1, 21183.0], [59.2, 21200.0], [59.3, 21274.0], [59.4, 21291.0], [59.5, 21308.0], [59.6, 21317.0], [59.7, 21361.0], [59.8, 21393.0], [59.9, 21447.0], [60.0, 21481.0], [60.1, 21514.0], [60.2, 21532.0], [60.3, 21540.0], [60.4, 21549.0], [60.5, 21593.0], [60.6, 21627.0], [60.7, 21661.0], [60.8, 21673.0], [60.9, 21693.0], [61.0, 21702.0], [61.1, 21723.0], [61.2, 21736.0], [61.3, 21770.0], [61.4, 21805.0], [61.5, 21850.0], [61.6, 21907.0], [61.7, 21989.0], [61.8, 22002.0], [61.9, 22053.0], [62.0, 22080.0], [62.1, 22117.0], [62.2, 22146.0], [62.3, 22186.0], [62.4, 22259.0], [62.5, 22308.0], [62.6, 22334.0], [62.7, 22363.0], [62.8, 22408.0], [62.9, 22494.0], [63.0, 22535.0], [63.1, 22631.0], [63.2, 22662.0], [63.3, 22695.0], [63.4, 22700.0], [63.5, 22717.0], [63.6, 22763.0], [63.7, 22790.0], [63.8, 22812.0], [63.9, 22881.0], [64.0, 22902.0], [64.1, 22945.0], [64.2, 22963.0], [64.3, 22998.0], [64.4, 23028.0], [64.5, 23037.0], [64.6, 23145.0], [64.7, 23219.0], [64.8, 23264.0], [64.9, 23321.0], [65.0, 23356.0], [65.1, 23394.0], [65.2, 23407.0], [65.3, 23460.0], [65.4, 23476.0], [65.5, 23539.0], [65.6, 23580.0], [65.7, 23659.0], [65.8, 23692.0], [65.9, 23748.0], [66.0, 23825.0], [66.1, 23847.0], [66.2, 23875.0], [66.3, 23920.0], [66.4, 23934.0], [66.5, 23949.0], [66.6, 23978.0], [66.7, 24002.0], [66.8, 24011.0], [66.9, 24030.0], [67.0, 24046.0], [67.1, 24088.0], [67.2, 24100.0], [67.3, 24140.0], [67.4, 24174.0], [67.5, 24202.0], [67.6, 24222.0], [67.7, 24268.0], [67.8, 24337.0], [67.9, 24365.0], [68.0, 24423.0], [68.1, 24462.0], [68.2, 24513.0], [68.3, 24571.0], [68.4, 24596.0], [68.5, 24626.0], [68.6, 24654.0], [68.7, 24718.0], [68.8, 24746.0], [68.9, 24808.0], [69.0, 24824.0], [69.1, 24852.0], [69.2, 24873.0], [69.3, 24903.0], [69.4, 24919.0], [69.5, 24939.0], [69.6, 24965.0], [69.7, 25012.0], [69.8, 25027.0], [69.9, 25042.0], [70.0, 25053.0], [70.1, 25069.0], [70.2, 25090.0], [70.3, 25124.0], [70.4, 25148.0], [70.5, 25215.0], [70.6, 25227.0], [70.7, 25283.0], [70.8, 25300.0], [70.9, 25339.0], [71.0, 25356.0], [71.1, 25382.0], [71.2, 25408.0], [71.3, 25465.0], [71.4, 25478.0], [71.5, 25521.0], [71.6, 25552.0], [71.7, 25567.0], [71.8, 25594.0], [71.9, 25638.0], [72.0, 25691.0], [72.1, 25707.0], [72.2, 25709.0], [72.3, 25738.0], [72.4, 25777.0], [72.5, 25788.0], [72.6, 25812.0], [72.7, 25860.0], [72.8, 25885.0], [72.9, 25915.0], [73.0, 25943.0], [73.1, 25998.0], [73.2, 26007.0], [73.3, 26047.0], [73.4, 26071.0], [73.5, 26086.0], [73.6, 26122.0], [73.7, 26187.0], [73.8, 26252.0], [73.9, 26346.0], [74.0, 26352.0], [74.1, 26375.0], [74.2, 26393.0], [74.3, 26444.0], [74.4, 26478.0], [74.5, 26537.0], [74.6, 26555.0], [74.7, 26596.0], [74.8, 26625.0], [74.9, 26658.0], [75.0, 26668.0], [75.1, 26686.0], [75.2, 26745.0], [75.3, 26781.0], [75.4, 26861.0], [75.5, 26905.0], [75.6, 26925.0], [75.7, 26940.0], [75.8, 26984.0], [75.9, 27028.0], [76.0, 27064.0], [76.1, 27140.0], [76.2, 27150.0], [76.3, 27223.0], [76.4, 27252.0], [76.5, 27338.0], [76.6, 27367.0], [76.7, 27395.0], [76.8, 27434.0], [76.9, 27485.0], [77.0, 27540.0], [77.1, 27579.0], [77.2, 27607.0], [77.3, 27634.0], [77.4, 27663.0], [77.5, 27754.0], [77.6, 27794.0], [77.7, 27834.0], [77.8, 27864.0], [77.9, 27892.0], [78.0, 27915.0], [78.1, 27974.0], [78.2, 28035.0], [78.3, 28049.0], [78.4, 28065.0], [78.5, 28113.0], [78.6, 28177.0], [78.7, 28212.0], [78.8, 28253.0], [78.9, 28293.0], [79.0, 28323.0], [79.1, 28390.0], [79.2, 28430.0], [79.3, 28619.0], [79.4, 28628.0], [79.5, 28671.0], [79.6, 28716.0], [79.7, 28825.0], [79.8, 28849.0], [79.9, 28911.0], [80.0, 28961.0], [80.1, 28998.0], [80.2, 29081.0], [80.3, 29111.0], [80.4, 29128.0], [80.5, 29207.0], [80.6, 29225.0], [80.7, 29266.0], [80.8, 29313.0], [80.9, 29349.0], [81.0, 29384.0], [81.1, 29474.0], [81.2, 29575.0], [81.3, 29615.0], [81.4, 29656.0], [81.5, 29690.0], [81.6, 29712.0], [81.7, 29742.0], [81.8, 29802.0], [81.9, 29864.0], [82.0, 29881.0], [82.1, 29992.0], [82.2, 30084.0], [82.3, 30153.0], [82.4, 30185.0], [82.5, 30224.0], [82.6, 30256.0], [82.7, 30290.0], [82.8, 30325.0], [82.9, 30386.0], [83.0, 30448.0], [83.1, 30492.0], [83.2, 30504.0], [83.3, 30528.0], [83.4, 30529.0], [83.5, 30585.0], [83.6, 30615.0], [83.7, 30635.0], [83.8, 30648.0], [83.9, 30686.0], [84.0, 30714.0], [84.1, 30777.0], [84.2, 30870.0], [84.3, 30935.0], [84.4, 30953.0], [84.5, 30990.0], [84.6, 31028.0], [84.7, 31068.0], [84.8, 31103.0], [84.9, 31151.0], [85.0, 31179.0], [85.1, 31248.0], [85.2, 31280.0], [85.3, 31308.0], [85.4, 31337.0], [85.5, 31343.0], [85.6, 31347.0], [85.7, 31382.0], [85.8, 31390.0], [85.9, 31420.0], [86.0, 31453.0], [86.1, 31494.0], [86.2, 31508.0], [86.3, 31520.0], [86.4, 31535.0], [86.5, 31599.0], [86.6, 31619.0], [86.7, 31650.0], [86.8, 31660.0], [86.9, 31694.0], [87.0, 31721.0], [87.1, 31740.0], [87.2, 31769.0], [87.3, 31810.0], [87.4, 31861.0], [87.5, 31878.0], [87.6, 31923.0], [87.7, 31983.0], [87.8, 32012.0], [87.9, 32039.0], [88.0, 32058.0], [88.1, 32109.0], [88.2, 32123.0], [88.3, 32141.0], [88.4, 32144.0], [88.5, 32169.0], [88.6, 32184.0], [88.7, 32215.0], [88.8, 32258.0], [88.9, 32275.0], [89.0, 32306.0], [89.1, 32315.0], [89.2, 32349.0], [89.3, 32401.0], [89.4, 32422.0], [89.5, 32457.0], [89.6, 32496.0], [89.7, 32539.0], [89.8, 32578.0], [89.9, 32595.0], [90.0, 32614.0], [90.1, 32639.0], [90.2, 32655.0], [90.3, 32692.0], [90.4, 32724.0], [90.5, 32752.0], [90.6, 32779.0], [90.7, 32850.0], [90.8, 32857.0], [90.9, 32895.0], [91.0, 32915.0], [91.1, 32963.0], [91.2, 32977.0], [91.3, 33003.0], [91.4, 33030.0], [91.5, 33060.0], [91.6, 33079.0], [91.7, 33105.0], [91.8, 33125.0], [91.9, 33200.0], [92.0, 33233.0], [92.1, 33273.0], [92.2, 33301.0], [92.3, 33329.0], [92.4, 33367.0], [92.5, 33408.0], [92.6, 33438.0], [92.7, 33481.0], [92.8, 33490.0], [92.9, 33517.0], [93.0, 33584.0], [93.1, 33601.0], [93.2, 33619.0], [93.3, 33673.0], [93.4, 33691.0], [93.5, 33704.0], [93.6, 33708.0], [93.7, 33750.0], [93.8, 33804.0], [93.9, 33896.0], [94.0, 33923.0], [94.1, 33963.0], [94.2, 34012.0], [94.3, 34052.0], [94.4, 34107.0], [94.5, 34172.0], [94.6, 34205.0], [94.7, 34223.0], [94.8, 34262.0], [94.9, 34292.0], [95.0, 34309.0], [95.1, 34367.0], [95.2, 34434.0], [95.3, 34468.0], [95.4, 34525.0], [95.5, 34542.0], [95.6, 34553.0], [95.7, 34594.0], [95.8, 34625.0], [95.9, 34635.0], [96.0, 34656.0], [96.1, 34680.0], [96.2, 34698.0], [96.3, 34732.0], [96.4, 34777.0], [96.5, 34806.0], [96.6, 34817.0], [96.7, 34848.0], [96.8, 34877.0], [96.9, 34912.0], [97.0, 34918.0], [97.1, 34973.0], [97.2, 35009.0], [97.3, 35053.0], [97.4, 35061.0], [97.5, 35100.0], [97.6, 35128.0], [97.7, 35157.0], [97.8, 35217.0], [97.9, 35242.0], [98.0, 35323.0], [98.1, 35335.0], [98.2, 35341.0], [98.3, 35375.0], [98.4, 35449.0], [98.5, 35511.0], [98.6, 35529.0], [98.7, 35598.0], [98.8, 35660.0], [98.9, 35676.0], [99.0, 35694.0], [99.1, 35728.0], [99.2, 35774.0], [99.3, 35811.0], [99.4, 35836.0], [99.5, 35859.0], [99.6, 35868.0], [99.7, 35888.0], [99.8, 35899.0], [99.9, 35962.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 23.0, "series": [{"data": [[0.0, 1.0], [100.0, 5.0], [33300.0, 9.0], [32900.0, 12.0], [33700.0, 10.0], [34100.0, 7.0], [34500.0, 14.0], [34900.0, 11.0], [35300.0, 13.0], [35700.0, 9.0], [200.0, 2.0], [300.0, 7.0], [400.0, 13.0], [500.0, 12.0], [600.0, 23.0], [700.0, 4.0], [800.0, 11.0], [900.0, 4.0], [1000.0, 8.0], [1100.0, 8.0], [1200.0, 5.0], [1300.0, 7.0], [1400.0, 7.0], [1500.0, 10.0], [1600.0, 18.0], [1700.0, 12.0], [1800.0, 9.0], [1900.0, 12.0], [2000.0, 15.0], [2100.0, 9.0], [2200.0, 15.0], [2300.0, 11.0], [2400.0, 15.0], [2500.0, 10.0], [2600.0, 7.0], [2700.0, 3.0], [2800.0, 14.0], [2900.0, 10.0], [3000.0, 9.0], [3100.0, 11.0], [3200.0, 8.0], [3300.0, 9.0], [3400.0, 8.0], [3500.0, 9.0], [3600.0, 15.0], [3700.0, 7.0], [3800.0, 15.0], [3900.0, 3.0], [4000.0, 6.0], [4100.0, 12.0], [4200.0, 8.0], [4300.0, 13.0], [4400.0, 10.0], [4500.0, 8.0], [4600.0, 13.0], [4700.0, 9.0], [4800.0, 9.0], [4900.0, 12.0], [5000.0, 7.0], [5100.0, 10.0], [5200.0, 10.0], [5300.0, 12.0], [5400.0, 7.0], [5600.0, 12.0], [5500.0, 7.0], [5700.0, 13.0], [5800.0, 12.0], [5900.0, 10.0], [6000.0, 9.0], [6100.0, 16.0], [6200.0, 13.0], [6300.0, 10.0], [6400.0, 10.0], [6500.0, 12.0], [6600.0, 16.0], [6700.0, 7.0], [6800.0, 4.0], [6900.0, 12.0], [7000.0, 13.0], [7100.0, 10.0], [7200.0, 14.0], [7300.0, 16.0], [7400.0, 12.0], [7500.0, 12.0], [7600.0, 14.0], [7700.0, 16.0], [7800.0, 17.0], [7900.0, 13.0], [8000.0, 15.0], [8100.0, 6.0], [8200.0, 13.0], [8500.0, 20.0], [8400.0, 18.0], [8300.0, 18.0], [8700.0, 15.0], [8600.0, 11.0], [8800.0, 9.0], [9000.0, 14.0], [8900.0, 10.0], [9100.0, 15.0], [9200.0, 13.0], [9300.0, 12.0], [9500.0, 10.0], [9400.0, 10.0], [9700.0, 5.0], [9600.0, 8.0], [10100.0, 15.0], [9800.0, 13.0], [10200.0, 9.0], [9900.0, 14.0], [10000.0, 8.0], [10600.0, 9.0], [10500.0, 13.0], [10300.0, 11.0], [10400.0, 11.0], [10700.0, 7.0], [10800.0, 11.0], [10900.0, 5.0], [11000.0, 10.0], [11100.0, 14.0], [11200.0, 16.0], [11600.0, 11.0], [11500.0, 9.0], [11300.0, 17.0], [11400.0, 7.0], [11700.0, 8.0], [11800.0, 14.0], [12000.0, 14.0], [11900.0, 11.0], [12100.0, 14.0], [12200.0, 9.0], [12500.0, 10.0], [12300.0, 8.0], [12400.0, 14.0], [12700.0, 10.0], [12600.0, 8.0], [13200.0, 16.0], [13000.0, 9.0], [12800.0, 8.0], [13100.0, 9.0], [12900.0, 13.0], [13300.0, 11.0], [13400.0, 12.0], [13500.0, 6.0], [13600.0, 8.0], [13800.0, 7.0], [13700.0, 10.0], [13900.0, 3.0], [14200.0, 15.0], [14300.0, 11.0], [14100.0, 3.0], [14000.0, 5.0], [14400.0, 14.0], [14500.0, 14.0], [14600.0, 8.0], [14700.0, 7.0], [14800.0, 5.0], [14900.0, 14.0], [15000.0, 9.0], [15100.0, 8.0], [15200.0, 8.0], [15300.0, 8.0], [15500.0, 6.0], [15600.0, 6.0], [15400.0, 7.0], [15700.0, 11.0], [15800.0, 10.0], [15900.0, 7.0], [16000.0, 10.0], [16200.0, 5.0], [16100.0, 6.0], [16300.0, 10.0], [17200.0, 9.0], [16400.0, 5.0], [16600.0, 3.0], [16800.0, 7.0], [17000.0, 4.0], [17400.0, 6.0], [18200.0, 9.0], [17600.0, 7.0], [18000.0, 9.0], [17800.0, 5.0], [18400.0, 8.0], [18600.0, 5.0], [18800.0, 6.0], [19000.0, 12.0], [19200.0, 4.0], [19400.0, 3.0], [19600.0, 14.0], [19800.0, 9.0], [20000.0, 4.0], [20400.0, 18.0], [20200.0, 12.0], [20600.0, 8.0], [20800.0, 6.0], [21000.0, 5.0], [21400.0, 8.0], [21200.0, 9.0], [21600.0, 15.0], [21800.0, 8.0], [22000.0, 9.0], [22200.0, 6.0], [22400.0, 5.0], [22600.0, 10.0], [22800.0, 9.0], [23000.0, 8.0], [23200.0, 6.0], [23400.0, 11.0], [23600.0, 7.0], [23800.0, 10.0], [24000.0, 17.0], [24400.0, 7.0], [24200.0, 8.0], [24600.0, 10.0], [24800.0, 14.0], [25000.0, 19.0], [25200.0, 10.0], [25400.0, 8.0], [25600.0, 6.0], [25800.0, 10.0], [26000.0, 13.0], [26200.0, 5.0], [26600.0, 14.0], [26400.0, 8.0], [26800.0, 6.0], [27000.0, 9.0], [27200.0, 7.0], [27400.0, 8.0], [27600.0, 10.0], [27800.0, 11.0], [28200.0, 9.0], [28000.0, 10.0], [28400.0, 4.0], [28600.0, 10.0], [28800.0, 7.0], [29000.0, 5.0], [29200.0, 9.0], [29400.0, 4.0], [29600.0, 9.0], [29800.0, 9.0], [30000.0, 4.0], [30200.0, 10.0], [30400.0, 7.0], [30600.0, 14.0], [30800.0, 3.0], [31000.0, 9.0], [31200.0, 10.0], [31400.0, 11.0], [31600.0, 14.0], [31800.0, 8.0], [32000.0, 11.0], [32200.0, 11.0], [32400.0, 11.0], [32600.0, 13.0], [32800.0, 11.0], [33200.0, 10.0], [33600.0, 13.0], [34000.0, 7.0], [34400.0, 7.0], [34800.0, 12.0], [35600.0, 11.0], [35200.0, 6.0], [36000.0, 1.0], [33100.0, 9.0], [33500.0, 9.0], [33900.0, 9.0], [34300.0, 7.0], [34700.0, 10.0], [35100.0, 10.0], [35500.0, 8.0], [35900.0, 5.0], [16500.0, 9.0], [16700.0, 9.0], [17100.0, 6.0], [16900.0, 5.0], [17300.0, 5.0], [17500.0, 8.0], [17900.0, 14.0], [17700.0, 10.0], [18100.0, 7.0], [18300.0, 12.0], [18500.0, 6.0], [18700.0, 16.0], [18900.0, 10.0], [19100.0, 5.0], [19300.0, 9.0], [19500.0, 7.0], [19900.0, 6.0], [19700.0, 7.0], [20100.0, 7.0], [20300.0, 7.0], [20700.0, 6.0], [20500.0, 7.0], [20900.0, 5.0], [21100.0, 12.0], [21300.0, 14.0], [21500.0, 16.0], [21700.0, 14.0], [21900.0, 7.0], [22100.0, 10.0], [22300.0, 10.0], [22500.0, 5.0], [22700.0, 13.0], [22900.0, 12.0], [23100.0, 4.0], [23300.0, 11.0], [23500.0, 7.0], [23900.0, 16.0], [24100.0, 11.0], [23700.0, 3.0], [24300.0, 8.0], [24500.0, 9.0], [24700.0, 6.0], [24900.0, 15.0], [25100.0, 9.0], [25300.0, 14.0], [25500.0, 15.0], [25700.0, 19.0], [25900.0, 11.0], [26300.0, 12.0], [26100.0, 7.0], [26500.0, 10.0], [26700.0, 7.0], [26900.0, 11.0], [27100.0, 7.0], [27300.0, 9.0], [27500.0, 7.0], [27700.0, 7.0], [27900.0, 7.0], [28300.0, 7.0], [28100.0, 8.0], [28500.0, 1.0], [28700.0, 4.0], [28900.0, 9.0], [29100.0, 8.0], [29300.0, 10.0], [29500.0, 4.0], [29700.0, 9.0], [29900.0, 3.0], [30100.0, 7.0], [30300.0, 8.0], [30500.0, 15.0], [30700.0, 6.0], [30900.0, 10.0], [31100.0, 8.0], [31300.0, 19.0], [31500.0, 13.0], [31700.0, 13.0], [32100.0, 22.0], [31900.0, 7.0], [32300.0, 11.0], [32500.0, 12.0], [32700.0, 11.0], [33000.0, 12.0], [33400.0, 14.0], [33800.0, 6.0], [34200.0, 13.0], [34600.0, 16.0], [35000.0, 12.0], [35400.0, 6.0], [35800.0, 19.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 36000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 28.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3383.0, "series": [{"data": [[0.0, 28.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 89.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3383.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 245.0880000000001, "minX": 1.63068156E12, "maxY": 249.62600000000026, "series": [{"data": [[1.63068156E12, 245.21400000000017]], "isOverall": false, "label": "getOrdersAsBuyerByUserId", "isController": false}, {"data": [[1.63068156E12, 248.67600000000004]], "isOverall": false, "label": "changeOrderStatus", "isController": false}, {"data": [[1.63068156E12, 248.66000000000008]], "isOverall": false, "label": "getOrdersByUserId", "isController": false}, {"data": [[1.63068156E12, 245.0880000000001]], "isOverall": false, "label": "affirmWants", "isController": false}, {"data": [[1.63068156E12, 249.62600000000026]], "isOverall": false, "label": "makeOrder", "isController": false}, {"data": [[1.63068156E12, 246.29800000000026]], "isOverall": false, "label": "getOrdersAsSellerByUserid", "isController": false}, {"data": [[1.63068156E12, 248.15999999999954]], "isOverall": false, "label": "commentAndRateOnOrder", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068156E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 149.0, "minX": 1.0, "maxY": 36064.0, "series": [{"data": [[2.0, 35998.0], [3.0, 35962.0], [4.0, 35899.0], [5.0, 35891.0], [6.0, 35888.0], [7.0, 35890.0], [8.0, 35881.0], [9.0, 35859.0], [10.0, 35941.0], [11.0, 35861.0], [14.0, 35881.666666666664], [15.0, 35888.0], [17.0, 35861.5], [18.0, 35822.0], [19.0, 35811.0], [20.0, 35868.0], [21.0, 35823.0], [22.0, 35833.0], [23.0, 35892.0], [24.0, 35791.0], [25.0, 36064.0], [26.0, 35769.0], [27.0, 35836.0], [28.0, 35774.0], [29.0, 35778.0], [30.0, 35757.0], [31.0, 35728.0], [33.0, 35694.0], [32.0, 35711.0], [35.0, 35711.0], [34.0, 35683.0], [37.0, 35685.0], [36.0, 35674.0], [38.0, 35693.0], [41.0, 35656.0], [40.0, 35674.0], [43.0, 35614.0], [42.0, 35622.0], [45.0, 35579.0], [44.0, 35588.0], [47.0, 35524.0], [46.0, 35537.0], [49.0, 35511.0], [48.0, 35529.0], [51.0, 35478.0], [50.0, 35477.0], [53.0, 35449.0], [52.0, 35467.0], [55.0, 35375.0], [54.0, 35742.0], [57.0, 35365.0], [56.0, 35423.0], [59.0, 35335.0], [58.0, 35368.0], [61.0, 35332.0], [60.0, 35341.0], [63.0, 35323.0], [62.0, 35336.0], [67.0, 35361.0], [66.0, 35319.0], [64.0, 35326.0], [71.0, 35598.0], [70.0, 35276.0], [69.0, 35337.0], [68.0, 35410.0], [75.0, 35235.0], [74.0, 35242.0], [73.0, 35233.0], [72.0, 35232.0], [79.0, 35150.0], [78.0, 35217.0], [77.0, 34843.0], [76.0, 35527.0], [83.0, 35128.0], [82.0, 35157.0], [81.0, 35187.0], [80.0, 35147.0], [87.0, 35083.0], [86.0, 35117.5], [84.0, 35110.0], [91.0, 35062.0], [89.0, 35061.0], [88.0, 35058.0], [95.0, 35660.0], [94.0, 35101.0], [93.0, 35080.0], [92.0, 35053.0], [97.0, 34973.0], [96.0, 35007.0], [102.0, 34931.0], [101.0, 35024.0], [100.0, 35021.333333333336], [106.0, 34913.5], [104.0, 34919.5], [111.0, 34912.0], [110.0, 34924.0], [109.0, 34895.0], [108.0, 34891.0], [115.0, 34813.0], [114.0, 34848.0], [113.0, 34854.0], [112.0, 34871.0], [119.0, 34821.5], [117.0, 34902.0], [116.0, 35158.0], [122.0, 34761.0], [121.0, 34774.0], [120.0, 34817.0], [127.0, 34732.0], [126.0, 34783.0], [125.0, 34802.0], [134.0, 34657.0], [133.0, 34710.0], [132.0, 34698.0], [131.0, 34899.0], [129.0, 34675.0], [128.0, 34810.0], [143.0, 34713.0], [142.0, 34656.0], [141.0, 34673.333333333336], [138.0, 34670.0], [136.0, 34678.5], [151.0, 34553.0], [150.0, 34572.5], [148.0, 34566.0], [147.0, 34629.0], [146.0, 34616.5], [144.0, 34632.0], [159.0, 34580.0], [158.0, 34595.0], [157.0, 34543.0], [155.0, 34625.0], [154.0, 34625.0], [153.0, 34542.0], [152.0, 34538.0], [167.0, 34451.0], [166.0, 34392.0], [165.0, 34416.0], [164.0, 34463.0], [162.0, 34539.0], [161.0, 34453.0], [160.0, 34468.0], [175.0, 34270.0], [174.0, 34306.0], [172.0, 34306.0], [170.0, 34367.0], [169.0, 34343.0], [168.0, 34626.0], [183.0, 34223.0], [182.0, 34241.0], [181.0, 34205.0], [180.0, 34298.0], [179.0, 34278.0], [178.0, 34225.0], [177.0, 34525.0], [176.0, 34265.0], [191.0, 34434.0], [189.0, 34508.0], [188.0, 34207.0], [187.0, 34213.0], [185.0, 34171.0], [184.0, 34195.0], [199.0, 34021.0], [198.0, 34027.0], [197.0, 34012.0], [196.0, 34069.0], [194.0, 34107.0], [193.0, 34137.0], [192.0, 34180.5], [207.0, 33896.0], [206.0, 33963.0], [205.0, 33963.0], [204.0, 33971.0], [203.0, 33971.0], [202.0, 33923.0], [201.0, 34050.0], [200.0, 34336.0], [215.0, 34062.0], [214.0, 33812.0], [213.0, 33774.0], [212.0, 33801.0], [211.0, 33854.0], [210.0, 33868.0], [209.0, 34086.0], [223.0, 33700.0], [222.0, 33697.5], [220.0, 33707.0], [219.0, 33690.0], [218.0, 33708.0], [217.0, 33721.0], [216.0, 33749.0], [230.0, 33618.0], [229.0, 33637.0], [228.0, 33644.0], [227.0, 33734.0], [226.0, 33691.0], [225.0, 33673.0], [224.0, 33689.0], [239.0, 33619.0], [238.0, 33601.0], [237.0, 33580.0], [236.0, 33584.0], [235.0, 33588.0], [234.0, 33693.0], [233.0, 33588.0], [232.0, 33632.0], [247.0, 33492.0], [246.0, 33481.0], [245.0, 33481.0], [244.0, 33486.0], [243.0, 33507.0], [242.0, 33517.0], [241.0, 33547.0], [240.0, 34166.0], [255.0, 33406.0], [254.0, 33408.0], [253.0, 33419.0], [252.0, 33407.0], [251.0, 33593.0], [249.0, 33441.0], [248.0, 33490.0], [270.0, 33212.0], [269.0, 33854.5], [258.0, 33314.0], [257.0, 33345.0], [256.0, 33378.0], [267.0, 33362.0], [266.0, 33598.0], [265.0, 33929.0], [264.0, 33263.0], [263.0, 33949.0], [262.0, 33296.5], [260.0, 33325.0], [286.0, 33706.0], [287.0, 33301.0], [285.0, 33047.0], [284.0, 33105.0], [283.0, 33122.0], [281.0, 33438.0], [280.0, 33209.0], [279.0, 33354.5], [273.0, 33186.0], [272.0, 33344.0], [275.0, 33273.0], [274.0, 33270.0], [277.0, 33233.0], [276.0, 33143.0], [303.0, 33511.0], [302.0, 32979.333333333336], [291.0, 33044.666666666664], [288.0, 33086.0], [299.0, 32997.0], [298.0, 32965.0], [297.0, 33281.0], [296.0, 33015.0], [295.0, 32963.0], [294.0, 33003.0], [293.0, 33045.0], [307.0, 33134.0], [319.0, 32854.0], [318.0, 32922.333333333336], [315.0, 32974.0], [313.0, 32915.0], [312.0, 32905.0], [311.0, 32924.0], [310.0, 32891.333333333336], [306.0, 32941.0], [305.0, 32895.0], [304.0, 32897.0], [323.0, 33063.0], [335.0, 32630.0], [334.0, 32776.0], [322.0, 32763.0], [321.0, 32779.0], [320.0, 33079.0], [331.0, 32730.0], [330.0, 32722.0], [328.0, 33367.0], [327.0, 32798.0], [326.0, 32748.0], [325.0, 32758.0], [324.0, 33040.0], [350.0, 32532.0], [351.0, 32505.0], [349.0, 32539.0], [348.0, 33105.0], [347.0, 32492.0], [346.0, 32814.0], [345.0, 32578.0], [344.0, 32169.0], [343.0, 32611.0], [339.0, 32656.666666666668], [336.0, 32614.0], [342.0, 32578.0], [341.0, 32853.0], [340.0, 32595.0], [365.0, 32275.0], [366.0, 32380.0], [364.0, 32356.0], [355.0, 32416.0], [354.0, 32419.0], [353.0, 32724.0], [352.0, 32434.0], [363.0, 32639.0], [362.0, 32655.0], [361.0, 31966.0], [360.0, 32635.0], [359.0, 32690.0], [358.0, 32701.0], [357.0, 32457.0], [356.0, 32714.0], [382.0, 32422.0], [383.0, 32401.0], [381.0, 32495.0], [380.0, 32437.0], [379.0, 32452.0], [378.0, 32232.0], [377.0, 32271.0], [376.0, 32547.0], [375.0, 32857.0], [368.0, 32471.5], [371.0, 32597.0], [370.0, 32434.5], [374.0, 32309.0], [373.0, 32496.0], [372.0, 32590.0], [397.0, 32034.0], [398.0, 32058.0], [396.0, 31628.0], [387.0, 32445.5], [385.0, 32184.0], [384.0, 32386.0], [395.0, 32310.0], [394.0, 32123.0], [393.0, 32328.0], [392.0, 32138.0], [391.0, 32117.0], [390.0, 32135.0], [389.0, 32109.0], [388.0, 32121.0], [414.0, 31513.0], [415.0, 32198.0], [413.0, 31960.0], [412.0, 32215.0], [411.0, 31983.0], [410.0, 32310.0], [409.0, 32555.0], [408.0, 32012.0], [407.0, 32182.333333333332], [403.0, 32315.0], [402.0, 32059.0], [401.0, 32306.0], [400.0, 32161.5], [404.0, 32214.0], [431.0, 32152.0], [430.0, 31962.666666666668], [427.0, 31990.0], [425.0, 32136.5], [423.0, 31895.0], [421.0, 32232.0], [420.0, 32037.75], [416.0, 32192.0], [446.0, 31995.5], [447.0, 31720.0], [444.0, 31968.0], [435.0, 31810.0], [434.0, 32047.0], [433.0, 31559.5], [443.0, 31734.0], [442.0, 32289.0], [441.0, 31545.5], [439.0, 32012.0], [438.0, 31727.0], [437.0, 32037.5], [462.0, 31740.0], [463.0, 31798.0], [461.0, 31576.0], [460.0, 32144.0], [459.0, 31682.0], [457.0, 32142.0], [456.0, 31769.0], [455.0, 32148.0], [449.0, 32009.0], [448.0, 31665.0], [451.0, 31919.0], [450.0, 31680.0], [454.0, 31619.0], [453.0, 31866.0], [452.0, 31599.0], [478.0, 31520.0], [479.0, 30870.0], [477.0, 31535.0], [476.0, 31608.0], [475.0, 31608.0], [474.0, 31642.0], [473.0, 31659.0], [472.0, 31623.5], [470.0, 31694.0], [464.0, 32100.0], [467.0, 31028.0], [466.0, 31604.0], [469.0, 31721.0], [468.0, 31660.0], [493.0, 31395.0], [492.0, 31127.0], [483.0, 31445.0], [482.0, 31522.0], [480.0, 31508.0], [491.0, 31384.0], [490.0, 31343.0], [489.0, 31347.0], [488.0, 31420.0], [487.0, 31837.0], [486.0, 31461.0], [485.0, 30790.0], [484.0, 31795.0], [509.0, 31286.0], [510.0, 31248.0], [508.0, 31341.5], [498.0, 31216.0], [497.0, 31690.0], [506.0, 31305.5], [504.0, 31285.0], [503.0, 31371.0], [502.0, 31635.0], [501.0, 30634.0], [500.0, 31370.5], [518.0, 31532.0], [540.0, 30714.5], [542.0, 30346.0], [538.0, 31390.0], [534.0, 31084.0], [532.0, 31253.666666666668], [526.0, 31460.0], [524.0, 31151.0], [520.0, 31179.0], [516.0, 31511.0], [512.0, 31269.5], [572.0, 30955.0], [574.0, 30615.0], [570.0, 30648.0], [550.0, 30268.0], [548.0, 30990.0], [546.0, 30664.5], [544.0, 31025.0], [566.0, 31032.0], [564.0, 30731.0], [562.0, 30777.0], [560.0, 31103.0], [558.0, 30647.0], [556.0, 30686.0], [554.0, 30929.0], [552.0, 30697.0], [604.0, 30690.0], [606.0, 30665.0], [602.0, 30448.0], [580.0, 30546.0], [578.0, 29867.0], [576.0, 30894.0], [598.0, 30714.0], [596.0, 30510.0], [594.0, 30135.5], [592.0, 30522.0], [590.0, 30529.0], [586.0, 29781.0], [584.0, 30645.75], [634.0, 29309.0], [638.0, 30308.0], [632.0, 29333.0], [614.0, 30325.0], [608.0, 30398.0], [630.0, 30239.0], [628.0, 29386.0], [626.0, 30153.0], [624.0, 30449.0], [622.0, 30155.0], [620.0, 30501.0], [618.0, 30528.0], [616.0, 30507.0], [668.0, 28776.0], [670.0, 29209.0], [666.0, 29830.0], [664.0, 29813.0], [662.0, 29313.0], [658.0, 29895.0], [656.0, 29992.0], [652.0, 29114.0], [642.0, 29701.0], [640.0, 30281.0], [650.0, 29575.0], [648.0, 29198.0], [696.0, 29128.0], [700.0, 28337.0], [702.0, 28302.0], [698.0, 29099.0], [694.0, 29093.0], [690.0, 28404.0], [686.0, 28939.0], [676.0, 29703.0], [684.0, 29207.0], [682.0, 29593.0], [680.0, 28628.0], [730.0, 28990.0], [732.0, 27960.0], [728.0, 29081.0], [710.0, 28823.75], [706.0, 28296.5], [704.0, 29339.0], [726.0, 29128.0], [724.0, 28113.0], [722.0, 28621.0], [720.0, 28882.0], [718.0, 28177.0], [716.0, 28213.0], [712.0, 28714.0], [740.0, 28844.0], [756.0, 27659.0], [752.0, 28213.5], [750.0, 28654.0], [748.0, 28158.0], [746.0, 27787.0], [744.0, 27823.0], [742.0, 27835.0], [736.0, 28903.0], [796.0, 28287.0], [798.0, 27247.0], [794.0, 28323.0], [792.0, 28057.0], [790.0, 28095.0], [788.0, 27864.0], [784.0, 27393.0], [782.0, 28247.5], [770.0, 27974.0], [768.0, 28278.0], [774.0, 27485.0], [772.0, 27481.0], [780.0, 28430.0], [778.0, 28182.0], [830.0, 27289.0], [824.0, 27320.0], [806.0, 27170.0], [804.0, 27915.0], [802.0, 27937.0], [822.0, 27365.0], [820.0, 27404.5], [818.0, 27794.0], [816.0, 27061.0], [814.0, 27569.0], [812.0, 27840.0], [810.0, 27392.666666666668], [862.0, 26384.0], [860.0, 26862.0], [838.0, 27028.0], [834.0, 26658.0], [832.0, 27233.0], [854.0, 26444.0], [852.0, 27067.0], [850.0, 26905.0], [848.0, 26940.0], [846.0, 27174.0], [844.0, 26546.0], [842.0, 27177.5], [840.0, 26574.0], [892.0, 26362.0], [894.0, 26393.0], [890.0, 26702.0], [888.0, 26754.0], [886.0, 26537.0], [884.0, 26668.0], [882.0, 26626.0], [878.0, 26665.0], [870.0, 26781.0], [868.0, 26352.0], [866.0, 26805.0], [874.0, 26927.0], [926.0, 26377.0], [924.0, 26101.0], [918.0, 26280.0], [916.0, 26109.75], [912.0, 25938.0], [910.0, 26469.0], [908.0, 26187.0], [906.0, 26543.0], [900.0, 26596.0], [898.0, 26583.0], [934.0, 25957.0], [958.0, 25904.75], [952.0, 25344.0], [930.0, 25998.0], [928.0, 26003.0], [950.0, 25382.0], [948.0, 25871.0], [944.0, 26137.0], [942.0, 26280.0], [940.0, 25998.0], [938.0, 25782.5], [936.0, 25555.0], [988.0, 25473.0], [990.0, 25819.0], [986.0, 25788.0], [984.0, 25478.0], [982.0, 25903.0], [980.0, 25579.0], [978.0, 25796.0], [976.0, 25557.0], [974.0, 25660.0], [960.0, 25753.0], [966.0, 25785.666666666668], [962.0, 26054.0], [972.0, 25223.0], [970.0, 25920.0], [968.0, 25708.0], [1020.0, 25058.0], [1022.0, 25372.5], [1018.0, 25090.0], [1016.0, 25444.0], [1012.0, 25415.0], [1010.0, 25568.0], [1008.0, 25267.0], [1006.0, 25339.0], [994.0, 25408.0], [992.0, 25740.0], [998.0, 25738.0], [996.0, 25691.0], [1004.0, 25552.0], [1002.0, 25384.0], [1000.0, 25707.0], [1072.0, 24988.5], [1080.0, 24669.0], [1084.0, 24595.0], [1076.0, 24261.0], [1060.0, 25076.0], [1056.0, 25027.0], [1052.0, 24853.0], [1028.0, 24571.0], [1024.0, 25411.0], [1036.0, 24965.0], [1032.0, 24936.0], [1044.0, 24917.0], [1040.0, 25515.0], [1144.0, 24233.5], [1148.0, 23875.0], [1140.0, 24216.0], [1136.0, 24296.5], [1132.0, 24268.0], [1128.0, 24058.5], [1124.0, 24462.5], [1120.0, 24571.0], [1116.0, 24646.0], [1092.0, 24950.5], [1100.0, 24810.0], [1096.0, 24824.0], [1112.0, 24588.0], [1108.0, 24026.0], [1104.0, 24039.0], [1208.0, 23539.0], [1212.0, 23577.0], [1204.0, 23669.0], [1160.0, 24145.0], [1152.0, 24115.0], [1196.0, 23825.0], [1188.0, 23873.0], [1180.0, 23990.5], [1176.0, 24015.0], [1172.0, 23987.0], [1168.0, 23990.0], [1264.0, 22902.0], [1272.0, 23080.0], [1276.0, 22811.0], [1268.0, 22548.5], [1252.0, 23018.0], [1248.0, 23037.0], [1244.0, 22391.0], [1220.0, 23420.5], [1228.0, 23455.5], [1224.0, 23466.0], [1240.0, 23282.5], [1236.0, 22915.5], [1232.0, 23394.0], [1292.0, 22666.0], [1332.0, 21849.0], [1328.0, 22296.5], [1316.0, 21549.0], [1312.0, 22345.0], [1300.0, 22531.0], [1296.0, 22675.0], [1284.0, 22704.0], [1280.0, 22998.0], [1400.0, 21669.0], [1404.0, 21750.0], [1396.0, 21805.0], [1356.0, 21955.0], [1352.0, 21193.0], [1388.0, 21634.0], [1380.0, 21907.0], [1372.0, 21731.0], [1368.0, 21765.0], [1364.0, 21871.0], [1360.0, 21887.0], [1464.0, 20829.0], [1468.0, 20577.0], [1456.0, 20221.0], [1420.0, 21396.0], [1416.0, 21421.5], [1412.0, 21364.0], [1408.0, 21439.0], [1452.0, 21003.0], [1448.0, 21065.0], [1444.0, 21447.0], [1440.0, 21134.0], [1436.0, 21128.0], [1432.0, 21310.0], [1428.0, 21287.0], [1528.0, 20083.0], [1532.0, 19971.0], [1524.0, 19322.0], [1520.0, 19345.0], [1516.0, 20218.0], [1512.0, 20248.0], [1508.0, 20284.0], [1504.0, 20262.0], [1500.0, 20304.0], [1480.0, 20520.0], [1476.0, 20646.0], [1472.0, 20671.0], [1488.0, 20041.0], [1592.0, 19302.0], [1596.0, 18813.5], [1568.0, 19595.0], [1572.0, 19156.5], [1576.0, 18637.0], [1588.0, 19431.0], [1584.0, 19414.0], [1548.0, 18927.0], [1540.0, 19930.333333333332], [1536.0, 19921.0], [1560.0, 19692.0], [1556.0, 18888.0], [1552.0, 19785.0], [1580.0, 19596.0], [1652.0, 17757.0], [1660.0, 17656.0], [1632.0, 18810.0], [1640.0, 18727.0], [1648.0, 18806.0], [1612.0, 19059.0], [1608.0, 18274.0], [1604.0, 19091.0], [1600.0, 18503.0], [1628.0, 18974.0], [1624.0, 18938.0], [1620.0, 18935.0], [1616.0, 18269.0], [1644.0, 18723.0], [1716.0, 18195.0], [1696.0, 18311.0], [1700.0, 18122.0], [1720.0, 17984.0], [1712.0, 17296.0], [1676.0, 18447.0], [1672.0, 17703.0], [1668.0, 18571.0], [1664.0, 18487.0], [1692.0, 18250.333333333332], [1688.0, 17577.0], [1680.0, 17413.0], [1708.0, 17258.0], [1784.0, 16317.0], [1760.0, 17595.5], [1768.0, 17271.0], [1788.0, 16298.0], [1780.0, 16313.0], [1776.0, 16442.0], [1728.0, 18094.0], [1732.0, 16829.0], [1736.0, 17961.0], [1740.0, 16948.0], [1748.0, 16775.0], [1744.0, 17713.0], [1772.0, 16814.5], [1844.0, 15391.0], [1832.0, 15636.0], [1852.0, 15544.0], [1828.0, 15748.0], [1848.0, 16528.0], [1840.0, 16560.0], [1804.0, 15916.0], [1800.0, 17153.0], [1796.0, 16054.0], [1792.0, 17073.0], [1820.0, 15854.0], [1816.0, 15735.5], [1808.0, 16852.0], [1836.0, 16658.0], [1912.0, 15712.0], [1888.0, 15910.0], [1892.0, 15870.0], [1896.0, 15481.0], [1916.0, 14723.0], [1908.0, 14899.0], [1904.0, 14902.0], [1884.0, 15107.0], [1856.0, 15994.5], [1860.0, 15280.0], [1864.0, 15292.0], [1868.0, 16154.0], [1880.0, 15128.0], [1876.0, 15082.0], [1872.0, 16081.0], [1900.0, 14918.0], [1972.0, 14201.0], [1980.0, 15103.0], [1956.0, 14215.0], [1960.0, 15234.0], [1968.0, 14251.0], [1932.0, 15047.5], [1928.0, 14610.0], [1924.0, 14499.0], [1920.0, 14627.5], [1948.0, 14503.0], [1964.0, 14290.0], [2032.0, 14292.0], [2040.0, 149.0], [2020.0, 14588.0], [2024.0, 14525.0], [2044.0, 13403.0], [2036.0, 13425.0], [1984.0, 13846.0], [1988.0, 14918.0], [1992.0, 14700.0], [1996.0, 13737.0], [2012.0, 13623.0], [2004.0, 13761.5], [2000.0, 13731.0], [2028.0, 13393.0], [2048.0, 13285.0], [2056.0, 13863.5], [2104.0, 12689.0], [2096.0, 12809.0], [2088.0, 13742.0], [2080.0, 12916.0], [2112.0, 13477.5], [2120.0, 12469.0], [2128.0, 12522.0], [2136.0, 12431.0], [2168.0, 12056.0], [2160.0, 12189.0], [2152.0, 12140.0], [2144.0, 13329.0], [2072.0, 12955.0], [2064.0, 13089.0], [2296.0, 11654.0], [2216.0, 12558.0], [2208.0, 12630.0], [2240.0, 11366.0], [2248.0, 11276.5], [2256.0, 11356.0], [2264.0, 12031.0], [2288.0, 10967.0], [2280.0, 11122.0], [2272.0, 11185.0], [2200.0, 11808.0], [2192.0, 11872.0], [2184.0, 11995.5], [2176.0, 12046.0], [2312.0, 3942.6666666666665], [2416.0, 9654.0], [2304.0, 11720.0], [2352.0, 11729.0], [2344.0, 11429.0], [2336.0, 11464.5], [2400.0, 11681.0], [2328.0, 10513.0], [2320.0, 11148.0], [2376.0, 10166.0], [2368.0, 10084.0], [2384.0, 9959.0], [2392.0, 11112.0], [2424.0, 9580.0], [2408.0, 10712.5], [2448.0, 9258.0], [2552.0, 10174.0], [2480.0, 10117.0], [2464.0, 10293.0], [2528.0, 8535.5], [2456.0, 9310.0], [2440.0, 9498.0], [2432.0, 9546.0], [2496.0, 9047.0], [2504.0, 9921.0], [2512.0, 8751.0], [2544.0, 8454.0], [2536.0, 8782.333333333334], [2576.0, 7928.0], [2560.0, 9185.0], [2584.0, 7960.0], [2568.0, 9327.0], [2656.0, 8195.5], [2592.0, 9438.0], [2608.0, 7744.0], [2616.0, 7653.0], [2624.0, 7636.0], [2632.0, 8396.5], [2640.0, 7476.0], [2648.0, 7478.0], [2680.0, 8322.0], [2808.0, 7240.0], [2792.0, 7812.0], [2776.0, 7683.0], [2760.0, 7474.0], [2752.0, 8030.0], [2800.0, 7332.0], [2712.0, 8263.0], [2704.0, 6691.0], [2688.0, 8354.0], [2744.0, 7547.0], [2736.0, 7655.5], [2728.0, 7820.0], [2720.0, 7751.333333333333], [2824.0, 6499.0], [2832.0, 6871.0], [2816.0, 7339.0], [2840.0, 6797.0], [2872.0, 6162.0], [2856.0, 6772.0], [2848.0, 7085.0], [2888.0, 6614.0], [2896.0, 6077.0], [2904.0, 5955.0], [2936.0, 5674.0], [2928.0, 6222.0], [2920.0, 5910.0], [2912.0, 5985.5], [2944.0, 3451.5], [2968.0, 5827.5], [3040.0, 4688.0], [2952.0, 5675.0], [3048.0, 4528.0], [3056.0, 4734.666666666667], [2976.0, 5702.0], [3000.0, 5222.0], [2992.0, 5663.0], [2984.0, 5117.0], [3024.0, 4624.0], [3008.0, 3032.0], [3032.0, 4771.0], [3080.0, 4215.0], [3112.0, 4167.0], [3120.0, 4236.0], [3072.0, 4383.0], [3088.0, 4550.0], [3152.0, 3352.0], [3144.0, 3450.0], [3136.0, 4019.5], [3160.0, 3836.0], [3176.0, 1927.0], [3168.0, 3278.0], [3184.0, 3589.0], [3192.0, 3570.0], [3224.0, 2527.0], [3200.0, 3046.0], [3208.0, 3220.5], [3256.0, 2584.0], [3240.0, 2400.0], [3232.0, 2463.0], [3296.0, 2176.0], [3304.0, 1946.6666666666667], [3312.0, 2013.0], [3264.0, 2625.0], [3272.0, 2092.0], [3280.0, 2163.5], [3320.0, 2339.0], [3328.0, 2149.0], [3360.0, 1696.1666666666665], [2153.0, 13243.0], [2169.0, 13075.0], [2121.0, 13415.0], [2129.0, 12363.0], [2161.0, 11955.0], [2065.0, 14226.0], [2057.0, 14386.0], [2049.0, 13354.0], [2105.0, 13587.0], [2097.0, 12656.0], [2089.0, 13721.0], [2081.0, 12916.0], [2137.0, 12270.0], [2193.0, 11903.0], [2281.0, 5822.0], [2185.0, 12847.0], [2201.0, 11850.0], [2225.0, 11363.0], [2217.0, 11531.0], [2209.0, 11642.0], [2297.0, 6278.5], [2265.0, 11227.0], [2249.0, 12463.0], [2241.0, 11253.0], [2289.0, 11946.0], [2273.0, 11152.0], [2313.0, 4312.333333333334], [2425.0, 9496.0], [2337.0, 10367.0], [2353.0, 10332.0], [2305.0, 11675.0], [2361.0, 10640.0], [2377.0, 5424.5], [2401.0, 9833.0], [2329.0, 10575.0], [2321.0, 10472.0], [2409.0, 9690.0], [2393.0, 3785.6666666666665], [2385.0, 10070.0], [2369.0, 10164.0], [2417.0, 9716.0], [2537.0, 9511.0], [2545.0, 9294.0], [2497.0, 8919.0], [2505.0, 8810.0], [2513.0, 8721.0], [2521.0, 9204.0], [2529.0, 8424.0], [2489.0, 9036.0], [2433.0, 9532.0], [2441.0, 10510.0], [2449.0, 9410.0], [2473.0, 9531.0], [2577.0, 8024.0], [2681.0, 7028.0], [2569.0, 9234.0], [2585.0, 8962.0], [2657.0, 8840.0], [2665.0, 8421.666666666666], [2673.0, 8728.0], [2609.0, 7698.0], [2601.0, 8652.5], [2617.0, 8530.0], [2561.0, 10126.0], [2625.0, 8737.0], [2633.0, 7448.0], [2641.0, 8584.0], [2649.0, 8388.0], [2689.0, 7967.0], [2793.0, 7559.0], [2721.0, 7768.0], [2729.0, 7842.0], [2737.0, 6398.0], [2745.0, 6441.0], [2697.0, 7893.5], [2705.0, 8318.0], [2713.0, 6622.0], [2801.0, 7217.0], [2769.0, 5054.5], [2777.0, 7937.0], [2809.0, 7601.0], [2825.0, 3860.5], [2937.0, 5610.0], [2817.0, 7494.0], [2873.0, 6689.0], [2865.0, 6912.0], [2857.0, 6596.0], [2849.0, 7213.0], [2841.0, 6812.0], [2833.0, 7202.0], [2921.0, 5803.0], [2929.0, 3743.5], [2881.0, 6503.5], [2897.0, 5903.0], [2905.0, 6445.0], [3041.0, 4551.0], [2969.0, 5690.0], [3049.0, 4624.0], [3057.0, 3168.0], [2977.0, 3127.0], [3001.0, 2902.5], [2993.0, 4997.0], [2985.0, 5323.0], [2945.0, 5534.0], [2961.0, 5673.333333333333], [3009.0, 1380.3333333333333], [3017.0, 5224.0], [3025.0, 2899.0], [3033.0, 4728.0], [3089.0, 4202.0], [3193.0, 2932.0], [3113.0, 4309.0], [3121.0, 4182.0], [3129.0, 3707.3333333333335], [3073.0, 4371.0], [3081.0, 4544.0], [3145.0, 3817.0], [3137.0, 3507.0], [3161.0, 3484.0], [3169.0, 3357.0], [3177.0, 3064.0], [3185.0, 3327.0], [3209.0, 2915.0], [3217.0, 3001.0], [3201.0, 3396.0], [3257.0, 2441.0], [3249.0, 2638.0], [3241.0, 2655.0], [3233.0, 2880.0], [3225.0, 3172.0], [3297.0, 2231.0], [3305.0, 1672.0], [3313.0, 1696.0], [3265.0, 2807.0], [3273.0, 2289.0], [3281.0, 2508.0], [3321.0, 1838.0], [3329.0, 2257.0], [3337.0, 1995.0], [3385.0, 1815.0], [3369.0, 1848.0], [3361.0, 1523.0], [1081.0, 24675.0], [1085.0, 24918.0], [1073.0, 24967.0], [1069.0, 24878.0], [1061.0, 25067.0], [1053.0, 24852.0], [1045.0, 24902.0], [1041.0, 24923.0], [1037.0, 25215.0], [1025.0, 25042.0], [1101.0, 24722.0], [1141.0, 24504.0], [1137.0, 24240.0], [1129.0, 24134.0], [1125.0, 24365.0], [1121.0, 24571.0], [1117.0, 24337.0], [1113.0, 23939.0], [1105.0, 24755.0], [1097.0, 24808.0], [1093.0, 25148.0], [1089.0, 24757.5], [1209.0, 22784.0], [1213.0, 23483.0], [1205.0, 23575.0], [1201.0, 23666.5], [1197.0, 23825.0], [1193.0, 23968.5], [1189.0, 23748.0], [1185.0, 23917.0], [1181.0, 23847.0], [1153.0, 24408.0], [1161.0, 23336.0], [1157.0, 24087.5], [1177.0, 23923.0], [1169.0, 24077.0], [1229.0, 23400.0], [1269.0, 22950.0], [1273.0, 22808.0], [1265.0, 22893.0], [1249.0, 23028.0], [1245.0, 22363.0], [1237.0, 23369.0], [1233.0, 23313.0], [1225.0, 23382.0], [1217.0, 23105.0], [1337.0, 22133.5], [1341.0, 22070.5], [1333.0, 22170.0], [1329.0, 22356.0], [1325.0, 22274.5], [1321.0, 22387.5], [1317.0, 21534.0], [1309.0, 22123.5], [1281.0, 22712.0], [1293.0, 22619.0], [1289.0, 22881.5], [1305.0, 22056.5], [1301.0, 22741.0], [1297.0, 21770.0], [1401.0, 21520.0], [1405.0, 21475.0], [1397.0, 21654.0], [1393.0, 21270.5], [1389.0, 21603.0], [1385.0, 21699.0], [1377.0, 21732.5], [1369.0, 21945.0], [1345.0, 22087.5], [1353.0, 21977.0], [1349.0, 22053.0], [1365.0, 21996.0], [1361.0, 21072.0], [1465.0, 20921.0], [1469.0, 20654.0], [1461.0, 20747.0], [1457.0, 20840.0], [1453.0, 20913.0], [1449.0, 20972.0], [1445.0, 21184.0], [1441.0, 21073.0], [1437.0, 21120.0], [1409.0, 20625.0], [1417.0, 21300.0], [1413.0, 21344.0], [1429.0, 21274.0], [1425.0, 21405.5], [1529.0, 20039.0], [1533.0, 19956.0], [1525.0, 20130.0], [1485.0, 20468.5], [1477.0, 20583.0], [1473.0, 20545.0], [1517.0, 20198.0], [1513.0, 20430.0], [1509.0, 20458.0], [1497.0, 20569.0], [1493.0, 20436.5], [1489.0, 20406.0], [1589.0, 18557.0], [1585.0, 19374.0], [1597.0, 19217.0], [1569.0, 19535.0], [1593.0, 18386.0], [1537.0, 19852.0], [1545.0, 19455.5], [1549.0, 18908.0], [1565.0, 19615.5], [1561.0, 19618.0], [1557.0, 19738.0], [1581.0, 19412.0], [1577.0, 19636.0], [1657.0, 18152.0], [1661.0, 17738.0], [1637.0, 18762.0], [1641.0, 18771.0], [1653.0, 18585.0], [1649.0, 18993.0], [1613.0, 18375.0], [1609.0, 19082.0], [1605.0, 19255.0], [1601.0, 19149.0], [1629.0, 19128.0], [1625.0, 17998.0], [1621.0, 18939.0], [1645.0, 18701.0], [1721.0, 17198.0], [1697.0, 17436.0], [1701.0, 18060.0], [1705.0, 18120.0], [1717.0, 17037.0], [1713.0, 18088.0], [1677.0, 17446.0], [1673.0, 17481.0], [1669.0, 18418.0], [1665.0, 18622.0], [1693.0, 17277.0], [1689.0, 18215.0], [1685.0, 18367.5], [1709.0, 17997.0], [1785.0, 16386.0], [1789.0, 16107.0], [1761.0, 17391.0], [1769.0, 16584.0], [1777.0, 16460.0], [1741.0, 16755.0], [1733.0, 17737.0], [1729.0, 18087.0], [1757.0, 17142.0], [1753.0, 17635.5], [1749.0, 17935.0], [1745.0, 16727.0], [1773.0, 16378.0], [1849.0, 15536.0], [1853.0, 15400.0], [1825.0, 16230.5], [1829.0, 15772.0], [1833.0, 16524.0], [1845.0, 15406.0], [1841.0, 15380.0], [1805.0, 16826.0], [1801.0, 16985.0], [1797.0, 16020.0], [1793.0, 17053.0], [1821.0, 15758.0], [1817.0, 15828.0], [1813.0, 15893.666666666666], [1809.0, 16822.0], [1837.0, 16502.0], [1905.0, 15944.0], [1917.0, 14690.0], [1889.0, 15097.0], [1913.0, 14698.0], [1857.0, 16455.0], [1865.0, 16378.0], [1869.0, 16159.0], [1885.0, 16211.0], [1881.0, 14938.0], [1877.0, 15252.0], [1873.0, 15147.0], [1901.0, 14907.0], [1893.0, 16014.0], [1977.0, 14046.0], [1953.0, 14979.0], [1961.0, 14376.0], [1981.0, 15059.0], [1973.0, 14072.0], [1969.0, 14134.0], [1925.0, 14608.0], [1929.0, 14546.0], [1949.0, 14483.0], [1945.0, 14386.0], [1937.0, 14550.0], [1965.0, 14279.0], [1989.0, 13891.0], [1997.0, 4628.666666666667], [2005.0, 3542.5], [2001.0, 13760.0], [1985.0, 14040.0], [1993.0, 13801.0], [2013.0, 13717.0], [2025.0, 14512.0], [2041.0, 14332.5], [2037.0, 13331.0], [2058.0, 14137.0], [2074.0, 8810.666666666666], [2050.0, 13262.0], [2066.0, 13132.0], [2106.0, 12587.0], [2098.0, 12724.0], [2082.0, 12990.0], [2122.0, 12460.0], [2130.0, 12363.0], [2138.0, 13208.0], [2170.0, 12084.0], [2162.0, 12963.0], [2154.0, 13271.0], [2146.0, 12241.5], [2274.0, 11078.0], [2290.0, 10764.0], [2298.0, 5652.0], [2250.0, 12344.0], [2258.0, 11704.0], [2282.0, 11022.0], [2178.0, 11962.0], [2186.0, 12838.0], [2194.0, 11876.0], [2202.0, 12685.0], [2234.0, 11987.0], [2226.0, 11506.0], [2218.0, 11412.0], [2210.0, 11743.0], [2266.0, 11144.0], [2306.0, 10690.0], [2418.0, 9698.0], [2346.0, 10841.0], [2338.0, 10514.0], [2362.0, 10091.0], [2386.0, 5400.5], [2394.0, 5227.0], [2370.0, 10158.0], [2378.0, 10118.0], [2410.0, 10971.0], [2402.0, 9824.0], [2330.0, 10482.0], [2322.0, 10565.0], [2434.0, 10439.0], [2490.0, 10813.0], [2506.0, 9690.0], [2450.0, 5130.0], [2442.0, 9441.0], [2482.0, 9546.0], [2474.0, 9190.0], [2466.0, 10117.0], [2530.0, 9893.0], [2458.0, 9221.0], [2498.0, 10536.0], [2522.0, 8460.0], [2514.0, 9957.0], [2554.0, 8310.5], [2570.0, 9128.0], [2682.0, 8111.0], [2562.0, 4515.5], [2586.0, 4411.5], [2578.0, 8012.0], [2666.0, 8589.0], [2674.0, 8171.0], [2602.0, 4129.5], [2610.0, 7752.0], [2618.0, 8566.0], [2634.0, 7420.0], [2642.0, 8503.0], [2810.0, 7008.0], [2778.0, 5965.0], [2770.0, 7613.0], [2754.0, 7948.0], [2802.0, 7365.0], [2794.0, 7164.0], [2786.0, 7034.0], [2714.0, 6551.0], [2706.0, 8515.0], [2698.0, 8000.0], [2746.0, 8180.0], [2730.0, 6353.0], [2722.0, 8163.0], [2834.0, 6691.0], [2930.0, 6035.0], [2938.0, 5578.0], [2826.0, 6996.0], [2842.0, 6795.0], [2874.0, 6429.0], [2866.0, 6683.0], [2858.0, 6548.0], [2850.0, 6992.0], [2890.0, 6623.5], [2898.0, 6085.0], [2922.0, 5804.0], [2962.0, 5385.0], [3042.0, 4629.0], [2946.0, 5985.0], [2954.0, 5845.5], [2970.0, 5281.0], [3050.0, 5088.0], [3066.0, 4797.0], [3058.0, 4466.0], [2978.0, 2637.333333333333], [2994.0, 5009.0], [2986.0, 5323.0], [3002.0, 4927.0], [3010.0, 5331.0], [3018.0, 4774.0], [3034.0, 4682.0], [3026.0, 4700.0], [3074.0, 4698.0], [3106.0, 4063.6666666666665], [3114.0, 4343.0], [3130.0, 3667.0], [3082.0, 4181.0], [3090.0, 4124.0], [3154.0, 3367.0], [3138.0, 3652.0], [3162.0, 3648.0], [3170.0, 3568.0], [3098.0, 4333.333333333333], [3178.0, 3703.0], [3186.0, 3199.0], [3194.0, 3522.0], [3210.0, 3063.0], [3202.0, 3014.0], [3218.0, 2835.0], [3258.0, 2361.0], [3250.0, 2924.0], [3242.0, 3056.0], [3234.0, 2815.0], [3298.0, 1838.0], [3314.0, 2123.0], [3266.0, 2790.0], [3274.0, 2212.0], [3282.0, 2481.0], [3338.0, 2116.0], [3354.0, 1602.7142857142856], [3346.0, 2117.0], [3330.0, 1717.0], [3370.0, 1692.0], [3362.0, 1757.0], [2147.0, 12209.0], [2163.0, 12041.0], [2115.0, 12518.333333333334], [2123.0, 12575.0], [2155.0, 12246.0], [2107.0, 12698.0], [2059.0, 13157.0], [2051.0, 13252.0], [2075.0, 13034.0], [2099.0, 12730.0], [2091.0, 12886.0], [2083.0, 13818.0], [2139.0, 13328.0], [2131.0, 12489.0], [2283.0, 6205.5], [2299.0, 10728.0], [2243.0, 12371.0], [2251.0, 12323.0], [2259.0, 11126.0], [2291.0, 10829.0], [2275.0, 11098.0], [2203.0, 11712.0], [2195.0, 11814.0], [2187.0, 11950.0], [2179.0, 11955.0], [2235.0, 12409.0], [2227.0, 11337.0], [2219.0, 11464.0], [2211.0, 11811.0], [2267.0, 11062.0], [2307.0, 11521.0], [2403.0, 11594.0], [2339.0, 10475.0], [2347.0, 11288.0], [2355.0, 10278.0], [2323.0, 10645.0], [2331.0, 10485.0], [2363.0, 11101.0], [2371.0, 10092.0], [2379.0, 10047.0], [2387.0, 10872.0], [2419.0, 10627.0], [2411.0, 10887.0], [2555.0, 8286.0], [2507.0, 8675.0], [2499.0, 9822.0], [2515.0, 8500.0], [2523.0, 8408.0], [2547.0, 8373.0], [2531.0, 8366.0], [2459.0, 9328.0], [2451.0, 10804.0], [2435.0, 10609.0], [2491.0, 9008.0], [2483.0, 8984.0], [2475.0, 9044.0], [2467.0, 9198.0], [2579.0, 7921.0], [2571.0, 8981.0], [2587.0, 7859.0], [2659.0, 7888.0], [2675.0, 8791.0], [2563.0, 4665.5], [2611.0, 5150.5], [2595.0, 8812.333333333334], [2619.0, 8540.0], [2627.0, 8635.0], [2643.0, 9258.0], [2683.0, 8534.0], [2691.0, 8388.0], [2811.0, 7478.0], [2723.0, 7860.0], [2739.0, 7974.0], [2747.0, 7623.0], [2699.0, 7963.0], [2707.0, 8320.0], [2715.0, 6628.0], [2787.0, 7790.0], [2795.0, 7729.0], [2771.0, 6201.0], [2755.0, 7596.0], [2763.0, 7749.0], [2803.0, 7354.0], [2819.0, 6949.0], [2835.0, 7101.0], [2875.0, 6699.0], [2867.0, 6525.0], [2859.0, 6591.0], [2851.0, 7217.0], [2915.0, 5905.0], [2843.0, 6940.0], [2827.0, 7017.0], [2923.0, 6028.0], [2931.0, 3767.5], [2883.0, 6085.5], [2899.0, 6219.0], [2907.0, 6097.5], [2939.0, 5626.0], [2947.0, 5977.0], [2971.0, 5579.0], [3043.0, 4913.0], [3051.0, 5113.0], [3059.0, 4622.0], [2995.0, 5134.0], [2987.0, 5131.0], [2979.0, 5418.0], [3003.0, 5452.0], [2955.0, 5313.0], [3011.0, 4981.5], [3019.0, 4802.0], [3035.0, 4826.0], [3027.0, 5293.0], [3083.0, 4339.0], [3091.0, 1176.0], [3107.0, 3877.0], [3123.0, 3949.5], [3075.0, 4296.0], [3155.0, 3302.0], [3139.0, 3871.0], [3163.0, 3357.0], [3171.0, 3296.0], [3099.0, 4266.0], [3187.0, 3632.0], [3195.0, 2949.0], [3211.0, 2858.0], [3203.0, 2707.0], [3307.0, 1691.4285714285713], [3219.0, 3074.0], [3259.0, 2347.0], [3251.0, 2930.0], [3235.0, 2829.0], [3227.0, 3006.5], [3299.0, 2457.0], [3267.0, 2602.0], [3283.0, 1862.0], [3323.0, 2112.0], [3339.0, 2067.0], [3347.0, 1667.0], [3371.0, 1625.0], [3363.0, 1949.0], [541.0, 31358.0], [543.0, 31337.0], [537.0, 31384.0], [519.0, 30945.0], [517.0, 31280.0], [515.0, 31252.5], [513.0, 30532.0], [535.0, 31063.0], [533.0, 31409.0], [529.0, 31399.5], [527.0, 30902.0], [523.0, 31322.0], [521.0, 31170.0], [573.0, 30956.0], [575.0, 30935.0], [571.0, 30953.0], [569.0, 30828.5], [567.0, 29987.0], [565.0, 30012.0], [563.0, 31052.0], [561.0, 30094.0], [559.0, 30632.0], [547.0, 31316.0], [551.0, 31268.0], [549.0, 30747.0], [557.0, 30208.0], [555.0, 31237.0], [553.0, 30940.0], [605.0, 29661.0], [607.0, 29645.0], [603.0, 29663.0], [601.0, 30551.5], [599.0, 30185.0], [597.0, 30490.0], [595.0, 30454.0], [591.0, 29754.0], [579.0, 30559.0], [577.0, 30585.0], [589.0, 30370.333333333332], [585.0, 30494.0], [637.0, 30001.0], [639.0, 29266.0], [635.0, 29297.0], [633.0, 29741.0], [631.0, 29349.0], [627.0, 30150.0], [625.0, 30076.0], [623.0, 29456.0], [611.0, 30639.5], [609.0, 29610.0], [615.0, 30250.0], [613.0, 30122.0], [621.0, 29474.0], [619.0, 30504.0], [617.0, 30277.0], [669.0, 29225.0], [671.0, 29182.0], [667.0, 28786.0], [665.0, 29735.0], [663.0, 29841.0], [661.0, 29879.0], [659.0, 29912.0], [657.0, 29578.0], [655.0, 29572.0], [643.0, 30256.0], [641.0, 30247.0], [647.0, 30217.5], [645.0, 29217.0], [653.0, 29479.0], [651.0, 30167.0], [649.0, 29864.0], [701.0, 28990.0], [703.0, 29340.0], [697.0, 29374.0], [679.0, 29661.0], [677.0, 28668.0], [675.0, 29242.5], [673.0, 29704.5], [695.0, 29371.0], [693.0, 28814.0], [691.0, 29384.0], [689.0, 29188.0], [687.0, 29111.0], [685.0, 28508.0], [683.0, 29575.0], [681.0, 29647.0], [733.0, 28422.0], [735.0, 28958.0], [731.0, 28390.0], [729.0, 28065.0], [727.0, 29100.0], [725.0, 28849.0], [723.0, 28112.0], [721.0, 29156.0], [719.0, 28881.0], [711.0, 28253.0], [717.0, 28624.0], [715.0, 29237.5], [713.0, 28241.0], [765.0, 27591.5], [767.0, 28322.5], [763.0, 27586.0], [761.0, 27619.5], [759.0, 28051.0], [755.0, 28161.0], [753.0, 28619.0], [749.0, 28144.0], [739.0, 28262.0], [737.0, 27892.0], [743.0, 27834.0], [741.0, 28849.0], [747.0, 27754.0], [745.0, 27794.0], [797.0, 27713.0], [799.0, 28021.0], [795.0, 27975.0], [793.0, 28043.0], [791.0, 27347.0], [789.0, 28035.0], [787.0, 27830.0], [779.0, 27408.0], [775.0, 28204.0], [773.0, 27475.0], [771.0, 27499.0], [769.0, 27520.0], [777.0, 27823.0], [825.0, 27685.0], [829.0, 27616.0], [831.0, 27212.0], [827.0, 27407.0], [823.0, 26944.0], [817.0, 27805.0], [815.0, 27798.0], [803.0, 27903.0], [801.0, 27918.5], [807.0, 27877.0], [805.0, 27966.0], [813.0, 27540.0], [811.0, 27564.0], [861.0, 27017.0], [863.0, 27086.0], [857.0, 27012.5], [839.0, 27001.0], [837.0, 26952.5], [835.0, 27061.0], [833.0, 27415.0], [855.0, 26439.0], [853.0, 27150.0], [849.0, 26935.0], [847.0, 27140.0], [845.0, 26982.0], [843.0, 27252.0], [893.0, 26346.0], [895.0, 26652.0], [891.0, 26686.0], [889.0, 26749.0], [887.0, 26060.0], [885.0, 26555.0], [883.0, 26668.0], [881.0, 26896.0], [879.0, 26686.0], [865.0, 26361.5], [871.0, 26763.0], [869.0, 26862.0], [877.0, 26868.5], [875.0, 26925.0], [873.0, 26908.0], [903.0, 26394.5], [925.0, 26047.0], [923.0, 26243.5], [919.0, 26086.0], [909.0, 26490.0], [907.0, 25812.0], [905.0, 26172.0], [901.0, 26564.0], [899.0, 26630.0], [897.0, 26635.0], [959.0, 26071.0], [957.0, 26190.5], [935.0, 26007.0], [933.0, 26471.0], [931.0, 25998.0], [929.0, 26374.0], [951.0, 25824.0], [949.0, 25871.0], [947.0, 25914.5], [945.0, 25941.0], [943.0, 26216.0], [941.0, 26248.0], [939.0, 26261.0], [989.0, 25788.0], [991.0, 25819.0], [987.0, 25860.0], [985.0, 25778.0], [983.0, 25567.0], [981.0, 25516.0], [979.0, 25594.0], [977.0, 25885.0], [975.0, 25899.0], [961.0, 26019.0], [967.0, 26005.0], [963.0, 25706.0], [973.0, 25603.0], [971.0, 25669.0], [969.0, 25706.0], [1019.0, 25067.0], [1023.0, 25376.0], [1017.0, 25549.0], [999.0, 25339.0], [997.0, 25708.0], [995.0, 25465.0], [993.0, 25730.0], [1015.0, 25317.5], [1013.0, 25511.0], [1011.0, 25594.0], [1009.0, 25317.0], [1007.0, 25273.0], [1005.0, 25300.0], [1003.0, 25638.0], [1001.0, 25356.0], [1082.0, 24952.0], [1086.0, 24890.0], [1074.0, 25020.0], [1070.0, 24746.0], [1066.0, 25044.333333333332], [1058.0, 25108.0], [1054.0, 25124.0], [1050.0, 25108.333333333332], [1038.0, 24517.0], [1034.0, 25425.0], [1146.0, 24336.0], [1150.0, 24122.5], [1142.0, 24181.0], [1138.0, 24349.0], [1134.0, 24486.5], [1130.0, 24458.0], [1126.0, 24654.0], [1122.0, 24547.0], [1110.0, 24221.5], [1094.0, 24896.0], [1090.0, 24903.0], [1102.0, 24857.0], [1098.0, 24814.0], [1210.0, 23598.0], [1214.0, 23476.0], [1206.0, 23594.0], [1166.0, 23524.666666666668], [1158.0, 24140.0], [1154.0, 24100.0], [1198.0, 23847.0], [1194.0, 23861.0], [1190.0, 23754.0], [1186.0, 23937.0], [1182.0, 23938.0], [1178.0, 23993.0], [1170.0, 23978.0], [1274.0, 23035.0], [1278.0, 22389.5], [1270.0, 22945.0], [1266.0, 22932.0], [1262.0, 22814.75], [1258.0, 22817.5], [1254.0, 23132.5], [1250.0, 23035.0], [1246.0, 22334.0], [1222.0, 23035.0], [1218.0, 23460.0], [1230.0, 23356.0], [1226.0, 22642.0], [1242.0, 23204.5], [1238.0, 23264.0], [1234.0, 23407.0], [1338.0, 22100.0], [1342.0, 21249.0], [1334.0, 22085.0], [1330.0, 22185.0], [1326.0, 21446.0], [1318.0, 21510.0], [1314.0, 22091.5], [1306.0, 22673.0], [1286.0, 22696.5], [1282.0, 22713.0], [1294.0, 22633.0], [1290.0, 22700.0], [1302.0, 22721.0], [1298.0, 22767.0], [1402.0, 21514.0], [1406.0, 21486.0], [1398.0, 21535.0], [1394.0, 21715.0], [1390.0, 21627.0], [1386.0, 21674.0], [1382.0, 21681.0], [1374.0, 21724.5], [1346.0, 22002.0], [1358.0, 22026.0], [1354.0, 21183.0], [1370.0, 21850.0], [1366.0, 21801.0], [1362.0, 21826.0], [1466.0, 19917.0], [1470.0, 20630.0], [1462.0, 20744.0], [1414.0, 21573.0], [1454.0, 20833.0], [1450.0, 20992.0], [1446.0, 21112.0], [1442.0, 21067.0], [1438.0, 21117.0], [1434.0, 21349.0], [1430.0, 21200.0], [1426.0, 21262.0], [1530.0, 20059.0], [1534.0, 19090.0], [1526.0, 20457.0], [1522.0, 20227.0], [1518.0, 20184.0], [1514.0, 20237.0], [1510.0, 20252.0], [1506.0, 20315.0], [1502.0, 20337.5], [1478.0, 20446.0], [1474.0, 20497.0], [1486.0, 19737.0], [1482.0, 20595.5], [1498.0, 20325.0], [1494.0, 20332.0], [1490.0, 20475.0], [1586.0, 19387.0], [1594.0, 18467.0], [1570.0, 19962.0], [1578.0, 19604.0], [1590.0, 19329.0], [1550.0, 19695.0], [1546.0, 19773.0], [1542.0, 19976.5], [1566.0, 19644.0], [1562.0, 19671.0], [1558.0, 18869.0], [1554.0, 19731.5], [1582.0, 19490.0], [1654.0, 18734.0], [1650.0, 17815.0], [1662.0, 18559.0], [1638.0, 17955.0], [1634.0, 18908.5], [1642.0, 18742.0], [1658.0, 18581.0], [1614.0, 19039.0], [1610.0, 19060.0], [1606.0, 18179.0], [1602.0, 19135.0], [1630.0, 18819.0], [1626.0, 19136.0], [1622.0, 18037.0], [1618.0, 18639.5], [1646.0, 18680.0], [1722.0, 17991.0], [1714.0, 17982.0], [1726.0, 17639.666666666668], [1698.0, 18234.0], [1706.0, 17253.0], [1702.0, 17241.0], [1718.0, 17877.0], [1678.0, 18428.0], [1674.0, 17578.0], [1670.0, 18369.0], [1666.0, 18606.0], [1694.0, 18300.0], [1686.0, 18261.0], [1682.0, 18340.5], [1710.0, 17104.0], [1786.0, 16161.0], [1790.0, 16096.0], [1766.0, 16850.666666666668], [1762.0, 17508.0], [1770.0, 17365.0], [1782.0, 16792.0], [1778.0, 17247.0], [1758.0, 17524.0], [1730.0, 18050.0], [1734.0, 16935.0], [1738.0, 17196.0], [1754.0, 16849.0], [1774.0, 17288.0], [1802.0, 17144.0], [1854.0, 16335.0], [1830.0, 16623.0], [1806.0, 15839.0], [1798.0, 16148.0], [1794.0, 16028.0], [1822.0, 15810.0], [1818.0, 15792.0], [1814.0, 15853.0], [1810.0, 16723.0], [1838.0, 15635.0], [1834.0, 15643.0], [1914.0, 15927.0], [1918.0, 14672.0], [1890.0, 14946.0], [1894.0, 15074.0], [1898.0, 14954.0], [1910.0, 14783.5], [1906.0, 14731.0], [1862.0, 15369.5], [1866.0, 16084.0], [1870.0, 15285.0], [1882.0, 15094.0], [1874.0, 16038.0], [1902.0, 14915.0], [1974.0, 15230.0], [1970.0, 14311.0], [1982.0, 13961.0], [1954.0, 15394.0], [1958.0, 14206.5], [1962.0, 14398.0], [1978.0, 14021.0], [1934.0, 14949.0], [1930.0, 15418.0], [1926.0, 15593.0], [1922.0, 15109.5], [1950.0, 15261.0], [1946.0, 14278.0], [1942.0, 14436.666666666666], [1938.0, 14446.0], [1966.0, 15128.0], [2042.0, 13391.0], [2046.0, 13838.0], [2022.0, 13511.0], [2026.0, 14337.0], [2038.0, 13251.0], [2034.0, 13334.0], [2014.0, 13585.0], [1986.0, 13900.0], [1990.0, 13887.0], [1994.0, 13850.0], [1998.0, 13728.0], [2010.0, 14258.333333333334], [2006.0, 13696.0], [2002.0, 14807.0], [2030.0, 13990.5], [2060.0, 6753.0], [2156.0, 6284.0], [2108.0, 12506.0], [2052.0, 13170.0], [2100.0, 13867.0], [2092.0, 12897.0], [2172.0, 12474.5], [2124.0, 12432.0], [2132.0, 13235.0], [2140.0, 12169.0], [2164.0, 13112.0], [2148.0, 12317.0], [2076.0, 13032.0], [2068.0, 13077.5], [2284.0, 5770.5], [2220.0, 1858.0], [2212.0, 12710.0], [2300.0, 1557.4166666666665], [2244.0, 11267.0], [2252.0, 11251.0], [2260.0, 11236.0], [2292.0, 12507.0], [2276.0, 11124.0], [2204.0, 11821.0], [2196.0, 11789.0], [2188.0, 13019.0], [2236.0, 11319.0], [2316.0, 8374.25], [2308.0, 10504.0], [2356.0, 10235.0], [2340.0, 10467.0], [2404.0, 5357.0], [2332.0, 11346.0], [2324.0, 10462.0], [2428.0, 10367.333333333334], [2388.0, 11055.0], [2396.0, 10609.5], [2420.0, 9689.0], [2412.0, 9730.0], [2460.0, 9220.0], [2532.0, 8505.0], [2492.0, 9886.0], [2484.0, 10194.0], [2476.0, 9038.0], [2468.0, 10034.0], [2444.0, 9844.5], [2436.0, 9459.0], [2500.0, 8946.0], [2508.0, 8717.0], [2524.0, 8472.0], [2556.0, 9217.0], [2540.0, 8705.333333333334], [2572.0, 7962.0], [2580.0, 7929.0], [2564.0, 2539.5], [2660.0, 8528.0], [2668.0, 7849.5], [2676.0, 6980.0], [2596.0, 8917.0], [2604.0, 9382.5], [2620.0, 7679.0], [2628.0, 7476.0], [2636.0, 8588.5], [2644.0, 7364.0], [2652.0, 8717.666666666666], [2684.0, 7021.0], [2756.0, 8087.0], [2812.0, 6875.0], [2780.0, 6790.0], [2772.0, 7755.0], [2764.0, 8024.0], [2804.0, 6996.0], [2796.0, 7741.0], [2788.0, 7586.0], [2708.0, 6680.0], [2692.0, 8682.0], [2740.0, 8224.0], [2732.0, 7848.0], [2844.0, 1267.0], [2828.0, 7137.0], [2876.0, 6232.0], [2868.0, 6497.0], [2860.0, 6627.0], [2852.0, 7034.0], [2892.0, 4567.333333333333], [2884.0, 6216.0], [2908.0, 6012.0], [2940.0, 5708.0], [2932.0, 5555.0], [2924.0, 6326.0], [2916.0, 5801.0], [2956.0, 5455.0], [2948.0, 5736.0], [2964.0, 5652.0], [2972.0, 5266.0], [3052.0, 4675.0], [3068.0, 4707.0], [3060.0, 4960.0], [2996.0, 5319.0], [2988.0, 5286.0], [3004.0, 4898.0], [3020.0, 5303.0], [3036.0, 4936.0], [3076.0, 4958.0], [3108.0, 3762.0], [3116.0, 3763.5], [3132.0, 3873.0], [3084.0, 4246.0], [3156.0, 3773.0], [3148.0, 3715.6666666666665], [3140.0, 3444.0], [3164.0, 3666.0], [3172.0, 3463.0], [3100.0, 3818.0], [3092.0, 4293.5], [3180.0, 3682.5], [3188.0, 3604.0], [3196.0, 2993.0], [3212.0, 3236.0], [3220.0, 2451.5], [3204.0, 2904.0], [3260.0, 2276.0], [3252.0, 2377.0], [3236.0, 2404.0], [3228.0, 2982.0], [3300.0, 1942.0], [3308.0, 1734.0], [3316.0, 1934.5], [3268.0, 2498.0], [3276.0, 2298.0], [3284.0, 2518.0], [3292.0, 2246.8333333333335], [3348.0, 1644.4], [3332.0, 1858.5], [3372.0, 1725.0], [3364.0, 1939.0], [2165.0, 12952.0], [2173.0, 13055.0], [2117.0, 12523.5], [2125.0, 13368.0], [2133.0, 12234.0], [2157.0, 12104.0], [2149.0, 12168.0], [2077.0, 12988.0], [2069.0, 13243.0], [2061.0, 13159.0], [2053.0, 14415.0], [2109.0, 12729.0], [2101.0, 12609.0], [2093.0, 12785.0], [2141.0, 12177.0], [2197.0, 2698.6], [2285.0, 10962.0], [2189.0, 12028.0], [2237.0, 11289.0], [2229.0, 12379.5], [2221.0, 12498.0], [2213.0, 11632.0], [2205.0, 6544.0], [2293.0, 6279.5], [2301.0, 11545.0], [2269.0, 12081.0], [2261.0, 11052.0], [2253.0, 11340.0], [2245.0, 11326.0], [2277.0, 11134.0], [2333.0, 10499.0], [2405.0, 6119.0], [2349.0, 3636.142857142857], [2365.0, 10760.5], [2309.0, 10713.0], [2325.0, 10498.0], [2317.0, 10523.0], [2389.0, 9913.0], [2381.0, 10640.0], [2397.0, 9808.0], [2429.0, 9518.0], [2373.0, 10732.0], [2421.0, 9637.0], [2549.0, 8459.0], [2501.0, 8853.0], [2509.0, 8631.0], [2557.0, 8226.0], [2541.0, 8418.0], [2533.0, 8327.0], [2437.0, 10526.0], [2445.0, 10278.0], [2461.0, 9210.0], [2485.0, 9067.0], [2477.0, 9020.0], [2573.0, 9209.0], [2661.0, 7219.0], [2565.0, 4633.5], [2581.0, 8025.0], [2589.0, 7764.0], [2669.0, 9047.0], [2605.0, 9500.0], [2597.0, 8684.0], [2621.0, 8670.0], [2629.0, 8784.0], [2645.0, 8719.0], [2653.0, 7376.0], [2685.0, 7819.0], [2677.0, 8305.0], [2693.0, 8709.0], [2725.0, 3399.2], [2733.0, 6410.0], [2741.0, 8159.0], [2701.0, 8303.0], [2709.0, 7737.0], [2717.0, 8339.0], [2749.0, 7098.0], [2765.0, 4373.5], [2773.0, 7547.0], [2781.0, 7393.0], [2757.0, 7800.0], [2805.0, 7014.0], [2837.0, 6920.5], [2877.0, 6136.0], [2869.0, 6378.0], [2861.0, 6459.0], [2845.0, 7041.5], [2829.0, 7123.0], [2925.0, 6338.0], [2893.0, 6512.0], [2909.0, 6470.0], [2941.0, 6047.0], [2933.0, 6050.0], [2957.0, 5398.0], [3045.0, 4802.5], [3061.0, 4337.0], [2973.0, 5320.0], [3053.0, 4798.0], [3069.0, 4559.0], [2989.0, 5005.0], [2981.0, 5484.5], [3005.0, 5159.0], [2965.0, 5886.0], [3021.0, 4721.0], [3037.0, 5188.0], [3029.0, 4976.0], [3197.0, 3291.0], [3125.0, 4043.0], [3077.0, 4393.0], [3133.0, 4166.0], [3157.0, 3516.0], [3149.0, 3894.0], [3141.0, 4056.0], [3165.0, 3408.0], [3173.0, 3317.0], [3101.0, 4445.0], [3093.0, 4398.0], [3181.0, 3151.0], [3189.0, 3186.0], [3229.0, 3109.0], [3213.0, 3246.0], [3205.0, 3131.0], [3253.0, 2361.0], [3245.0, 2514.6666666666665], [3237.0, 2813.0], [3301.0, 2219.0], [3309.0, 2414.0], [3317.0, 2383.0], [3269.0, 2613.0], [3277.0, 2315.0], [3285.0, 2115.0], [3293.0, 2484.0], [3341.0, 1695.5], [3333.0, 1780.0], [3373.0, 1609.0], [1079.0, 24863.666666666668], [1087.0, 24610.0], [1075.0, 25286.0], [1039.0, 25521.0], [1035.0, 25227.0], [1031.0, 25203.333333333332], [1027.0, 25153.0], [1067.0, 25092.0], [1063.0, 24957.0], [1059.0, 25076.0], [1055.0, 25143.0], [1051.0, 25185.0], [1047.0, 25142.5], [1043.0, 25121.0], [1103.0, 24834.0], [1147.0, 24197.0], [1151.0, 24222.0], [1139.0, 24513.0], [1131.0, 24388.0], [1119.0, 24615.0], [1115.0, 24706.5], [1111.0, 24346.0], [1107.0, 24405.5], [1099.0, 24088.0], [1095.0, 24933.0], [1211.0, 23516.0], [1215.0, 22700.0], [1207.0, 23580.0], [1203.0, 23807.5], [1199.0, 23695.0], [1195.0, 23817.0], [1191.0, 23737.0], [1187.0, 23966.0], [1175.0, 23975.333333333332], [1155.0, 24174.0], [1163.0, 24059.0], [1159.0, 24007.0], [1279.0, 22991.0], [1275.0, 22812.0], [1271.0, 22872.0], [1263.0, 22859.0], [1247.0, 23145.0], [1243.0, 23152.0], [1231.0, 23364.0], [1223.0, 23659.0], [1339.0, 22294.0], [1343.0, 22049.0], [1335.0, 21308.0], [1291.0, 22855.0], [1287.0, 22662.0], [1283.0, 22936.0], [1323.0, 22396.5], [1319.0, 22318.0], [1315.0, 21541.0], [1311.0, 22410.0], [1307.0, 22382.0], [1303.0, 22438.0], [1299.0, 22763.0], [1403.0, 21535.0], [1407.0, 21706.0], [1399.0, 21532.0], [1395.0, 21567.0], [1391.0, 21587.0], [1387.0, 21627.0], [1383.0, 21693.0], [1379.0, 21708.0], [1375.0, 21689.0], [1351.0, 22130.333333333332], [1347.0, 21210.0], [1359.0, 21103.0], [1355.0, 21167.0], [1371.0, 21805.0], [1367.0, 21736.0], [1363.0, 21807.0], [1467.0, 20721.0], [1471.0, 20621.0], [1463.0, 20793.0], [1459.0, 20839.5], [1455.0, 20970.0], [1451.0, 20225.0], [1447.0, 21139.0], [1443.0, 21296.0], [1439.0, 21317.0], [1411.0, 21364.0], [1423.0, 21420.666666666668], [1419.0, 21342.0], [1435.0, 21546.0], [1431.0, 21304.0], [1427.0, 20449.0], [1531.0, 19975.0], [1535.0, 19814.0], [1527.0, 20070.0], [1523.0, 20496.0], [1519.0, 20185.0], [1515.0, 20176.0], [1511.0, 20442.0], [1503.0, 20434.0], [1475.0, 20618.0], [1483.0, 20515.0], [1479.0, 20475.0], [1499.0, 19638.0], [1495.0, 20343.0], [1491.0, 20439.0], [1543.0, 19861.0], [1599.0, 19197.0], [1575.0, 19598.333333333332], [1591.0, 18380.0], [1567.0, 19637.0], [1547.0, 19830.0], [1563.0, 18787.0], [1559.0, 19725.0], [1555.0, 19807.0], [1583.0, 19369.0], [1579.0, 18730.0], [1651.0, 18711.0], [1663.0, 18499.0], [1635.0, 18796.0], [1639.0, 18757.0], [1643.0, 18729.0], [1659.0, 18684.0], [1615.0, 19352.0], [1611.0, 19056.0], [1607.0, 18966.0], [1603.0, 19082.0], [1631.0, 19091.0], [1627.0, 17968.0], [1619.0, 19080.0], [1647.0, 17795.0], [1723.0, 18129.0], [1715.0, 17131.0], [1727.0, 17940.0], [1699.0, 17229.0], [1703.0, 18097.0], [1707.0, 18038.0], [1719.0, 17999.0], [1679.0, 18433.0], [1675.0, 18375.0], [1671.0, 18435.0], [1667.0, 17591.0], [1695.0, 18180.0], [1687.0, 17314.0], [1683.0, 17603.0], [1711.0, 17969.0], [1783.0, 16330.0], [1779.0, 16209.0], [1791.0, 17105.0], [1763.0, 16552.0], [1767.0, 17407.0], [1787.0, 17056.0], [1743.0, 17731.5], [1739.0, 17909.0], [1735.0, 17996.0], [1731.0, 17773.0], [1755.0, 17615.0], [1751.0, 17192.0], [1747.0, 17248.5], [1775.0, 16359.0], [1843.0, 15992.0], [1851.0, 15903.5], [1827.0, 15735.5], [1831.0, 15759.0], [1835.0, 16710.0], [1847.0, 15399.0], [1807.0, 16760.0], [1803.0, 15955.0], [1799.0, 16990.0], [1795.0, 16132.0], [1823.0, 15815.0], [1819.0, 16861.0], [1839.0, 16494.0], [1907.0, 15867.0], [1915.0, 14720.0], [1891.0, 14947.0], [1911.0, 15899.0], [1887.0, 15440.5], [1863.0, 16263.0], [1859.0, 15357.0], [1867.0, 15345.0], [1871.0, 15092.0], [1883.0, 14930.0], [1879.0, 15545.5], [1903.0, 14988.0], [1899.0, 14890.0], [1979.0, 14150.0], [1983.0, 15095.0], [1959.0, 14377.0], [1963.0, 15175.0], [1975.0, 15192.0], [1971.0, 14268.0], [1951.0, 14428.0], [1923.0, 15709.0], [1927.0, 14435.0], [1947.0, 14400.0], [1943.0, 14388.0], [1939.0, 14514.0], [1967.0, 14227.0], [1987.0, 15010.0], [2039.0, 13244.0], [2011.0, 14644.0], [2007.0, 13625.0], [2015.0, 13658.0], [1991.0, 14758.0], [1995.0, 14806.0], [2047.0, 13196.0], [2019.0, 13791.5], [2023.0, 13461.0], [2043.0, 13298.0], [2035.0, 13385.0], [1999.0, 13674.0], [2031.0, 14474.0], [2027.0, 13487.0], [2054.0, 13344.0], [2158.0, 375.0], [2110.0, 13657.0], [2062.0, 13231.0], [2070.0, 12973.0], [2102.0, 12662.0], [2094.0, 12822.0], [2086.0, 13200.0], [2174.0, 13151.0], [2126.0, 13548.0], [2134.0, 12240.0], [2166.0, 12113.0], [2150.0, 12170.0], [2286.0, 11832.0], [2294.0, 5689.5], [2302.0, 10710.0], [2246.0, 11274.0], [2254.0, 11310.0], [2278.0, 10917.0], [2238.0, 12376.0], [2182.0, 12239.0], [2190.0, 12005.0], [2198.0, 11787.0], [2206.0, 11755.0], [2230.0, 11387.0], [2222.0, 12478.0], [2214.0, 11721.0], [2262.0, 11129.0], [2366.0, 10255.0], [2310.0, 6075.5], [2350.0, 5563.5], [2342.0, 10843.0], [2358.0, 10886.0], [2390.0, 10859.0], [2430.0, 9551.0], [2374.0, 11884.0], [2382.0, 9979.0], [2414.0, 9776.0], [2406.0, 9849.0], [2334.0, 10377.0], [2318.0, 11624.0], [2454.0, 9663.333333333334], [2462.0, 10993.0], [2494.0, 9087.5], [2438.0, 11076.0], [2446.0, 9357.0], [2486.0, 9116.0], [2470.0, 9737.5], [2558.0, 8366.0], [2502.0, 10684.0], [2510.0, 9825.0], [2526.0, 9404.0], [2542.0, 8394.0], [2582.0, 7964.0], [2662.0, 7288.0], [2566.0, 9006.0], [2670.0, 7151.0], [2598.0, 7798.0], [2614.0, 8588.666666666666], [2622.0, 8641.0], [2630.0, 4771.5], [2638.0, 8112.5], [2646.0, 7471.0], [2654.0, 8480.0], [2686.0, 8752.0], [2678.0, 7030.0], [2758.0, 6171.0], [2814.0, 7290.5], [2782.0, 1099.0], [2774.0, 7331.0], [2766.0, 7390.0], [2798.0, 7554.0], [2790.0, 7234.5], [2710.0, 7925.0], [2702.0, 8335.0], [2694.0, 6766.0], [2742.0, 7710.0], [2734.0, 7545.0], [2726.0, 7932.0], [2830.0, 4196.5], [2822.0, 7212.0], [2838.0, 6417.0], [2878.0, 6778.0], [2870.0, 6243.0], [2862.0, 6372.0], [2854.0, 6809.0], [2886.0, 6348.5], [2902.0, 6100.666666666667], [2910.0, 6305.0], [2942.0, 2394.0], [2934.0, 6214.0], [2926.0, 6300.0], [2918.0, 6089.0], [2958.0, 5251.0], [2950.0, 4225.0], [2966.0, 5868.0], [2974.0, 5839.0], [3070.0, 4974.0], [2998.0, 5535.0], [2990.0, 4984.0], [2982.0, 5457.0], [3006.0, 5343.0], [3022.0, 4654.0], [3038.0, 4576.0], [3030.0, 5205.0], [3078.0, 4402.0], [3110.0, 3858.0], [3126.0, 4029.0], [3134.0, 3815.0], [3086.0, 4443.0], [3158.0, 2657.0], [3150.0, 3328.0], [3142.0, 4113.0], [3166.0, 3766.0], [3174.0, 3490.0], [3102.0, 4341.0], [3094.0, 3864.0], [3182.0, 3486.0], [3190.0, 3613.0], [3198.0, 3083.0], [3222.0, 3099.0], [3326.0, 2242.0], [3206.0, 3100.0], [3214.0, 2778.0], [3262.0, 2529.5], [3254.0, 2238.0], [3238.0, 2411.0], [3302.0, 1819.0], [3310.0, 1720.3333333333333], [3318.0, 1745.0], [3278.0, 2573.0], [3286.0, 2019.0], [3294.0, 2426.0], [3334.0, 1962.0], [3390.0, 1811.0], [3366.0, 1646.0], [2159.0, 12089.5], [2167.0, 12940.0], [2119.0, 12478.0], [2127.0, 13490.0], [2151.0, 12175.0], [2071.0, 13068.0], [2063.0, 14301.0], [2079.0, 12986.5], [2103.0, 12714.0], [2095.0, 12752.0], [2087.0, 12720.0], [2143.0, 12218.5], [2135.0, 13230.0], [2295.0, 10838.0], [2303.0, 10599.0], [2255.0, 11278.0], [2263.0, 11130.0], [2287.0, 10879.0], [2207.0, 12767.0], [2199.0, 11917.0], [2191.0, 11850.0], [2239.0, 11413.0], [2231.0, 11331.0], [2223.0, 12476.0], [2215.0, 11696.0], [2271.0, 11543.5], [2367.0, 11288.0], [2423.0, 10081.0], [2343.0, 3957.6666666666665], [2351.0, 10301.0], [2359.0, 10161.0], [2311.0, 12063.0], [2327.0, 11055.5], [2431.0, 10652.0], [2375.0, 10180.0], [2383.0, 9992.0], [2415.0, 9855.0], [2399.0, 9890.0], [2391.0, 9927.0], [2543.0, 8332.0], [2551.0, 9268.5], [2559.0, 8214.0], [2503.0, 8782.0], [2511.0, 8702.0], [2519.0, 8749.0], [2463.0, 9121.0], [2455.0, 9191.0], [2447.0, 9396.0], [2439.0, 9458.0], [2495.0, 8872.0], [2487.0, 9102.0], [2479.0, 10498.5], [2471.0, 9234.0], [2575.0, 9525.0], [2567.0, 8978.0], [2583.0, 9289.0], [2591.0, 8659.0], [2671.0, 8855.0], [2607.0, 8137.5], [2599.0, 8796.0], [2615.0, 8710.0], [2623.0, 9131.0], [2687.0, 8745.0], [2639.0, 7409.0], [2647.0, 8292.0], [2679.0, 8336.0], [2695.0, 8275.0], [2727.0, 6589.0], [2743.0, 7974.0], [2751.0, 7002.5], [2703.0, 8201.0], [2711.0, 7878.0], [2791.0, 7584.0], [2799.0, 7518.0], [2775.0, 7132.0], [2783.0, 7204.0], [2815.0, 7514.0], [2759.0, 7810.0], [2807.0, 7091.5], [2831.0, 6755.0], [2879.0, 6108.0], [2871.0, 6631.0], [2863.0, 6499.0], [2855.0, 6643.0], [2839.0, 7318.0], [2919.0, 6355.0], [2943.0, 5462.0], [2895.0, 6112.0], [2903.0, 5797.0], [2935.0, 6191.0], [3047.0, 4619.5], [2975.0, 5637.0], [3063.0, 4621.5], [2999.0, 4972.0], [2991.0, 5671.0], [2983.0, 5770.0], [3007.0, 2431.666666666667], [2951.0, 5730.0], [3015.0, 5170.0], [3023.0, 4817.0], [3039.0, 5115.0], [3031.0, 4685.0], [3087.0, 4713.0], [3111.0, 2866.0], [3119.0, 4094.6666666666665], [3079.0, 4194.0], [3151.0, 3591.0], [3143.0, 3814.0], [3159.0, 3822.0], [3167.0, 3827.0], [3175.0, 3218.0], [3103.0, 4172.0], [3095.0, 4010.0], [3183.0, 3676.0], [3191.0, 2981.0], [3199.0, 2858.0], [3223.0, 2925.0], [3263.0, 2826.0], [3215.0, 2697.0], [3255.0, 2850.0], [3247.0, 2376.0], [3239.0, 2560.0], [3231.0, 2685.0], [3311.0, 1624.0], [3327.0, 1931.0], [3271.0, 2184.0], [3295.0, 1907.0], [3319.0, 2035.0], [3375.0, 1320.0], [3335.0, 2179.0], [3367.0, 1746.0], [1.0, 35972.0]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[1720.7911428571479, 17682.551142857115]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3390.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 26680.15, "minX": 1.63068156E12, "maxY": 86520.63333333333, "series": [{"data": [[1.63068156E12, 86520.63333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63068156E12, 26680.15]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068156E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 17682.551142857115, "minX": 1.63068156E12, "maxY": 17682.551142857115, "series": [{"data": [[1.63068156E12, 17682.551142857115]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068156E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 17667.76828571423, "minX": 1.63068156E12, "maxY": 17667.76828571423, "series": [{"data": [[1.63068156E12, 17667.76828571423]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068156E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1077.8451428571427, "minX": 1.63068156E12, "maxY": 1077.8451428571427, "series": [{"data": [[1.63068156E12, 1077.8451428571427]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068156E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 72.0, "minX": 1.63068156E12, "maxY": 36064.0, "series": [{"data": [[1.63068156E12, 36064.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63068156E12, 32614.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63068156E12, 35693.99]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63068156E12, 34319.45]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63068156E12, 72.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63068156E12, 17255.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068156E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 359.0, "minX": 17.0, "maxY": 35888.0, "series": [{"data": [[65.0, 29690.0], [74.0, 22100.0], [79.0, 666.0], [81.0, 14435.0], [80.0, 21540.5], [84.0, 6690.0], [87.0, 15399.0], [86.0, 18762.0], [85.0, 19821.0], [90.0, 2742.5], [88.0, 11338.5], [89.0, 17877.0], [94.0, 4719.0], [95.0, 25579.0], [99.0, 27061.5], [96.0, 34516.5], [101.0, 8453.0], [103.0, 7547.0], [100.0, 23103.5], [107.0, 12265.0], [106.0, 13380.0], [109.0, 32495.0], [120.0, 1795.5], [121.0, 10484.0], [17.0, 359.0], [18.0, 35888.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 121.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 144.0, "minX": 17.0, "maxY": 35881.0, "series": [{"data": [[65.0, 29674.0], [74.0, 22090.5], [79.0, 656.0], [81.0, 14427.0], [80.0, 21528.0], [84.0, 6688.0], [87.0, 15384.0], [86.0, 18758.0], [85.0, 19812.0], [90.0, 2736.0], [88.0, 11336.5], [89.0, 17857.0], [94.0, 4711.5], [95.0, 25573.0], [99.0, 27055.5], [96.0, 34513.5], [101.0, 8437.0], [103.0, 7546.0], [100.0, 23092.5], [107.0, 12262.0], [106.0, 13371.5], [109.0, 32491.0], [120.0, 1714.0], [121.0, 10479.0], [17.0, 144.0], [18.0, 35881.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 121.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 58.333333333333336, "minX": 1.63068156E12, "maxY": 58.333333333333336, "series": [{"data": [[1.63068156E12, 58.333333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068156E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 58.333333333333336, "minX": 1.63068156E12, "maxY": 58.333333333333336, "series": [{"data": [[1.63068156E12, 58.333333333333336]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068156E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 58.333333333333336, "minX": 1.63068156E12, "maxY": 58.333333333333336, "series": [{"data": [[1.63068156E12, 58.333333333333336]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068156E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 58.333333333333336, "minX": 1.63068156E12, "maxY": 58.333333333333336, "series": [{"data": [[1.63068156E12, 58.333333333333336]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068156E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

