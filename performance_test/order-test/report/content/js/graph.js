/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 887.0, "minX": 0.0, "maxY": 54988.0, "series": [{"data": [[0.0, 887.0], [0.1, 1068.0], [0.2, 1171.0], [0.3, 1455.0], [0.4, 1836.0], [0.5, 2170.0], [0.6, 2187.0], [0.7, 4270.0], [0.8, 4750.0], [0.9, 4761.0], [1.0, 4772.0], [1.1, 4797.0], [1.2, 4824.0], [1.3, 4830.0], [1.4, 4843.0], [1.5, 4873.0], [1.6, 4905.0], [1.7, 4927.0], [1.8, 4955.0], [1.9, 4967.0], [2.0, 4979.0], [2.1, 4987.0], [2.2, 4999.0], [2.3, 5033.0], [2.4, 5090.0], [2.5, 5101.0], [2.6, 5165.0], [2.7, 5237.0], [2.8, 5258.0], [2.9, 5262.0], [3.0, 5310.0], [3.1, 5359.0], [3.2, 5374.0], [3.3, 5377.0], [3.4, 5406.0], [3.5, 5456.0], [3.6, 5483.0], [3.7, 5485.0], [3.8, 5504.0], [3.9, 5642.0], [4.0, 5703.0], [4.1, 5731.0], [4.2, 5768.0], [4.3, 5795.0], [4.4, 5833.0], [4.5, 5863.0], [4.6, 5908.0], [4.7, 5919.0], [4.8, 5930.0], [4.9, 5936.0], [5.0, 5948.0], [5.1, 5963.0], [5.2, 6015.0], [5.3, 6024.0], [5.4, 6164.0], [5.5, 6211.0], [5.6, 6253.0], [5.7, 6284.0], [5.8, 6306.0], [5.9, 6310.0], [6.0, 6320.0], [6.1, 6883.0], [6.2, 6905.0], [6.3, 6916.0], [6.4, 6924.0], [6.5, 6931.0], [6.6, 6960.0], [6.7, 6974.0], [6.8, 6984.0], [6.9, 6992.0], [7.0, 7015.0], [7.1, 7025.0], [7.2, 7043.0], [7.3, 7047.0], [7.4, 7055.0], [7.5, 7058.0], [7.6, 7081.0], [7.7, 7096.0], [7.8, 7144.0], [7.9, 7156.0], [8.0, 7167.0], [8.1, 7173.0], [8.2, 7221.0], [8.3, 7301.0], [8.4, 7390.0], [8.5, 7400.0], [8.6, 7410.0], [8.7, 7413.0], [8.8, 7429.0], [8.9, 7435.0], [9.0, 7444.0], [9.1, 7448.0], [9.2, 7457.0], [9.3, 7466.0], [9.4, 7519.0], [9.5, 7541.0], [9.6, 7595.0], [9.7, 7614.0], [9.8, 7652.0], [9.9, 7654.0], [10.0, 7693.0], [10.1, 7725.0], [10.2, 7782.0], [10.3, 7878.0], [10.4, 7948.0], [10.5, 8019.0], [10.6, 8164.0], [10.7, 8259.0], [10.8, 8317.0], [10.9, 8364.0], [11.0, 8409.0], [11.1, 8418.0], [11.2, 8473.0], [11.3, 8547.0], [11.4, 8612.0], [11.5, 8658.0], [11.6, 8734.0], [11.7, 8773.0], [11.8, 8887.0], [11.9, 8989.0], [12.0, 9114.0], [12.1, 9220.0], [12.2, 9287.0], [12.3, 9357.0], [12.4, 9415.0], [12.5, 9505.0], [12.6, 9571.0], [12.7, 9657.0], [12.8, 9695.0], [12.9, 9722.0], [13.0, 9750.0], [13.1, 9854.0], [13.2, 9976.0], [13.3, 10038.0], [13.4, 10084.0], [13.5, 10163.0], [13.6, 10207.0], [13.7, 10236.0], [13.8, 10275.0], [13.9, 10299.0], [14.0, 10374.0], [14.1, 10395.0], [14.2, 10475.0], [14.3, 10591.0], [14.4, 10664.0], [14.5, 10670.0], [14.6, 10729.0], [14.7, 10772.0], [14.8, 10835.0], [14.9, 10935.0], [15.0, 10979.0], [15.1, 11110.0], [15.2, 11167.0], [15.3, 11225.0], [15.4, 11404.0], [15.5, 11483.0], [15.6, 11552.0], [15.7, 11581.0], [15.8, 11640.0], [15.9, 11663.0], [16.0, 11728.0], [16.1, 11740.0], [16.2, 11820.0], [16.3, 11871.0], [16.4, 12010.0], [16.5, 12060.0], [16.6, 12137.0], [16.7, 12176.0], [16.8, 12222.0], [16.9, 12285.0], [17.0, 12402.0], [17.1, 12428.0], [17.2, 12460.0], [17.3, 12521.0], [17.4, 12640.0], [17.5, 12662.0], [17.6, 12718.0], [17.7, 12737.0], [17.8, 12783.0], [17.9, 12824.0], [18.0, 12920.0], [18.1, 12936.0], [18.2, 12987.0], [18.3, 13018.0], [18.4, 13042.0], [18.5, 13054.0], [18.6, 13123.0], [18.7, 13142.0], [18.8, 13198.0], [18.9, 13222.0], [19.0, 13270.0], [19.1, 13292.0], [19.2, 13323.0], [19.3, 13342.0], [19.4, 13374.0], [19.5, 13439.0], [19.6, 13510.0], [19.7, 13567.0], [19.8, 13596.0], [19.9, 13659.0], [20.0, 13730.0], [20.1, 13760.0], [20.2, 13823.0], [20.3, 13888.0], [20.4, 14078.0], [20.5, 14132.0], [20.6, 14170.0], [20.7, 14259.0], [20.8, 14298.0], [20.9, 14373.0], [21.0, 14484.0], [21.1, 14547.0], [21.2, 14747.0], [21.3, 15008.0], [21.4, 15060.0], [21.5, 15123.0], [21.6, 15182.0], [21.7, 15235.0], [21.8, 15301.0], [21.9, 15375.0], [22.0, 15458.0], [22.1, 15497.0], [22.2, 15573.0], [22.3, 15613.0], [22.4, 15642.0], [22.5, 15661.0], [22.6, 15686.0], [22.7, 15733.0], [22.8, 15750.0], [22.9, 15765.0], [23.0, 15840.0], [23.1, 15961.0], [23.2, 16036.0], [23.3, 16067.0], [23.4, 16137.0], [23.5, 16264.0], [23.6, 16386.0], [23.7, 16428.0], [23.8, 16465.0], [23.9, 16547.0], [24.0, 16638.0], [24.1, 16669.0], [24.2, 16740.0], [24.3, 16808.0], [24.4, 16848.0], [24.5, 16930.0], [24.6, 16980.0], [24.7, 17008.0], [24.8, 17052.0], [24.9, 17105.0], [25.0, 17177.0], [25.1, 17282.0], [25.2, 17307.0], [25.3, 17454.0], [25.4, 17495.0], [25.5, 17540.0], [25.6, 17579.0], [25.7, 17595.0], [25.8, 17664.0], [25.9, 17685.0], [26.0, 17795.0], [26.1, 17873.0], [26.2, 18006.0], [26.3, 18026.0], [26.4, 18058.0], [26.5, 18225.0], [26.6, 18300.0], [26.7, 18337.0], [26.8, 18426.0], [26.9, 18439.0], [27.0, 18452.0], [27.1, 18499.0], [27.2, 18622.0], [27.3, 18694.0], [27.4, 18746.0], [27.5, 18862.0], [27.6, 19008.0], [27.7, 19057.0], [27.8, 19135.0], [27.9, 19226.0], [28.0, 19357.0], [28.1, 19454.0], [28.2, 19492.0], [28.3, 19566.0], [28.4, 19625.0], [28.5, 19686.0], [28.6, 19773.0], [28.7, 19852.0], [28.8, 19998.0], [28.9, 20023.0], [29.0, 20088.0], [29.1, 20166.0], [29.2, 20254.0], [29.3, 20309.0], [29.4, 20398.0], [29.5, 20417.0], [29.6, 20500.0], [29.7, 20568.0], [29.8, 20688.0], [29.9, 20707.0], [30.0, 20875.0], [30.1, 20920.0], [30.2, 21014.0], [30.3, 21028.0], [30.4, 21065.0], [30.5, 21161.0], [30.6, 21239.0], [30.7, 21312.0], [30.8, 21392.0], [30.9, 21422.0], [31.0, 21507.0], [31.1, 21522.0], [31.2, 21581.0], [31.3, 21632.0], [31.4, 21713.0], [31.5, 21769.0], [31.6, 21928.0], [31.7, 21958.0], [31.8, 21995.0], [31.9, 22043.0], [32.0, 22131.0], [32.1, 22177.0], [32.2, 22257.0], [32.3, 22284.0], [32.4, 22391.0], [32.5, 22438.0], [32.6, 22486.0], [32.7, 22603.0], [32.8, 22658.0], [32.9, 22685.0], [33.0, 22729.0], [33.1, 22816.0], [33.2, 22827.0], [33.3, 22889.0], [33.4, 22904.0], [33.5, 22954.0], [33.6, 22975.0], [33.7, 22995.0], [33.8, 23098.0], [33.9, 23198.0], [34.0, 23282.0], [34.1, 23346.0], [34.2, 23362.0], [34.3, 23423.0], [34.4, 23445.0], [34.5, 23487.0], [34.6, 23538.0], [34.7, 23610.0], [34.8, 23678.0], [34.9, 23721.0], [35.0, 23798.0], [35.1, 23884.0], [35.2, 23902.0], [35.3, 23942.0], [35.4, 24000.0], [35.5, 24084.0], [35.6, 24165.0], [35.7, 24219.0], [35.8, 24239.0], [35.9, 24341.0], [36.0, 24393.0], [36.1, 24446.0], [36.2, 24490.0], [36.3, 24504.0], [36.4, 24547.0], [36.5, 24685.0], [36.6, 24710.0], [36.7, 24895.0], [36.8, 24950.0], [36.9, 24968.0], [37.0, 24987.0], [37.1, 25039.0], [37.2, 25060.0], [37.3, 25124.0], [37.4, 25246.0], [37.5, 25337.0], [37.6, 25386.0], [37.7, 25560.0], [37.8, 25639.0], [37.9, 25677.0], [38.0, 25707.0], [38.1, 25792.0], [38.2, 25840.0], [38.3, 25875.0], [38.4, 25901.0], [38.5, 25932.0], [38.6, 25968.0], [38.7, 26004.0], [38.8, 26040.0], [38.9, 26070.0], [39.0, 26104.0], [39.1, 26220.0], [39.2, 26267.0], [39.3, 26300.0], [39.4, 26335.0], [39.5, 26378.0], [39.6, 26404.0], [39.7, 26443.0], [39.8, 26463.0], [39.9, 26563.0], [40.0, 26661.0], [40.1, 26703.0], [40.2, 26743.0], [40.3, 26775.0], [40.4, 26810.0], [40.5, 26888.0], [40.6, 26903.0], [40.7, 26973.0], [40.8, 27037.0], [40.9, 27077.0], [41.0, 27126.0], [41.1, 27170.0], [41.2, 27202.0], [41.3, 27244.0], [41.4, 27252.0], [41.5, 27307.0], [41.6, 27352.0], [41.7, 27397.0], [41.8, 27429.0], [41.9, 27491.0], [42.0, 27514.0], [42.1, 27557.0], [42.2, 27605.0], [42.3, 27672.0], [42.4, 27771.0], [42.5, 27824.0], [42.6, 27860.0], [42.7, 27885.0], [42.8, 27907.0], [42.9, 27943.0], [43.0, 27993.0], [43.1, 28055.0], [43.2, 28115.0], [43.3, 28197.0], [43.4, 28227.0], [43.5, 28291.0], [43.6, 28376.0], [43.7, 28395.0], [43.8, 28417.0], [43.9, 28444.0], [44.0, 28469.0], [44.1, 28524.0], [44.2, 28572.0], [44.3, 28654.0], [44.4, 28676.0], [44.5, 28714.0], [44.6, 28738.0], [44.7, 28783.0], [44.8, 28820.0], [44.9, 28849.0], [45.0, 28867.0], [45.1, 28901.0], [45.2, 28924.0], [45.3, 28960.0], [45.4, 29000.0], [45.5, 29029.0], [45.6, 29038.0], [45.7, 29133.0], [45.8, 29149.0], [45.9, 29167.0], [46.0, 29319.0], [46.1, 29381.0], [46.2, 29428.0], [46.3, 29472.0], [46.4, 29482.0], [46.5, 29510.0], [46.6, 29522.0], [46.7, 29603.0], [46.8, 29648.0], [46.9, 29765.0], [47.0, 29772.0], [47.1, 29874.0], [47.2, 29905.0], [47.3, 29948.0], [47.4, 29971.0], [47.5, 30033.0], [47.6, 30044.0], [47.7, 30130.0], [47.8, 30156.0], [47.9, 30192.0], [48.0, 30202.0], [48.1, 30232.0], [48.2, 30272.0], [48.3, 30301.0], [48.4, 30308.0], [48.5, 30364.0], [48.6, 30370.0], [48.7, 30445.0], [48.8, 30531.0], [48.9, 30610.0], [49.0, 30627.0], [49.1, 30694.0], [49.2, 30766.0], [49.3, 30828.0], [49.4, 30855.0], [49.5, 30894.0], [49.6, 30959.0], [49.7, 31120.0], [49.8, 31136.0], [49.9, 31199.0], [50.0, 31216.0], [50.1, 31258.0], [50.2, 31306.0], [50.3, 31347.0], [50.4, 31382.0], [50.5, 31473.0], [50.6, 31527.0], [50.7, 31591.0], [50.8, 31611.0], [50.9, 31660.0], [51.0, 31688.0], [51.1, 31710.0], [51.2, 31743.0], [51.3, 31768.0], [51.4, 31780.0], [51.5, 31828.0], [51.6, 31879.0], [51.7, 31929.0], [51.8, 31951.0], [51.9, 31973.0], [52.0, 31989.0], [52.1, 32099.0], [52.2, 32111.0], [52.3, 32141.0], [52.4, 32213.0], [52.5, 32276.0], [52.6, 32299.0], [52.7, 32349.0], [52.8, 32358.0], [52.9, 32404.0], [53.0, 32422.0], [53.1, 32467.0], [53.2, 32515.0], [53.3, 32568.0], [53.4, 32616.0], [53.5, 32766.0], [53.6, 32827.0], [53.7, 32875.0], [53.8, 32908.0], [53.9, 32957.0], [54.0, 32988.0], [54.1, 33032.0], [54.2, 33066.0], [54.3, 33104.0], [54.4, 33126.0], [54.5, 33237.0], [54.6, 33256.0], [54.7, 33310.0], [54.8, 33348.0], [54.9, 33362.0], [55.0, 33399.0], [55.1, 33424.0], [55.2, 33451.0], [55.3, 33489.0], [55.4, 33508.0], [55.5, 33533.0], [55.6, 33588.0], [55.7, 33627.0], [55.8, 33655.0], [55.9, 33750.0], [56.0, 33859.0], [56.1, 33868.0], [56.2, 33881.0], [56.3, 33891.0], [56.4, 33912.0], [56.5, 33957.0], [56.6, 33994.0], [56.7, 34021.0], [56.8, 34046.0], [56.9, 34097.0], [57.0, 34169.0], [57.1, 34182.0], [57.2, 34204.0], [57.3, 34250.0], [57.4, 34292.0], [57.5, 34347.0], [57.6, 34372.0], [57.7, 34428.0], [57.8, 34455.0], [57.9, 34492.0], [58.0, 34503.0], [58.1, 34537.0], [58.2, 34552.0], [58.3, 34591.0], [58.4, 34619.0], [58.5, 34640.0], [58.6, 34670.0], [58.7, 34715.0], [58.8, 34717.0], [58.9, 34771.0], [59.0, 34781.0], [59.1, 34834.0], [59.2, 34847.0], [59.3, 34887.0], [59.4, 34933.0], [59.5, 34975.0], [59.6, 34987.0], [59.7, 35014.0], [59.8, 35068.0], [59.9, 35134.0], [60.0, 35200.0], [60.1, 35310.0], [60.2, 35362.0], [60.3, 35429.0], [60.4, 35441.0], [60.5, 35502.0], [60.6, 35568.0], [60.7, 35717.0], [60.8, 35772.0], [60.9, 35833.0], [61.0, 35864.0], [61.1, 35887.0], [61.2, 35916.0], [61.3, 35993.0], [61.4, 36041.0], [61.5, 36062.0], [61.6, 36075.0], [61.7, 36120.0], [61.8, 36128.0], [61.9, 36187.0], [62.0, 36218.0], [62.1, 36241.0], [62.2, 36265.0], [62.3, 36296.0], [62.4, 36322.0], [62.5, 36375.0], [62.6, 36430.0], [62.7, 36452.0], [62.8, 36488.0], [62.9, 36549.0], [63.0, 36581.0], [63.1, 36613.0], [63.2, 36690.0], [63.3, 36718.0], [63.4, 36769.0], [63.5, 36832.0], [63.6, 36864.0], [63.7, 36956.0], [63.8, 36977.0], [63.9, 37012.0], [64.0, 37057.0], [64.1, 37127.0], [64.2, 37231.0], [64.3, 37289.0], [64.4, 37319.0], [64.5, 37358.0], [64.6, 37380.0], [64.7, 37424.0], [64.8, 37437.0], [64.9, 37490.0], [65.0, 37538.0], [65.1, 37642.0], [65.2, 37674.0], [65.3, 37737.0], [65.4, 37765.0], [65.5, 37782.0], [65.6, 37805.0], [65.7, 37839.0], [65.8, 37859.0], [65.9, 37874.0], [66.0, 37887.0], [66.1, 37925.0], [66.2, 37959.0], [66.3, 38024.0], [66.4, 38031.0], [66.5, 38096.0], [66.6, 38111.0], [66.7, 38167.0], [66.8, 38220.0], [66.9, 38260.0], [67.0, 38295.0], [67.1, 38331.0], [67.2, 38352.0], [67.3, 38369.0], [67.4, 38446.0], [67.5, 38614.0], [67.6, 38667.0], [67.7, 38789.0], [67.8, 38798.0], [67.9, 38812.0], [68.0, 38854.0], [68.1, 38902.0], [68.2, 38936.0], [68.3, 38970.0], [68.4, 39024.0], [68.5, 39070.0], [68.6, 39151.0], [68.7, 39194.0], [68.8, 39244.0], [68.9, 39398.0], [69.0, 39651.0], [69.1, 39711.0], [69.2, 39752.0], [69.3, 39815.0], [69.4, 39825.0], [69.5, 39855.0], [69.6, 39913.0], [69.7, 39982.0], [69.8, 40022.0], [69.9, 40062.0], [70.0, 40077.0], [70.1, 40157.0], [70.2, 40185.0], [70.3, 40217.0], [70.4, 40267.0], [70.5, 40288.0], [70.6, 40306.0], [70.7, 40395.0], [70.8, 40456.0], [70.9, 40606.0], [71.0, 40619.0], [71.1, 40631.0], [71.2, 40658.0], [71.3, 40703.0], [71.4, 40797.0], [71.5, 40888.0], [71.6, 40944.0], [71.7, 40988.0], [71.8, 40996.0], [71.9, 41093.0], [72.0, 41136.0], [72.1, 41164.0], [72.2, 41219.0], [72.3, 41335.0], [72.4, 41360.0], [72.5, 41580.0], [72.6, 41720.0], [72.7, 41824.0], [72.8, 41870.0], [72.9, 41928.0], [73.0, 41975.0], [73.1, 42035.0], [73.2, 42057.0], [73.3, 42129.0], [73.4, 42176.0], [73.5, 42256.0], [73.6, 42275.0], [73.7, 42289.0], [73.8, 42317.0], [73.9, 42338.0], [74.0, 42354.0], [74.1, 42430.0], [74.2, 42461.0], [74.3, 42539.0], [74.4, 42772.0], [74.5, 42845.0], [74.6, 42893.0], [74.7, 42944.0], [74.8, 42960.0], [74.9, 42993.0], [75.0, 43038.0], [75.1, 43115.0], [75.2, 43143.0], [75.3, 43182.0], [75.4, 43193.0], [75.5, 43262.0], [75.6, 43310.0], [75.7, 43363.0], [75.8, 43418.0], [75.9, 43454.0], [76.0, 43526.0], [76.1, 43563.0], [76.2, 43613.0], [76.3, 43648.0], [76.4, 43693.0], [76.5, 43854.0], [76.6, 43893.0], [76.7, 43932.0], [76.8, 43964.0], [76.9, 43988.0], [77.0, 44004.0], [77.1, 44104.0], [77.2, 44128.0], [77.3, 44192.0], [77.4, 44255.0], [77.5, 44271.0], [77.6, 44315.0], [77.7, 44337.0], [77.8, 44351.0], [77.9, 44409.0], [78.0, 44428.0], [78.1, 44436.0], [78.2, 44481.0], [78.3, 44540.0], [78.4, 44570.0], [78.5, 44623.0], [78.6, 44665.0], [78.7, 44699.0], [78.8, 44764.0], [78.9, 44809.0], [79.0, 44866.0], [79.1, 44899.0], [79.2, 44913.0], [79.3, 44945.0], [79.4, 44989.0], [79.5, 45036.0], [79.6, 45123.0], [79.7, 45148.0], [79.8, 45173.0], [79.9, 45240.0], [80.0, 45276.0], [80.1, 45322.0], [80.2, 45334.0], [80.3, 45359.0], [80.4, 45365.0], [80.5, 45379.0], [80.6, 45409.0], [80.7, 45485.0], [80.8, 45520.0], [80.9, 45566.0], [81.0, 45612.0], [81.1, 45671.0], [81.2, 45721.0], [81.3, 45759.0], [81.4, 45770.0], [81.5, 45816.0], [81.6, 45824.0], [81.7, 45847.0], [81.8, 45868.0], [81.9, 45891.0], [82.0, 45912.0], [82.1, 45962.0], [82.2, 46013.0], [82.3, 46048.0], [82.4, 46077.0], [82.5, 46099.0], [82.6, 46136.0], [82.7, 46203.0], [82.8, 46220.0], [82.9, 46269.0], [83.0, 46292.0], [83.1, 46318.0], [83.2, 46335.0], [83.3, 46375.0], [83.4, 46397.0], [83.5, 46422.0], [83.6, 46444.0], [83.7, 46485.0], [83.8, 46496.0], [83.9, 46526.0], [84.0, 46558.0], [84.1, 46615.0], [84.2, 46663.0], [84.3, 46708.0], [84.4, 46713.0], [84.5, 46776.0], [84.6, 46798.0], [84.7, 46824.0], [84.8, 46873.0], [84.9, 46896.0], [85.0, 46936.0], [85.1, 47029.0], [85.2, 47095.0], [85.3, 47168.0], [85.4, 47207.0], [85.5, 47236.0], [85.6, 47270.0], [85.7, 47347.0], [85.8, 47387.0], [85.9, 47449.0], [86.0, 47488.0], [86.1, 47531.0], [86.2, 47570.0], [86.3, 47634.0], [86.4, 47693.0], [86.5, 47725.0], [86.6, 47770.0], [86.7, 47809.0], [86.8, 47832.0], [86.9, 47862.0], [87.0, 47895.0], [87.1, 47922.0], [87.2, 47950.0], [87.3, 47984.0], [87.4, 48009.0], [87.5, 48084.0], [87.6, 48160.0], [87.7, 48202.0], [87.8, 48272.0], [87.9, 48338.0], [88.0, 48360.0], [88.1, 48405.0], [88.2, 48469.0], [88.3, 48557.0], [88.4, 48708.0], [88.5, 48739.0], [88.6, 48757.0], [88.7, 48830.0], [88.8, 48873.0], [88.9, 48908.0], [89.0, 49017.0], [89.1, 49043.0], [89.2, 49082.0], [89.3, 49124.0], [89.4, 49139.0], [89.5, 49222.0], [89.6, 49241.0], [89.7, 49268.0], [89.8, 49287.0], [89.9, 49324.0], [90.0, 49375.0], [90.1, 49413.0], [90.2, 49436.0], [90.3, 49491.0], [90.4, 49598.0], [90.5, 49643.0], [90.6, 49691.0], [90.7, 49713.0], [90.8, 49739.0], [90.9, 49764.0], [91.0, 49811.0], [91.1, 49844.0], [91.2, 49879.0], [91.3, 49925.0], [91.4, 49959.0], [91.5, 50039.0], [91.6, 50120.0], [91.7, 50196.0], [91.8, 50219.0], [91.9, 50268.0], [92.0, 50318.0], [92.1, 50407.0], [92.2, 50489.0], [92.3, 50533.0], [92.4, 50586.0], [92.5, 50625.0], [92.6, 50680.0], [92.7, 50698.0], [92.8, 50720.0], [92.9, 50806.0], [93.0, 50823.0], [93.1, 50853.0], [93.2, 50878.0], [93.3, 50944.0], [93.4, 50974.0], [93.5, 51078.0], [93.6, 51118.0], [93.7, 51175.0], [93.8, 51204.0], [93.9, 51239.0], [94.0, 51273.0], [94.1, 51330.0], [94.2, 51350.0], [94.3, 51374.0], [94.4, 51503.0], [94.5, 51602.0], [94.6, 51619.0], [94.7, 51645.0], [94.8, 51665.0], [94.9, 51725.0], [95.0, 51774.0], [95.1, 51801.0], [95.2, 51819.0], [95.3, 51846.0], [95.4, 51893.0], [95.5, 51953.0], [95.6, 52001.0], [95.7, 52056.0], [95.8, 52112.0], [95.9, 52163.0], [96.0, 52230.0], [96.1, 52248.0], [96.2, 52323.0], [96.3, 52348.0], [96.4, 52380.0], [96.5, 52393.0], [96.6, 52615.0], [96.7, 52627.0], [96.8, 52699.0], [96.9, 52724.0], [97.0, 52796.0], [97.1, 52852.0], [97.2, 52887.0], [97.3, 52910.0], [97.4, 52928.0], [97.5, 52937.0], [97.6, 52967.0], [97.7, 52987.0], [97.8, 53006.0], [97.9, 53035.0], [98.0, 53068.0], [98.1, 53115.0], [98.2, 53161.0], [98.3, 53180.0], [98.4, 53205.0], [98.5, 53237.0], [98.6, 53313.0], [98.7, 53368.0], [98.8, 53500.0], [98.9, 53627.0], [99.0, 53817.0], [99.1, 53893.0], [99.2, 53964.0], [99.3, 53985.0], [99.4, 54198.0], [99.5, 54297.0], [99.6, 54359.0], [99.7, 54383.0], [99.8, 54457.0], [99.9, 54747.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 800.0, "maxY": 31.0, "series": [{"data": [[32900.0, 8.0], [34500.0, 12.0], [33700.0, 1.0], [35300.0, 6.0], [36100.0, 9.0], [36900.0, 6.0], [37700.0, 11.0], [38500.0, 1.0], [39300.0, 3.0], [40100.0, 9.0], [40900.0, 10.0], [41700.0, 4.0], [42500.0, 5.0], [43300.0, 7.0], [44100.0, 9.0], [44900.0, 10.0], [45700.0, 9.0], [46500.0, 9.0], [47300.0, 5.0], [48100.0, 5.0], [48900.0, 3.0], [49700.0, 12.0], [50500.0, 9.0], [51300.0, 9.0], [52100.0, 6.0], [52900.0, 18.0], [53700.0, 1.0], [800.0, 1.0], [1000.0, 4.0], [1100.0, 3.0], [1400.0, 3.0], [1700.0, 1.0], [1800.0, 4.0], [2100.0, 5.0], [4200.0, 4.0], [4600.0, 1.0], [4800.0, 16.0], [4700.0, 13.0], [4900.0, 23.0], [5100.0, 6.0], [5000.0, 9.0], [5200.0, 12.0], [5300.0, 14.0], [5400.0, 14.0], [5600.0, 3.0], [5500.0, 3.0], [5700.0, 13.0], [5800.0, 9.0], [5900.0, 21.0], [6100.0, 2.0], [6000.0, 7.0], [6200.0, 11.0], [6300.0, 9.0], [6400.0, 1.0], [6900.0, 31.0], [6800.0, 2.0], [7100.0, 17.0], [7000.0, 25.0], [7400.0, 31.0], [7300.0, 7.0], [7200.0, 3.0], [7500.0, 9.0], [7600.0, 15.0], [7700.0, 7.0], [7900.0, 6.0], [7800.0, 2.0], [8000.0, 3.0], [8100.0, 3.0], [8600.0, 8.0], [8200.0, 5.0], [8400.0, 9.0], [8800.0, 3.0], [9200.0, 6.0], [9600.0, 6.0], [9400.0, 4.0], [9800.0, 4.0], [10000.0, 6.0], [10200.0, 12.0], [10400.0, 6.0], [10600.0, 9.0], [10800.0, 5.0], [11000.0, 1.0], [11200.0, 4.0], [11600.0, 6.0], [11400.0, 5.0], [11800.0, 6.0], [12000.0, 6.0], [12200.0, 5.0], [12400.0, 10.0], [12600.0, 7.0], [12800.0, 3.0], [13000.0, 10.0], [13200.0, 11.0], [13400.0, 4.0], [13600.0, 5.0], [13800.0, 5.0], [14000.0, 5.0], [14200.0, 7.0], [14400.0, 5.0], [14600.0, 2.0], [14800.0, 1.0], [15200.0, 5.0], [15000.0, 7.0], [15600.0, 14.0], [15400.0, 6.0], [15800.0, 3.0], [16000.0, 9.0], [16200.0, 3.0], [16400.0, 8.0], [16800.0, 7.0], [17200.0, 5.0], [17600.0, 8.0], [18400.0, 12.0], [18000.0, 8.0], [19200.0, 3.0], [18800.0, 3.0], [19600.0, 8.0], [20000.0, 7.0], [20400.0, 5.0], [21200.0, 4.0], [20800.0, 3.0], [21600.0, 6.0], [22000.0, 6.0], [22400.0, 7.0], [22800.0, 9.0], [23200.0, 3.0], [23600.0, 5.0], [24000.0, 5.0], [24400.0, 10.0], [24800.0, 3.0], [25200.0, 4.0], [25600.0, 8.0], [26000.0, 11.0], [26400.0, 12.0], [26800.0, 8.0], [27200.0, 10.0], [27600.0, 5.0], [28000.0, 5.0], [28400.0, 12.0], [28800.0, 12.0], [29600.0, 6.0], [29200.0, 2.0], [30000.0, 8.0], [30400.0, 3.0], [30800.0, 10.0], [31200.0, 9.0], [31600.0, 9.0], [32400.0, 10.0], [32000.0, 4.0], [32800.0, 8.0], [33600.0, 10.0], [34400.0, 10.0], [35200.0, 4.0], [36000.0, 11.0], [36800.0, 8.0], [37600.0, 7.0], [38400.0, 5.0], [39200.0, 4.0], [40000.0, 10.0], [40800.0, 4.0], [41600.0, 1.0], [42400.0, 6.0], [43200.0, 5.0], [44000.0, 4.0], [44800.0, 8.0], [45600.0, 6.0], [46400.0, 13.0], [47200.0, 10.0], [48000.0, 6.0], [48800.0, 8.0], [50400.0, 4.0], [49600.0, 8.0], [51200.0, 11.0], [52000.0, 7.0], [52800.0, 8.0], [54400.0, 4.0], [53600.0, 2.0], [33100.0, 6.0], [33900.0, 9.0], [34700.0, 13.0], [35500.0, 5.0], [36300.0, 7.0], [37100.0, 2.0], [37900.0, 10.0], [38700.0, 7.0], [40300.0, 6.0], [41100.0, 9.0], [41900.0, 7.0], [42700.0, 3.0], [43500.0, 8.0], [44300.0, 13.0], [45100.0, 9.0], [45900.0, 8.0], [46700.0, 12.0], [47500.0, 7.0], [48300.0, 9.0], [49100.0, 7.0], [49900.0, 8.0], [50700.0, 5.0], [51500.0, 5.0], [52300.0, 11.0], [53100.0, 12.0], [53900.0, 6.0], [54700.0, 2.0], [16900.0, 7.0], [16500.0, 3.0], [17300.0, 2.0], [17700.0, 4.0], [18100.0, 2.0], [18500.0, 3.0], [18900.0, 2.0], [19300.0, 3.0], [20100.0, 3.0], [19700.0, 2.0], [21300.0, 6.0], [20500.0, 4.0], [20900.0, 4.0], [21700.0, 4.0], [22100.0, 4.0], [22500.0, 1.0], [22900.0, 13.0], [23300.0, 10.0], [23700.0, 7.0], [24100.0, 5.0], [24500.0, 6.0], [24900.0, 10.0], [25300.0, 5.0], [25700.0, 5.0], [26100.0, 3.0], [26500.0, 1.0], [26900.0, 6.0], [27300.0, 9.0], [27700.0, 6.0], [28100.0, 6.0], [28500.0, 4.0], [28900.0, 10.0], [29300.0, 6.0], [29700.0, 6.0], [30100.0, 10.0], [30500.0, 3.0], [30900.0, 4.0], [31300.0, 10.0], [31700.0, 15.0], [32100.0, 9.0], [32500.0, 7.0], [33000.0, 10.0], [33800.0, 15.0], [34600.0, 12.0], [35400.0, 8.0], [36200.0, 14.0], [37000.0, 8.0], [37800.0, 15.0], [38600.0, 4.0], [40200.0, 10.0], [41000.0, 4.0], [41800.0, 7.0], [43400.0, 7.0], [44200.0, 6.0], [45000.0, 6.0], [45800.0, 18.0], [46600.0, 8.0], [47400.0, 8.0], [48200.0, 5.0], [49000.0, 9.0], [49800.0, 8.0], [50600.0, 9.0], [52200.0, 9.0], [53000.0, 10.0], [53800.0, 7.0], [33300.0, 13.0], [34100.0, 7.0], [34900.0, 11.0], [35700.0, 6.0], [36500.0, 7.0], [37300.0, 11.0], [38100.0, 8.0], [38900.0, 9.0], [39700.0, 7.0], [40500.0, 2.0], [41300.0, 5.0], [42100.0, 5.0], [42900.0, 9.0], [44500.0, 6.0], [43700.0, 1.0], [45300.0, 18.0], [46100.0, 6.0], [46900.0, 4.0], [47700.0, 10.0], [48500.0, 3.0], [49300.0, 9.0], [50100.0, 6.0], [50900.0, 7.0], [51700.0, 7.0], [52500.0, 1.0], [53300.0, 5.0], [54100.0, 2.0], [54900.0, 1.0], [8300.0, 7.0], [8700.0, 7.0], [8500.0, 2.0], [8900.0, 3.0], [9100.0, 6.0], [9700.0, 8.0], [9300.0, 4.0], [9500.0, 6.0], [9900.0, 3.0], [10100.0, 5.0], [10300.0, 7.0], [10700.0, 6.0], [10500.0, 1.0], [11100.0, 6.0], [10900.0, 5.0], [11700.0, 7.0], [11300.0, 1.0], [11500.0, 9.0], [12100.0, 7.0], [11900.0, 3.0], [12300.0, 3.0], [12700.0, 11.0], [12500.0, 3.0], [12900.0, 9.0], [13100.0, 11.0], [13300.0, 11.0], [13500.0, 9.0], [13700.0, 7.0], [14100.0, 6.0], [14300.0, 3.0], [14500.0, 2.0], [14700.0, 2.0], [15100.0, 6.0], [14900.0, 1.0], [15300.0, 5.0], [15700.0, 12.0], [15500.0, 4.0], [15900.0, 2.0], [16100.0, 4.0], [16300.0, 2.0], [16600.0, 8.0], [17400.0, 7.0], [17000.0, 7.0], [18200.0, 4.0], [17800.0, 4.0], [18600.0, 4.0], [19000.0, 7.0], [19400.0, 6.0], [19800.0, 3.0], [20200.0, 6.0], [20600.0, 5.0], [21000.0, 9.0], [21400.0, 4.0], [21800.0, 2.0], [22200.0, 7.0], [22600.0, 10.0], [23000.0, 3.0], [23400.0, 9.0], [23800.0, 4.0], [24200.0, 6.0], [24600.0, 4.0], [25000.0, 8.0], [25400.0, 2.0], [25800.0, 9.0], [26200.0, 8.0], [26600.0, 6.0], [27000.0, 8.0], [27400.0, 8.0], [27800.0, 8.0], [28200.0, 7.0], [28600.0, 9.0], [29000.0, 10.0], [29400.0, 10.0], [29800.0, 5.0], [30200.0, 12.0], [30600.0, 9.0], [31000.0, 1.0], [31400.0, 4.0], [31800.0, 7.0], [32200.0, 8.0], [32600.0, 4.0], [33200.0, 6.0], [34000.0, 12.0], [34800.0, 10.0], [36400.0, 10.0], [35600.0, 1.0], [37200.0, 6.0], [38000.0, 9.0], [38800.0, 10.0], [39600.0, 6.0], [40400.0, 3.0], [41200.0, 3.0], [42000.0, 7.0], [42800.0, 7.0], [43600.0, 8.0], [44400.0, 13.0], [45200.0, 8.0], [46000.0, 13.0], [46800.0, 10.0], [47600.0, 6.0], [48400.0, 5.0], [49200.0, 14.0], [50800.0, 14.0], [50000.0, 4.0], [51600.0, 14.0], [52400.0, 2.0], [53200.0, 7.0], [54000.0, 2.0], [54800.0, 1.0], [33500.0, 9.0], [34300.0, 10.0], [35100.0, 4.0], [35900.0, 7.0], [36700.0, 6.0], [37500.0, 4.0], [38300.0, 11.0], [39100.0, 6.0], [39900.0, 5.0], [40700.0, 4.0], [41500.0, 1.0], [42300.0, 12.0], [43100.0, 11.0], [43900.0, 11.0], [44700.0, 6.0], [45500.0, 8.0], [46300.0, 15.0], [47100.0, 5.0], [47900.0, 13.0], [48700.0, 10.0], [49500.0, 3.0], [50300.0, 5.0], [51100.0, 8.0], [51900.0, 6.0], [52700.0, 7.0], [53500.0, 2.0], [54300.0, 9.0], [16700.0, 4.0], [17100.0, 5.0], [17500.0, 10.0], [17900.0, 1.0], [18300.0, 6.0], [18700.0, 5.0], [19100.0, 3.0], [20300.0, 6.0], [19500.0, 4.0], [19900.0, 4.0], [20700.0, 4.0], [21100.0, 5.0], [21500.0, 9.0], [22300.0, 4.0], [21900.0, 9.0], [22700.0, 5.0], [23100.0, 4.0], [23500.0, 5.0], [23900.0, 8.0], [24300.0, 6.0], [24700.0, 2.0], [25100.0, 5.0], [25500.0, 2.0], [25900.0, 10.0], [26300.0, 9.0], [26700.0, 9.0], [27100.0, 7.0], [27500.0, 8.0], [27900.0, 10.0], [28300.0, 8.0], [28700.0, 10.0], [29100.0, 9.0], [29500.0, 9.0], [29900.0, 9.0], [30300.0, 14.0], [30700.0, 4.0], [31100.0, 9.0], [31500.0, 6.0], [31900.0, 13.0], [32300.0, 10.0], [32700.0, 2.0], [33400.0, 12.0], [34200.0, 9.0], [35000.0, 8.0], [35800.0, 11.0], [36600.0, 10.0], [37400.0, 11.0], [38200.0, 8.0], [39000.0, 7.0], [39800.0, 10.0], [40600.0, 15.0], [41400.0, 3.0], [42200.0, 11.0], [43000.0, 6.0], [43800.0, 8.0], [44600.0, 10.0], [45400.0, 6.0], [46200.0, 11.0], [47000.0, 7.0], [47800.0, 11.0], [48600.0, 2.0], [49400.0, 8.0], [50200.0, 8.0], [51000.0, 3.0], [51800.0, 11.0], [52600.0, 8.0], [53400.0, 2.0], [54200.0, 3.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 54900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 3455.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 11.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 3455.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 34.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 123.56504065040646, "minX": 1.63046418E12, "maxY": 428.6319444444444, "series": [{"data": [[1.63046418E12, 427.5753424657534], [1.63046424E12, 177.50847457627108]], "isOverall": false, "label": "getOrdersAsBuyerByUserId", "isController": false}, {"data": [[1.63046418E12, 426.69594594594594], [1.63046424E12, 176.52272727272728]], "isOverall": false, "label": "changeOrderStatus", "isController": false}, {"data": [[1.63046418E12, 418.7317073170731], [1.63046424E12, 168.5148809523811]], "isOverall": false, "label": "getOrdersByUserId", "isController": false}, {"data": [[1.63046418E12, 422.2802547770703], [1.63046424E12, 172.05539358600598]], "isOverall": false, "label": "makeOrder", "isController": false}, {"data": [[1.63046418E12, 428.6319444444444], [1.63046424E12, 178.50561797752812]], "isOverall": false, "label": "affirmWants", "isController": false}, {"data": [[1.63046418E12, 405.62631578947384], [1.63046424E12, 155.5064516129032]], "isOverall": false, "label": "getOrdersAsSellerByUserid", "isController": false}, {"data": [[1.63046418E12, 373.8700787401575], [1.63046424E12, 123.56504065040646]], "isOverall": false, "label": "commentAndRateOnOrder", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63046424E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1016.5, "minX": 1.0, "maxY": 54988.0, "series": [{"data": [[2.0, 53627.0], [3.0, 54800.0], [4.0, 54747.0], [5.0, 53600.0], [6.0, 54750.0], [7.0, 54467.0], [8.0, 53500.0], [9.0, 53237.0], [10.0, 53313.0], [11.0, 53209.0], [12.0, 53205.0], [13.0, 54359.0], [14.0, 54428.0], [15.0, 53188.0], [16.0, 53180.0], [17.0, 53196.0], [18.0, 53175.0], [19.0, 53187.0], [20.0, 53169.0], [21.0, 54460.0], [22.0, 54457.0], [23.0, 54324.0], [25.0, 53862.0], [26.0, 53231.0], [27.0, 53121.0], [28.0, 53115.0], [30.0, 53775.5], [31.0, 54388.0], [33.0, 54291.0], [32.0, 54301.0], [34.0, 53067.0], [37.0, 54362.0], [36.0, 53735.0], [39.0, 54359.0], [38.0, 53817.0], [41.0, 54284.5], [43.0, 52931.0], [42.0, 53036.0], [45.0, 54198.0], [44.0, 53044.0], [47.0, 52967.0], [46.0, 52937.0], [49.0, 52918.0], [48.0, 52936.0], [51.0, 54130.0], [50.0, 52917.0], [53.0, 53006.0], [52.0, 52903.0], [55.0, 54094.0], [54.0, 52866.0], [57.0, 52848.0], [56.0, 52852.0], [59.0, 52855.0], [61.0, 52842.5], [60.0, 54048.0], [63.0, 53981.0], [62.0, 52780.0], [67.0, 53354.0], [65.0, 53510.0], [64.0, 53985.0], [71.0, 52696.0], [70.0, 53314.0], [68.0, 52724.0], [75.0, 53896.0], [74.0, 52786.0], [73.0, 53896.5], [79.0, 52641.0], [78.0, 52627.0], [77.0, 53891.0], [76.0, 53964.0], [83.0, 52616.0], [82.0, 53840.0], [81.0, 53725.0], [80.0, 52627.0], [87.0, 53070.666666666664], [84.0, 52615.0], [91.0, 52966.0], [90.0, 52230.0], [89.0, 52323.0], [88.0, 53800.0], [95.0, 52176.0], [94.0, 53420.0], [93.0, 53403.0], [92.0, 52203.0], [99.0, 53346.0], [98.0, 52144.0], [97.0, 52248.0], [96.0, 53287.0], [103.0, 53369.0], [102.0, 53276.0], [101.0, 53292.0], [100.0, 52112.0], [107.0, 53325.0], [106.0, 52119.0], [105.0, 52062.0], [104.0, 52056.0], [111.0, 53104.0], [110.0, 51916.0], [109.0, 53161.0], [108.0, 52115.0], [115.0, 53126.0], [114.0, 51908.0], [113.0, 51884.0], [112.0, 51913.0], [119.0, 51858.0], [118.0, 53068.0], [117.0, 53023.0], [116.0, 51893.0], [123.0, 52971.0], [122.0, 53035.0], [121.0, 51808.0], [120.0, 51810.0], [127.0, 52987.0], [126.0, 51801.0], [125.0, 52547.0], [124.0, 53022.0], [135.0, 52910.0], [134.0, 52994.0], [133.0, 52992.0], [132.0, 52584.333333333336], [129.0, 51787.0], [142.0, 52355.5], [140.0, 51693.0], [139.0, 52872.0], [138.0, 51819.0], [137.0, 52343.0], [150.0, 51645.0], [149.0, 51664.0], [147.0, 52887.0], [146.0, 51668.0], [145.0, 51764.0], [144.0, 51769.5], [159.0, 51626.0], [158.0, 52126.333333333336], [156.0, 52376.0], [154.0, 52928.0], [153.0, 52393.0], [152.0, 52296.5], [167.0, 52023.0], [166.0, 51283.0], [165.0, 51283.0], [164.0, 51572.0], [163.0, 51602.0], [162.0, 52702.0], [161.0, 52822.0], [160.0, 51608.0], [175.0, 51359.0], [173.0, 51217.0], [172.0, 52248.0], [171.0, 51859.5], [169.0, 52482.0], [168.0, 51264.0], [183.0, 51131.0], [182.0, 52375.0], [180.0, 51733.0], [178.0, 52384.0], [177.0, 51169.0], [176.0, 51829.5], [191.0, 52163.0], [190.0, 51175.0], [189.0, 52290.0], [188.0, 52238.0], [187.0, 52299.0], [186.0, 51183.0], [185.0, 51095.0], [184.0, 51204.0], [199.0, 51622.0], [198.0, 51665.0], [197.0, 52225.0], [196.0, 52290.0], [195.0, 50997.0], [194.0, 52325.0], [193.0, 51774.0], [192.0, 51053.0], [207.0, 50880.0], [206.0, 52009.0], [205.0, 50803.0], [204.0, 50809.0], [203.0, 52043.0], [202.0, 50855.0], [200.0, 52090.0], [215.0, 50709.0], [214.0, 50795.0], [213.0, 50720.0], [212.0, 51959.0], [211.0, 51988.0], [210.0, 50876.0], [209.0, 52001.0], [208.0, 51953.0], [222.0, 51829.0], [221.0, 51356.0], [220.0, 51828.0], [219.0, 51846.0], [218.0, 50643.0], [217.0, 50625.0], [216.0, 50663.0], [231.0, 51524.0], [230.0, 50569.0], [229.0, 50715.0], [228.0, 50681.0], [227.0, 50640.5], [225.0, 51616.0], [224.0, 50967.5], [239.0, 51374.0], [238.0, 51503.0], [237.0, 51501.0], [236.0, 50317.0], [235.0, 51545.0], [234.0, 51364.0], [233.0, 50318.0], [232.0, 50349.0], [247.0, 50138.0], [246.0, 50165.0], [245.0, 51375.0], [244.0, 51348.0], [243.0, 50196.0], [242.0, 50295.0], [241.0, 50200.0], [240.0, 50974.0], [255.0, 50039.0], [254.0, 51270.0], [253.0, 50834.0], [252.0, 51301.5], [250.0, 51219.0], [249.0, 50729.0], [270.0, 49858.0], [268.0, 49879.0], [266.0, 50680.0], [264.0, 50036.0], [256.0, 50021.0], [258.0, 51154.0], [262.0, 50079.0], [260.0, 50664.0], [286.0, 49691.0], [284.0, 50944.0], [282.0, 50901.0], [280.0, 49764.0], [272.0, 49840.0], [274.0, 50977.0], [278.0, 49759.0], [276.0, 50946.0], [302.0, 49691.0], [298.0, 49622.0], [294.0, 50843.0], [292.0, 49643.0], [316.0, 49475.0], [306.0, 49739.0], [314.0, 50048.5], [312.0, 49432.0], [310.0, 49432.0], [308.0, 49485.0], [334.0, 49307.0], [332.0, 49982.0], [330.0, 49332.0], [328.0, 50503.0], [320.0, 50533.0], [322.0, 49504.0], [326.0, 49395.0], [324.0, 50523.0], [350.0, 49082.0], [338.0, 49982.0], [346.0, 49232.0], [344.0, 49877.0], [342.0, 49266.0], [340.0, 50489.0], [366.0, 49021.0], [364.0, 50104.0], [362.0, 49063.0], [360.0, 49243.0], [352.0, 49139.0], [354.0, 49120.0], [358.0, 49755.0], [356.0, 49063.0], [382.0, 48721.0], [380.0, 48908.0], [378.0, 48694.0], [376.0, 48850.0], [368.0, 48990.0], [370.0, 49902.0], [374.0, 48723.0], [372.0, 48864.0], [398.0, 48359.0], [396.0, 49298.0], [394.0, 48289.0], [392.0, 49287.0], [384.0, 48724.0], [386.0, 48708.0], [390.0, 48312.0], [388.0, 48353.0], [414.0, 47997.0], [412.0, 47950.0], [410.0, 48084.0], [408.0, 49133.0], [400.0, 48105.0], [402.0, 48194.0], [406.0, 48162.0], [404.0, 49269.0], [430.0, 48898.0], [428.0, 47858.0], [426.0, 47997.0], [424.0, 48813.0], [416.0, 48015.0], [418.0, 47922.0], [420.0, 48557.0], [442.0, 48169.0], [438.0, 48941.0], [436.0, 48405.0], [434.0, 47770.0], [432.0, 47809.0], [462.0, 47561.0], [460.0, 47492.0], [458.0, 47419.0], [456.0, 48522.0], [448.0, 48739.0], [450.0, 48225.0], [454.0, 48745.0], [452.0, 47832.0], [478.0, 48447.0], [476.0, 47270.0], [474.0, 47431.0], [472.0, 47908.0], [470.0, 47467.0], [464.0, 47387.0], [466.0, 47380.0], [468.0, 48009.0], [494.0, 47095.0], [492.0, 47725.0], [490.0, 47097.0], [480.0, 48170.0], [482.0, 47008.0], [486.0, 47220.0], [484.0, 47735.5], [510.0, 46815.0], [508.0, 46822.0], [506.0, 46896.0], [504.0, 47962.0], [496.0, 47029.0], [498.0, 48043.0], [502.0, 46936.0], [500.0, 47625.5], [540.0, 47531.0], [536.0, 47112.0], [532.0, 46496.0], [528.0, 46522.0], [512.0, 47707.0], [516.0, 47904.0], [524.0, 46722.0], [520.0, 46663.0], [572.0, 46131.0], [568.0, 46697.0], [564.0, 47207.0], [544.0, 47047.0], [548.0, 47373.0], [556.0, 46882.0], [552.0, 46329.0], [600.0, 46538.0], [604.0, 45769.0], [580.0, 45937.0], [576.0, 46711.0], [596.0, 45843.0], [592.0, 45868.0], [588.0, 45885.0], [584.0, 46886.0], [636.0, 46136.0], [632.0, 45436.5], [628.0, 46438.0], [624.0, 46496.0], [608.0, 46346.0], [620.0, 46583.0], [616.0, 46375.0], [668.0, 45807.0], [664.0, 46077.0], [660.0, 45258.0], [656.0, 45812.0], [640.0, 45485.0], [644.0, 45905.0], [652.0, 45359.0], [648.0, 45384.0], [676.0, 46098.0], [696.0, 45371.0], [672.0, 46017.0], [692.0, 45760.0], [688.0, 44711.0], [684.0, 44809.0], [680.0, 44841.0], [728.0, 44913.0], [732.0, 44901.0], [708.0, 45566.0], [724.0, 45346.0], [720.0, 45062.5], [716.0, 45671.0], [712.0, 45704.0], [760.0, 44764.0], [764.0, 44109.0], [740.0, 44350.0], [736.0, 44164.0], [756.0, 44177.0], [752.0, 44759.0], [748.0, 45355.0], [744.0, 44308.0], [796.0, 44665.0], [792.0, 44481.0], [788.0, 43648.0], [784.0, 44791.0], [768.0, 44866.0], [772.0, 44418.0], [780.0, 43853.0], [776.0, 43883.0], [828.0, 44374.0], [824.0, 44430.0], [820.0, 44436.0], [816.0, 43220.0], [800.0, 44192.0], [812.0, 43182.0], [808.0, 44566.0], [836.0, 43192.0], [860.0, 43854.0], [832.0, 43276.0], [852.0, 42594.0], [848.0, 42993.0], [844.0, 43115.0], [840.0, 43997.0], [892.0, 42333.0], [888.0, 43454.0], [884.0, 42483.0], [880.0, 42301.0], [864.0, 43899.0], [868.0, 43155.0], [876.0, 43526.0], [872.0, 43554.0], [924.0, 42890.0], [920.0, 41720.0], [916.0, 41870.0], [912.0, 42960.0], [896.0, 43344.0], [900.0, 43148.0], [908.0, 41877.0], [904.0, 42134.0], [956.0, 42162.0], [952.0, 42275.0], [928.0, 42893.0], [948.0, 42307.0], [940.0, 42389.0], [936.0, 42345.0], [988.0, 40276.0], [984.0, 40306.0], [976.0, 41824.0], [960.0, 42035.0], [964.0, 42080.0], [972.0, 41975.0], [968.0, 40802.0], [1020.0, 41175.0], [1016.0, 40114.0], [1012.0, 40041.0], [1008.0, 40077.0], [992.0, 41336.0], [996.0, 41338.0], [1004.0, 41273.0], [1000.0, 41402.0], [1080.0, 40267.0], [1072.0, 39186.0], [1064.0, 40347.0], [1024.0, 41041.0], [1032.0, 39843.0], [1136.0, 37859.0], [1144.0, 37870.0], [1096.0, 38966.0], [1088.0, 40062.0], [1128.0, 38229.0], [1120.0, 39263.5], [1112.0, 39398.0], [1104.0, 38614.0], [1208.0, 38111.0], [1200.0, 38254.0], [1192.0, 37976.0], [1184.0, 37359.0], [1152.0, 37749.0], [1176.0, 37458.0], [1168.0, 38892.0], [1272.0, 37437.0], [1264.0, 37101.5], [1256.0, 37223.0], [1248.0, 36633.5], [1216.0, 37805.0], [1224.0, 38150.0], [1240.0, 36977.0], [1232.0, 37947.0], [1288.0, 37319.0], [1328.0, 35568.0], [1280.0, 36187.0], [1320.0, 35825.0], [1312.0, 35864.0], [1304.0, 37057.0], [1296.0, 36062.0], [1400.0, 35478.0], [1392.0, 36105.0], [1376.0, 35219.0], [1344.0, 35362.0], [1352.0, 35429.0], [1368.0, 34912.0], [1360.0, 34987.0], [1464.0, 34912.0], [1456.0, 34984.0], [1448.0, 34933.0], [1440.0, 33942.0], [1408.0, 34699.0], [1416.0, 35134.0], [1432.0, 35193.0], [1424.0, 34372.0], [1520.0, 34438.0], [1528.0, 34367.0], [1480.0, 33351.0], [1472.0, 33859.0], [1504.0, 34496.0], [1496.0, 34547.0], [1488.0, 33348.0], [1592.0, 32981.0], [1584.0, 33489.0], [1576.0, 33660.0], [1568.0, 33879.0], [1536.0, 34312.0], [1544.0, 34186.0], [1560.0, 32766.0], [1552.0, 33912.0], [1656.0, 32833.0], [1648.0, 32372.5], [1640.0, 32531.0], [1632.0, 33126.0], [1600.0, 33469.0], [1608.0, 33237.0], [1624.0, 33249.0], [1616.0, 32776.0], [1712.0, 30828.0], [1720.0, 31863.0], [1696.0, 32357.0], [1704.0, 32138.0], [1672.0, 31351.5], [1664.0, 31591.0], [1688.0, 31915.0], [1680.0, 32515.0], [1784.0, 30298.0], [1776.0, 30926.0], [1760.0, 31258.0], [1728.0, 31619.0], [1736.0, 31131.0], [1744.0, 31662.0], [1768.0, 30627.0], [1824.0, 29648.0], [1848.0, 29983.0], [1832.0, 30232.0], [1840.0, 29319.0], [1800.0, 31199.0], [1816.0, 29689.0], [1808.0, 30931.0], [1904.0, 29476.0], [1912.0, 29768.0], [1888.0, 29497.0], [1896.0, 28869.0], [1856.0, 30175.0], [1864.0, 30101.0], [1880.0, 29571.0], [1872.0, 30156.0], [1968.0, 28494.0], [1976.0, 28708.0], [1960.0, 28144.0], [1952.0, 28213.0], [1928.0, 29438.0], [1920.0, 28526.0], [1944.0, 29133.0], [1936.0, 29341.0], [2016.0, 27885.0], [2040.0, 27912.0], [2024.0, 27775.0], [2032.0, 28045.0], [1984.0, 27824.0], [1992.0, 27672.0], [2008.0, 27437.0], [2144.0, 26095.0], [2160.0, 25745.0], [2112.0, 26085.0], [2128.0, 26775.0], [2048.0, 26943.0], [2064.0, 27587.0], [2096.0, 26335.0], [2080.0, 26472.0], [2288.0, 23382.0], [2272.0, 23905.0], [2240.0, 24953.0], [2176.0, 25917.0], [2192.0, 25688.0], [2224.0, 24437.0], [2208.0, 24585.0], [2416.0, 21181.0], [2400.0, 21652.0], [2368.0, 21993.0], [2304.0, 22942.0], [2320.0, 23423.0], [2336.0, 23236.0], [2384.0, 21632.0], [2528.0, 19226.0], [2512.0, 19519.0], [2496.0, 20016.0], [2544.0, 18442.0], [2432.0, 20927.0], [2448.0, 20990.0], [2480.0, 20068.0], [2464.0, 20261.0], [2656.0, 16943.0], [2672.0, 16137.0], [2624.0, 17177.0], [2640.0, 17307.0], [2576.0, 18439.0], [2560.0, 18042.0], [2608.0, 17337.5], [2592.0, 17603.0], [2752.0, 15013.0], [2800.0, 13591.0], [2768.0, 14259.0], [2784.0, 13865.0], [2688.0, 15642.0], [2736.0, 15745.0], [2720.0, 15831.0], [2928.0, 11767.0], [2880.0, 12459.0], [2912.0, 12077.0], [2832.0, 13021.0], [2816.0, 13400.0], [2864.0, 13323.0], [2848.0, 13487.0], [3008.0, 10736.0], [3056.0, 9392.0], [3024.0, 10023.0], [3040.0, 9684.0], [2960.0, 11130.0], [2944.0, 11579.0], [2992.0, 10823.0], [3184.0, 7513.5], [3136.0, 7801.0], [3152.0, 7525.0], [3088.0, 8777.0], [3120.0, 8290.0], [3104.0, 8266.0], [3264.0, 7030.8], [3280.0, 7124.0], [3312.0, 6020.0], [3296.0, 6052.333333333333], [3232.0, 7184.6], [3440.0, 4859.5], [3344.0, 6073.0], [3328.0, 5489.0], [3360.0, 6006.666666666667], [3488.0, 1873.0], [2145.0, 26238.0], [2161.0, 25278.0], [2113.0, 26903.0], [2129.0, 26680.0], [2049.0, 27630.0], [2065.0, 26722.0], [2097.0, 26944.0], [2081.0, 27149.0], [2273.0, 23512.0], [2289.0, 23867.0], [2241.0, 24685.0], [2257.0, 24499.0], [2177.0, 25641.0], [2193.0, 24957.0], [2225.0, 24393.0], [2209.0, 25390.0], [2417.0, 21847.0], [2401.0, 22268.0], [2369.0, 22745.0], [2305.0, 23480.0], [2321.0, 22780.0], [2353.0, 22790.5], [2337.0, 22975.0], [2385.0, 22391.0], [2529.0, 19479.0], [2545.0, 18451.0], [2497.0, 20254.0], [2513.0, 19357.0], [2433.0, 20920.0], [2449.0, 20686.0], [2481.0, 20487.0], [2465.0, 20654.0], [2657.0, 16970.0], [2625.0, 17557.0], [2641.0, 16980.0], [2673.0, 16481.0], [2561.0, 18012.0], [2577.0, 18439.0], [2609.0, 17169.0], [2593.0, 18228.0], [2785.0, 14373.0], [2801.0, 14079.0], [2753.0, 15276.0], [2769.0, 14547.0], [2705.0, 15529.5], [2689.0, 15623.0], [2737.0, 15743.0], [2721.0, 15613.0], [2913.0, 12460.0], [2881.0, 13037.0], [2897.0, 12332.5], [2929.0, 11902.0], [2833.0, 12987.0], [2817.0, 13467.0], [2865.0, 12760.0], [2849.0, 12824.0], [3041.0, 10272.0], [3009.0, 10256.0], [3025.0, 10236.0], [3057.0, 9431.0], [2961.0, 11433.0], [2945.0, 11589.0], [2993.0, 10694.0], [2977.0, 10885.0], [3185.0, 7161.0], [3169.0, 7441.0], [3137.0, 7725.0], [3153.0, 7614.0], [3089.0, 9168.0], [3073.0, 9687.666666666666], [3121.0, 8322.0], [3105.0, 8766.0], [3281.0, 6921.0], [3313.0, 6418.0], [3425.0, 5237.5], [3345.0, 5741.0], [3329.0, 5504.0], [3377.0, 5641.75], [3457.0, 4843.0], [3473.0, 4773.333333333333], [3489.0, 1862.0], [1081.0, 40075.0], [1073.0, 39194.0], [1065.0, 40353.0], [1057.0, 40189.0], [1033.0, 41001.0], [1049.0, 40811.0], [1041.0, 40174.0], [1137.0, 37959.0], [1145.0, 37737.0], [1097.0, 39938.0], [1089.0, 38973.0], [1129.0, 39187.0], [1121.0, 39856.0], [1113.0, 38792.0], [1105.0, 38752.0], [1201.0, 37227.0], [1161.0, 38271.0], [1153.0, 37744.0], [1193.0, 38331.0], [1185.0, 37317.0], [1169.0, 38361.0], [1273.0, 36337.0], [1265.0, 36613.0], [1257.0, 36718.0], [1249.0, 36610.0], [1217.0, 38269.0], [1225.0, 37625.0], [1241.0, 37979.0], [1233.0, 38029.0], [1289.0, 35872.0], [1337.0, 35756.0], [1281.0, 36364.0], [1321.0, 35713.0], [1313.0, 36958.0], [1305.0, 35792.0], [1297.0, 36664.0], [1401.0, 34800.0], [1393.0, 36074.0], [1385.0, 36112.0], [1377.0, 34978.0], [1345.0, 36551.0], [1353.0, 36441.0], [1369.0, 35110.0], [1361.0, 36147.0], [1417.0, 35485.0], [1457.0, 34870.0], [1409.0, 34600.0], [1449.0, 34619.0], [1441.0, 35097.0], [1433.0, 35207.0], [1425.0, 34097.0], [1529.0, 34332.0], [1521.0, 33352.0], [1513.0, 34189.5], [1505.0, 34518.0], [1481.0, 34715.0], [1497.0, 34537.0], [1489.0, 34640.0], [1593.0, 33555.0], [1585.0, 32213.0], [1577.0, 33588.0], [1537.0, 34279.0], [1545.0, 32908.0], [1561.0, 32568.0], [1657.0, 31606.0], [1649.0, 32932.0], [1641.0, 33076.0], [1633.0, 32100.0], [1601.0, 33428.0], [1609.0, 33363.0], [1625.0, 33201.0], [1617.0, 32099.0], [1713.0, 30772.0], [1697.0, 32358.0], [1673.0, 32467.0], [1665.0, 32616.0], [1689.0, 32422.0], [1681.0, 32491.0], [1705.0, 31120.0], [1777.0, 30959.0], [1785.0, 31269.0], [1761.0, 30202.0], [1769.0, 30215.0], [1729.0, 31787.0], [1737.0, 31749.0], [1753.0, 30286.5], [1745.0, 31121.0], [1841.0, 29428.0], [1849.0, 29522.0], [1825.0, 30844.0], [1833.0, 30766.0], [1793.0, 30375.0], [1801.0, 29971.0], [1817.0, 30365.0], [1809.0, 30445.0], [1905.0, 29187.5], [1913.0, 28924.0], [1889.0, 29037.0], [1897.0, 28873.0], [1865.0, 29062.0], [1857.0, 29208.0], [1881.0, 28867.0], [1873.0, 29913.0], [1969.0, 28836.0], [1953.0, 29129.0], [1961.0, 29029.0], [1977.0, 28115.0], [1929.0, 28314.0], [1921.0, 28384.0], [1945.0, 28849.0], [1937.0, 28398.0], [2017.0, 27881.0], [2041.0, 27498.0], [2025.0, 27307.0], [2033.0, 27202.0], [1993.0, 27788.0], [2009.0, 27432.0], [2001.0, 27963.0], [2146.0, 26248.0], [2162.0, 26001.0], [2114.0, 26267.0], [2130.0, 26335.0], [2050.0, 26879.0], [2066.0, 26719.0], [2098.0, 26908.0], [2082.0, 27397.0], [2274.0, 23884.0], [2290.0, 23357.0], [2242.0, 24895.0], [2258.0, 24184.0], [2178.0, 25639.0], [2194.0, 24962.0], [2226.0, 25192.0], [2210.0, 25282.0], [2402.0, 21422.0], [2418.0, 21581.0], [2370.0, 22043.0], [2386.0, 22131.0], [2322.0, 22678.0], [2306.0, 23721.0], [2354.0, 22177.0], [2338.0, 22847.0], [2498.0, 19908.0], [2546.0, 18664.0], [2514.0, 19612.0], [2530.0, 19173.0], [2434.0, 20919.0], [2450.0, 21353.0], [2466.0, 20529.0], [2658.0, 16284.0], [2626.0, 17177.0], [2642.0, 16946.0], [2674.0, 16464.0], [2578.0, 18434.0], [2562.0, 18006.0], [2610.0, 17795.0], [2594.0, 17462.0], [2754.0, 14851.0], [2802.0, 13760.0], [2770.0, 14147.0], [2786.0, 13818.0], [2690.0, 16264.0], [2706.0, 15543.0], [2722.0, 15840.0], [2914.0, 12434.0], [2882.0, 13036.0], [2898.0, 12737.0], [2930.0, 11847.0], [2834.0, 13304.0], [2818.0, 13394.0], [2866.0, 13054.0], [2850.0, 12859.0], [3042.0, 9736.0], [3058.0, 9529.0], [3010.0, 10168.0], [3026.0, 10125.0], [2962.0, 11718.0], [2946.0, 11508.0], [2994.0, 10591.0], [2978.0, 10797.0], [3138.0, 7693.0], [3170.0, 7454.0], [3154.0, 7517.0], [3090.0, 8658.0], [3074.0, 9220.0], [3122.0, 8654.0], [3106.0, 8782.0], [3250.0, 7060.5], [3426.0, 4907.5], [3442.0, 4999.0], [3330.0, 5485.0], [3378.0, 5444.0], [3474.0, 4824.0], [3490.0, 1455.0], [2147.0, 25383.0], [2163.0, 25386.0], [2115.0, 26028.0], [2131.0, 25897.0], [2051.0, 27714.0], [2067.0, 27472.0], [2099.0, 26272.0], [2083.0, 27362.0], [2275.0, 23887.0], [2243.0, 24047.0], [2259.0, 24165.0], [2291.0, 23445.0], [2195.0, 24972.0], [2179.0, 25246.0], [2227.0, 24366.0], [2211.0, 25097.0], [2403.0, 21453.0], [2419.0, 21239.0], [2371.0, 22463.0], [2387.0, 21994.0], [2307.0, 23357.0], [2323.0, 23382.0], [2355.0, 22971.0], [2339.0, 22816.0], [2499.0, 20032.0], [2515.0, 19699.0], [2547.0, 18233.0], [2531.0, 18776.0], [2435.0, 21049.0], [2483.0, 19773.0], [2467.0, 20477.0], [2675.0, 16750.0], [2627.0, 17540.0], [2643.0, 16696.0], [2659.0, 16866.0], [2563.0, 18746.0], [2579.0, 17781.0], [2787.0, 13798.0], [2803.0, 13671.0], [2755.0, 15193.0], [2771.0, 14134.0], [2707.0, 15733.0], [2691.0, 15879.0], [2739.0, 15238.5], [2723.0, 15280.0], [2915.0, 12453.0], [2899.0, 12359.0], [2883.0, 12428.0], [2931.0, 12187.0], [2835.0, 13568.0], [2819.0, 13209.0], [2867.0, 13298.0], [2851.0, 13015.0], [3043.0, 9646.0], [3011.0, 10223.0], [3027.0, 10480.0], [3059.0, 9840.0], [2963.0, 11103.0], [2947.0, 11597.0], [2995.0, 10395.0], [2979.0, 10729.0], [3139.0, 7924.0], [3155.0, 7654.0], [3187.0, 7454.0], [3091.0, 9103.0], [3075.0, 9287.0], [3123.0, 8612.0], [3107.0, 8394.0], [3267.0, 6902.0], [3283.0, 6971.2], [3299.0, 5833.0], [3427.0, 4993.0], [3443.0, 4830.0], [3379.0, 5406.0], [3363.0, 5872.666666666667], [3475.0, 4201.0], [3491.0, 1068.0], [541.0, 46556.0], [537.0, 47520.0], [533.0, 47533.0], [529.0, 46668.0], [513.0, 46799.0], [517.0, 47778.0], [525.0, 47608.0], [521.0, 46678.0], [573.0, 46013.0], [569.0, 46220.0], [565.0, 46292.0], [561.0, 46746.0], [545.0, 46335.0], [549.0, 47414.0], [557.0, 47168.0], [553.0, 47503.0], [605.0, 45754.0], [601.0, 45914.0], [597.0, 46733.0], [593.0, 45824.0], [577.0, 46069.0], [581.0, 46824.0], [589.0, 45886.0], [585.0, 46873.0], [637.0, 46401.0], [633.0, 45526.0], [629.0, 45443.0], [625.0, 45369.0], [609.0, 46468.0], [613.0, 46143.5], [621.0, 46179.0], [617.0, 46798.0], [669.0, 45640.0], [665.0, 45200.0], [661.0, 46318.0], [657.0, 45166.0], [641.0, 46224.0], [645.0, 45379.0], [649.0, 45866.0], [697.0, 44886.0], [701.0, 45529.0], [677.0, 45092.0], [673.0, 45016.0], [693.0, 45520.0], [689.0, 45770.0], [685.0, 45012.0], [681.0, 44697.0], [733.0, 44393.0], [729.0, 45290.0], [725.0, 45365.0], [721.0, 44477.0], [717.0, 44491.0], [709.0, 45557.0], [713.0, 45689.0], [765.0, 44699.0], [761.0, 44610.0], [757.0, 45236.0], [753.0, 44255.0], [737.0, 44351.0], [741.0, 44315.0], [749.0, 44779.0], [745.0, 45365.0], [797.0, 44540.0], [793.0, 43623.0], [789.0, 44641.0], [769.0, 44945.0], [773.0, 43693.0], [777.0, 43874.0], [829.0, 43092.0], [825.0, 44313.0], [821.0, 44425.0], [817.0, 44482.0], [801.0, 44428.0], [805.0, 43334.0], [813.0, 44337.0], [809.0, 44566.0], [861.0, 43932.0], [837.0, 43662.0], [833.0, 44271.0], [853.0, 42944.0], [849.0, 43019.0], [845.0, 44098.0], [893.0, 43262.0], [889.0, 43376.0], [885.0, 43425.0], [881.0, 43563.0], [865.0, 43596.0], [869.0, 42430.0], [877.0, 43038.0], [873.0, 42593.0], [921.0, 42876.0], [925.0, 42893.0], [901.0, 43231.0], [897.0, 42256.0], [917.0, 43006.0], [913.0, 42830.0], [909.0, 41910.0], [905.0, 42988.0], [957.0, 41111.0], [953.0, 42254.0], [949.0, 41033.0], [945.0, 42350.5], [929.0, 42439.0], [933.0, 42538.5], [941.0, 42286.0], [937.0, 42420.0], [989.0, 40303.0], [985.0, 41580.0], [981.0, 40995.5], [977.0, 40613.0], [961.0, 42032.0], [965.0, 40682.0], [973.0, 41851.0], [969.0, 41928.0], [1021.0, 39965.0], [1017.0, 40703.0], [1013.0, 40012.0], [1009.0, 40061.0], [993.0, 40216.0], [997.0, 40159.0], [1005.0, 41219.0], [1001.0, 40157.0], [1082.0, 39069.0], [1074.0, 39221.0], [1066.0, 40350.0], [1058.0, 40821.0], [1050.0, 39717.0], [1026.0, 40616.0], [1034.0, 40993.0], [1042.0, 40958.0], [1138.0, 39061.0], [1146.0, 37783.0], [1098.0, 38956.0], [1090.0, 40178.0], [1130.0, 38096.0], [1122.0, 39620.0], [1114.0, 38667.0], [1106.0, 39913.0], [1210.0, 38089.5], [1202.0, 38328.0], [1194.0, 38452.0], [1186.0, 37400.0], [1154.0, 37907.0], [1162.0, 37697.0], [1178.0, 37424.5], [1274.0, 36322.0], [1266.0, 36375.0], [1258.0, 37805.0], [1250.0, 37352.0], [1218.0, 38170.0], [1226.0, 36983.0], [1242.0, 37908.0], [1234.0, 36842.0], [1338.0, 36476.0], [1330.0, 36026.0], [1322.0, 35766.0], [1314.0, 36452.0], [1282.0, 37437.0], [1290.0, 35868.0], [1306.0, 35924.0], [1298.0, 37175.0], [1402.0, 34773.0], [1394.0, 36075.0], [1386.0, 36039.0], [1378.0, 35155.0], [1354.0, 36430.0], [1370.0, 34971.0], [1362.0, 36220.0], [1418.0, 35502.0], [1458.0, 34544.0], [1410.0, 35430.0], [1450.0, 35000.0], [1442.0, 34058.0], [1434.0, 34710.0], [1426.0, 34292.0], [1530.0, 33938.0], [1522.0, 34385.0], [1514.0, 33350.0], [1506.0, 34494.0], [1474.0, 34793.0], [1498.0, 34531.0], [1490.0, 34122.0], [1586.0, 33607.0], [1594.0, 33533.0], [1546.0, 34204.0], [1538.0, 34005.0], [1578.0, 33516.0], [1570.0, 33277.0], [1562.0, 33973.0], [1554.0, 34042.0], [1610.0, 33256.0], [1650.0, 32835.0], [1602.0, 33407.0], [1642.0, 33035.0], [1634.0, 33085.0], [1626.0, 31898.0], [1618.0, 31968.0], [1714.0, 31985.0], [1722.0, 31561.5], [1698.0, 32273.0], [1706.0, 32111.0], [1666.0, 31566.0], [1674.0, 32554.0], [1690.0, 32414.0], [1682.0, 31938.0], [1786.0, 30167.0], [1738.0, 31635.0], [1762.0, 30200.0], [1778.0, 30822.0], [1730.0, 31688.0], [1754.0, 31583.0], [1746.0, 31124.0], [1770.0, 31313.0], [1850.0, 29279.0], [1826.0, 30605.0], [1842.0, 30373.0], [1794.0, 30031.0], [1802.0, 31168.0], [1818.0, 30472.0], [1810.0, 29876.0], [1834.0, 30649.0], [1906.0, 28676.0], [1914.0, 28783.0], [1890.0, 28829.0], [1898.0, 29538.0], [1858.0, 29430.0], [1866.0, 28954.0], [1882.0, 28844.0], [1874.0, 30050.0], [1978.0, 28685.0], [1970.0, 28471.0], [1954.0, 28738.0], [1930.0, 28528.0], [1922.0, 29506.0], [1946.0, 29143.0], [1938.0, 29381.0], [1962.0, 28634.0], [2018.0, 28291.0], [2042.0, 27943.0], [2026.0, 28055.0], [2034.0, 27625.0], [1986.0, 28331.0], [1994.0, 28621.0], [2002.0, 28100.0], [2116.0, 26625.0], [2164.0, 26064.0], [2132.0, 25932.0], [2148.0, 26274.0], [2068.0, 27170.0], [2100.0, 26784.0], [2084.0, 26686.0], [2292.0, 23331.0], [2276.0, 24234.0], [2244.0, 24000.0], [2180.0, 25812.0], [2228.0, 24341.0], [2212.0, 25037.0], [2260.0, 24537.0], [2420.0, 21028.0], [2372.0, 22086.0], [2404.0, 21312.0], [2308.0, 23705.0], [2324.0, 22603.0], [2356.0, 22270.0], [2340.0, 22889.0], [2532.0, 18738.0], [2500.0, 19620.0], [2516.0, 19160.0], [2548.0, 18337.0], [2436.0, 21014.0], [2452.0, 20565.5], [2484.0, 20166.0], [2468.0, 20023.0], [2660.0, 16930.0], [2676.0, 16690.0], [2628.0, 17253.0], [2644.0, 16740.0], [2580.0, 17690.0], [2564.0, 18418.0], [2612.0, 17395.0], [2596.0, 17607.5], [2788.0, 13823.0], [2756.0, 14917.0], [2772.0, 14132.0], [2804.0, 14055.0], [2692.0, 15573.0], [2708.0, 15765.0], [2740.0, 15182.0], [2724.0, 15463.0], [2916.0, 12060.0], [2932.0, 11936.0], [2884.0, 12968.0], [2900.0, 12728.0], [2836.0, 13510.0], [2820.0, 13163.0], [2868.0, 12967.0], [2852.0, 13042.0], [3044.0, 9592.0], [3060.0, 9550.0], [3012.0, 10272.0], [3028.0, 9884.0], [2964.0, 11110.0], [2948.0, 11571.0], [2996.0, 10435.0], [2980.0, 10974.0], [3140.0, 7712.0], [3188.0, 7583.0], [3172.0, 7445.0], [3092.0, 8547.0], [3076.0, 9695.0], [3108.0, 8773.0], [3316.0, 6096.5], [3284.0, 6997.0], [3300.0, 6298.0], [3252.0, 7202.0], [3236.0, 7173.0], [3428.0, 5143.166666666667], [3444.0, 5261.0], [3348.0, 6249.0], [3380.0, 5394.0], [3460.0, 4931.75], [3492.0, 1171.0], [2165.0, 25677.0], [2117.0, 26104.0], [2149.0, 25901.0], [2053.0, 27096.5], [2069.0, 27531.0], [2101.0, 27077.0], [2085.0, 26419.0], [2133.0, 25910.0], [2277.0, 23465.0], [2293.0, 24039.0], [2245.0, 24757.0], [2261.0, 24460.0], [2181.0, 24976.0], [2197.0, 25292.0], [2229.0, 24304.0], [2213.0, 24547.0], [2421.0, 21016.0], [2373.0, 21943.0], [2405.0, 21294.0], [2309.0, 23328.0], [2325.0, 22995.0], [2357.0, 22656.0], [2341.0, 23170.0], [2389.0, 21796.0], [2533.0, 18734.0], [2549.0, 18330.0], [2501.0, 19843.0], [2517.0, 19522.0], [2437.0, 20875.0], [2453.0, 20657.0], [2485.0, 20160.0], [2469.0, 20707.0], [2629.0, 16860.0], [2677.0, 16103.0], [2645.0, 16669.0], [2565.0, 18725.0], [2581.0, 17586.0], [2613.0, 17054.0], [2597.0, 17558.0], [2757.0, 14747.0], [2773.0, 14050.0], [2805.0, 13715.0], [2709.0, 15380.0], [2693.0, 15604.0], [2741.0, 15720.0], [2725.0, 15558.0], [2917.0, 12176.0], [2885.0, 13003.0], [2901.0, 12718.0], [2933.0, 12236.0], [2837.0, 12986.0], [2821.0, 13439.0], [2869.0, 12687.0], [2853.0, 12936.0], [3045.0, 9571.0], [3061.0, 9316.0], [3013.0, 10169.0], [3029.0, 9888.0], [2965.0, 11291.0], [2949.0, 11820.0], [2997.0, 10475.0], [2981.0, 10664.0], [3141.0, 8152.0], [3157.0, 7841.0], [3173.0, 7221.0], [3093.0, 8482.0], [3077.0, 9114.0], [3125.0, 8464.0], [3109.0, 8282.0], [3269.0, 7410.0], [3285.0, 6908.0], [3317.0, 5795.0], [3301.0, 6024.0], [3221.0, 7190.333333333333], [3445.0, 5262.0], [3429.0, 4972.5], [3381.0, 5351.0], [3461.0, 4811.0], [3477.0, 4448.5], [1083.0, 39188.0], [1075.0, 40241.0], [1067.0, 39273.0], [1059.0, 39663.0], [1027.0, 40631.0], [1035.0, 40996.0], [1051.0, 40947.0], [1043.0, 40920.0], [1139.0, 39017.0], [1099.0, 38819.0], [1091.0, 38970.0], [1131.0, 39244.0], [1115.0, 39752.0], [1107.0, 38766.0], [1211.0, 38352.0], [1203.0, 38406.0], [1195.0, 38446.0], [1187.0, 37400.0], [1155.0, 38866.0], [1163.0, 37793.0], [1179.0, 38646.0], [1171.0, 38350.5], [1275.0, 36432.0], [1267.0, 37674.0], [1259.0, 36695.0], [1251.0, 36806.0], [1243.0, 37847.0], [1219.0, 37067.0], [1227.0, 38031.0], [1235.0, 37874.0], [1339.0, 36462.0], [1331.0, 35572.0], [1323.0, 36634.0], [1315.0, 36841.0], [1283.0, 36832.0], [1291.0, 35962.0], [1307.0, 35916.0], [1299.0, 36043.0], [1403.0, 34862.0], [1395.0, 36066.0], [1387.0, 36162.0], [1379.0, 34975.0], [1347.0, 35891.0], [1355.0, 36451.0], [1371.0, 36268.0], [1363.0, 36241.0], [1467.0, 34074.0], [1459.0, 33750.0], [1451.0, 33822.0], [1443.0, 34844.0], [1411.0, 35874.0], [1419.0, 35493.0], [1435.0, 34021.0], [1427.0, 35367.0], [1531.0, 33250.0], [1523.0, 33119.0], [1515.0, 34428.0], [1507.0, 33450.0], [1475.0, 33502.0], [1483.0, 33800.5], [1499.0, 34564.0], [1491.0, 34591.0], [1595.0, 33518.0], [1587.0, 33601.0], [1579.0, 33627.0], [1571.0, 33866.0], [1539.0, 34178.0], [1547.0, 33175.0], [1555.0, 33007.0], [1659.0, 32875.5], [1651.0, 32957.0], [1643.0, 31989.0], [1635.0, 33084.0], [1611.0, 32276.0], [1627.0, 32893.0], [1619.0, 33300.0], [1715.0, 31811.0], [1699.0, 32349.0], [1667.0, 32088.0], [1675.0, 32551.0], [1691.0, 32316.0], [1683.0, 32478.0], [1763.0, 30192.0], [1787.0, 30044.0], [1771.0, 31306.0], [1779.0, 30894.0], [1739.0, 31493.0], [1755.0, 30375.0], [1747.0, 30304.0], [1851.0, 29935.0], [1827.0, 29637.0], [1843.0, 29510.0], [1795.0, 30694.0], [1803.0, 29948.0], [1819.0, 29789.0], [1811.0, 30370.0], [1835.0, 30225.0], [1915.0, 29765.0], [1907.0, 28661.0], [1891.0, 29935.0], [1867.0, 29149.0], [1859.0, 29161.0], [1883.0, 28849.0], [1875.0, 28943.0], [1899.0, 28716.0], [1955.0, 28066.0], [1979.0, 28444.0], [1963.0, 28927.0], [1931.0, 28969.0], [1923.0, 29167.0], [1947.0, 28382.0], [1939.0, 28376.0], [2035.0, 26973.0], [2043.0, 27861.0], [2019.0, 27849.0], [2027.0, 27226.0], [1987.0, 27903.0], [1995.0, 27605.0], [2011.0, 27845.5], [2003.0, 27307.0], [2150.0, 25861.0], [2166.0, 25792.0], [2118.0, 26070.0], [2134.0, 25803.0], [2054.0, 27218.0], [2070.0, 26703.0], [2102.0, 26463.0], [2086.0, 27291.0], [2278.0, 23451.0], [2294.0, 23268.0], [2246.0, 23948.0], [2262.0, 23678.0], [2182.0, 25630.0], [2198.0, 25729.0], [2230.0, 24267.0], [2214.0, 24523.0], [2422.0, 21392.0], [2406.0, 21664.0], [2374.0, 22690.0], [2390.0, 22356.0], [2326.0, 22976.0], [2310.0, 22904.0], [2358.0, 22316.0], [2342.0, 22787.0], [2534.0, 18966.0], [2550.0, 18452.0], [2502.0, 19466.0], [2518.0, 19068.0], [2438.0, 21522.0], [2454.0, 20883.0], [2486.0, 20417.0], [2470.0, 20016.0], [2678.0, 16708.0], [2662.0, 16634.0], [2630.0, 16839.0], [2646.0, 17215.0], [2582.0, 18300.0], [2566.0, 18344.0], [2614.0, 17664.0], [2598.0, 17507.0], [2806.0, 13557.0], [2758.0, 15148.0], [2790.0, 14041.0], [2694.0, 15770.0], [2710.0, 15637.0], [2742.0, 15082.0], [2726.0, 15235.0], [2934.0, 11581.0], [2918.0, 12019.0], [2886.0, 12729.0], [2902.0, 12657.0], [2822.0, 13122.0], [2870.0, 12662.0], [2854.0, 12784.0], [3046.0, 9539.0], [3062.0, 9854.0], [3014.0, 10163.0], [3030.0, 10124.0], [2966.0, 11681.0], [2950.0, 11524.0], [2998.0, 10334.0], [2982.0, 10946.0], [3174.0, 7257.0], [3142.0, 7782.0], [3158.0, 8024.0], [3094.0, 8989.0], [3078.0, 9273.0], [3126.0, 8259.0], [3222.0, 7153.0], [3254.0, 7433.0], [3350.0, 5885.2], [3446.0, 5016.5], [3334.0, 5648.333333333333], [3382.0, 5375.0], [3366.0, 5764.0], [2151.0, 25337.0], [2167.0, 26052.0], [2119.0, 26888.0], [2135.0, 26429.0], [2055.0, 27267.0], [2071.0, 27126.0], [2103.0, 26743.0], [2087.0, 26631.0], [2295.0, 23282.0], [2247.0, 23942.0], [2263.0, 24084.0], [2183.0, 25867.0], [2231.0, 24687.0], [2215.0, 25052.0], [2423.0, 21009.0], [2391.0, 21552.0], [2407.0, 21919.0], [2311.0, 23305.0], [2327.0, 23346.0], [2359.0, 22917.0], [2343.0, 22875.0], [2503.0, 19566.0], [2551.0, 18922.0], [2519.0, 19651.0], [2535.0, 18694.0], [2455.0, 21185.0], [2439.0, 21508.0], [2487.0, 19773.0], [2679.0, 16051.0], [2663.0, 16413.0], [2631.0, 17495.0], [2647.0, 16587.0], [2567.0, 18692.0], [2583.0, 17579.0], [2615.0, 17298.0], [2599.0, 18152.0], [2791.0, 14325.0], [2807.0, 13373.0], [2759.0, 14510.0], [2775.0, 14285.0], [2711.0, 15375.0], [2695.0, 16146.0], [2743.0, 15072.0], [2727.0, 15210.0], [2919.0, 12416.0], [2887.0, 12924.0], [2903.0, 12151.0], [2935.0, 12137.0], [2839.0, 13333.0], [2823.0, 13142.0], [2871.0, 13133.0], [2855.0, 13123.0], [3063.0, 9448.0], [3047.0, 9505.0], [3015.0, 10386.0], [3031.0, 10367.0], [2967.0, 11225.0], [2951.0, 11552.0], [2999.0, 10275.0], [2983.0, 10712.0], [3191.0, 7277.666666666667], [3175.0, 7444.0], [3143.0, 7742.0], [3159.0, 7645.0], [3095.0, 8450.0], [3079.0, 9100.0], [3127.0, 8606.0], [3111.0, 8364.5], [3303.0, 5789.0], [3239.0, 7052.0], [3447.0, 4772.0], [3351.0, 6263.0], [3463.0, 4762.5], [3479.0, 4243.0], [3495.0, 1232.5], [271.0, 49834.0], [269.0, 51078.0], [267.0, 49915.0], [265.0, 50685.0], [263.0, 51118.0], [257.0, 50120.0], [261.0, 51198.0], [287.0, 50898.0], [285.0, 50878.0], [283.0, 49738.0], [281.0, 50945.0], [279.0, 49773.0], [273.0, 49822.0], [275.0, 49811.0], [277.0, 49776.0], [301.0, 50256.0], [303.0, 49713.0], [291.0, 50250.5], [289.0, 50368.0], [299.0, 49711.0], [297.0, 49679.5], [295.0, 49626.0], [293.0, 50806.0], [307.0, 50236.0], [317.0, 50586.0], [319.0, 49386.5], [305.0, 50726.0], [311.0, 49436.0], [309.0, 49547.0], [335.0, 49959.0], [333.0, 50392.0], [331.0, 49241.0], [329.0, 49342.0], [327.0, 50458.0], [321.0, 50571.0], [323.0, 50514.0], [325.0, 50477.0], [349.0, 50295.5], [351.0, 50220.0], [339.0, 50216.0], [347.0, 49200.0], [345.0, 49134.0], [343.0, 49222.0], [341.0, 49256.0], [367.0, 49598.0], [365.0, 49027.0], [363.0, 49706.0], [361.0, 49076.0], [359.0, 49094.0], [353.0, 49182.0], [357.0, 49124.0], [383.0, 49375.0], [381.0, 48883.0], [379.0, 49413.0], [377.0, 49844.0], [375.0, 49925.0], [369.0, 49957.0], [371.0, 49931.0], [373.0, 48873.0], [399.0, 48202.0], [397.0, 49285.0], [395.0, 49017.0], [393.0, 48272.0], [391.0, 49324.0], [385.0, 49754.0], [387.0, 48366.0], [389.0, 48338.0], [415.0, 47895.0], [413.0, 49043.0], [411.0, 48689.0], [409.0, 48093.0], [407.0, 49221.0], [401.0, 49268.0], [403.0, 48830.0], [405.0, 49225.0], [431.0, 47832.0], [429.0, 47883.0], [427.0, 48892.0], [425.0, 47862.0], [423.0, 47922.5], [417.0, 47973.0], [419.0, 47954.0], [421.0, 47949.0], [445.0, 48093.0], [435.0, 48413.0], [447.0, 48305.5], [443.0, 48766.0], [439.0, 47784.0], [437.0, 47758.0], [433.0, 47810.0], [463.0, 47331.0], [461.0, 47449.0], [459.0, 47488.0], [457.0, 48537.0], [455.0, 48332.0], [451.0, 48757.0], [453.0, 47702.0], [479.0, 47293.0], [477.0, 48160.0], [475.0, 47920.0], [473.0, 48360.0], [465.0, 48053.0], [467.0, 47480.0], [469.0, 47984.0], [495.0, 47022.0], [493.0, 47069.0], [491.0, 47236.0], [489.0, 47464.0], [487.0, 48207.0], [481.0, 47236.0], [485.0, 47855.0], [511.0, 46776.0], [509.0, 47863.0], [507.0, 46833.0], [505.0, 46876.0], [503.0, 46930.0], [497.0, 47634.0], [501.0, 47593.0], [542.0, 46558.0], [538.0, 46608.0], [534.0, 47247.0], [526.0, 47177.0], [514.0, 46786.0], [518.0, 46712.0], [522.0, 46615.0], [574.0, 46099.0], [570.0, 46047.0], [566.0, 46267.0], [562.0, 46348.0], [558.0, 46272.0], [546.0, 46526.0], [550.0, 46343.0], [554.0, 46317.0], [582.0, 45903.0], [578.0, 46048.0], [598.0, 46416.0], [594.0, 45817.0], [590.0, 46850.0], [586.0, 46485.0], [638.0, 46269.0], [634.0, 46166.0], [630.0, 46444.0], [626.0, 46071.0], [622.0, 46422.0], [614.0, 46726.0], [618.0, 46203.0], [670.0, 46159.0], [666.0, 46078.0], [662.0, 45132.0], [658.0, 45322.0], [654.0, 46015.5], [642.0, 45437.0], [646.0, 46303.0], [698.0, 45497.0], [702.0, 45912.0], [678.0, 44826.0], [674.0, 45980.0], [694.0, 45746.0], [690.0, 45962.0], [686.0, 46019.0], [682.0, 45891.0], [710.0, 44688.0], [730.0, 45286.0], [706.0, 45479.0], [726.0, 45515.0], [722.0, 44258.0], [718.0, 44570.0], [714.0, 44623.0], [742.0, 44111.0], [762.0, 44128.0], [738.0, 44334.0], [758.0, 45067.0], [754.0, 44696.0], [750.0, 44768.0], [746.0, 45361.0], [798.0, 43585.0], [794.0, 44091.0], [790.0, 44589.0], [786.0, 44610.5], [782.0, 43635.5], [770.0, 44928.0], [774.0, 43701.0], [778.0, 43896.0], [830.0, 44262.0], [826.0, 43118.0], [818.0, 43188.0], [814.0, 44409.0], [806.0, 43309.0], [802.0, 44625.0], [810.0, 43504.0], [858.0, 43257.0], [862.0, 43893.0], [838.0, 43193.0], [834.0, 43223.0], [854.0, 43979.0], [850.0, 43613.0], [846.0, 43063.0], [842.0, 44096.0], [894.0, 43363.0], [890.0, 43418.0], [886.0, 42246.0], [882.0, 42289.0], [878.0, 43042.0], [870.0, 42269.0], [874.0, 42381.0], [926.0, 42461.0], [922.0, 42975.0], [918.0, 41729.0], [914.0, 41773.0], [910.0, 42790.0], [898.0, 42230.0], [902.0, 41945.0], [906.0, 43182.0], [934.0, 42532.0], [958.0, 41893.0], [930.0, 41443.0], [950.0, 42286.0], [946.0, 42338.0], [942.0, 41115.0], [938.0, 41164.0], [990.0, 40280.0], [986.0, 41472.0], [982.0, 40306.0], [978.0, 40626.0], [974.0, 41935.0], [962.0, 41690.0], [966.0, 42057.0], [970.0, 40888.0], [1022.0, 40619.0], [1018.0, 41145.0], [1014.0, 41168.0], [1010.0, 40187.0], [1006.0, 40104.0], [994.0, 40191.0], [998.0, 41335.0], [1002.0, 40230.0], [1084.0, 40270.0], [1076.0, 40293.0], [1068.0, 39090.0], [1060.0, 40797.0], [1044.0, 39711.0], [1028.0, 39855.0], [1036.0, 41093.0], [1100.0, 39982.0], [1140.0, 37970.0], [1092.0, 39040.0], [1132.0, 38129.0], [1124.0, 38804.5], [1116.0, 39815.0], [1108.0, 38831.0], [1212.0, 38314.0], [1204.0, 38369.0], [1196.0, 37925.0], [1188.0, 37243.0], [1180.0, 37435.0], [1164.0, 38802.0], [1156.0, 38936.0], [1172.0, 38357.0], [1276.0, 36120.0], [1268.0, 37642.0], [1260.0, 36690.0], [1252.0, 37349.0], [1244.0, 37782.0], [1220.0, 38260.0], [1228.0, 38072.0], [1236.0, 38025.0], [1332.0, 35388.0], [1340.0, 36058.0], [1292.0, 37095.0], [1284.0, 36243.0], [1324.0, 36766.0], [1316.0, 36956.0], [1308.0, 37012.0], [1300.0, 37022.0], [1404.0, 34847.0], [1396.0, 35993.0], [1388.0, 36128.0], [1380.0, 36218.0], [1372.0, 36271.0], [1348.0, 35976.0], [1356.0, 35899.0], [1364.0, 36318.0], [1468.0, 34887.0], [1460.0, 34834.0], [1452.0, 35001.0], [1436.0, 34670.0], [1412.0, 35850.0], [1420.0, 34492.0], [1428.0, 35068.0], [1484.0, 33655.0], [1524.0, 33105.0], [1476.0, 34645.0], [1516.0, 34365.0], [1508.0, 34482.0], [1500.0, 34012.0], [1492.0, 34578.0], [1596.0, 32289.0], [1588.0, 33604.0], [1580.0, 33632.0], [1572.0, 33865.0], [1564.0, 33456.0], [1540.0, 34098.0], [1548.0, 34182.0], [1556.0, 34046.0], [1660.0, 31660.0], [1652.0, 32827.0], [1644.0, 33032.0], [1636.0, 32827.0], [1628.0, 33003.0], [1604.0, 32218.0], [1612.0, 32129.0], [1620.0, 33012.0], [1724.0, 31781.5], [1700.0, 32214.0], [1716.0, 31973.0], [1676.0, 32299.0], [1668.0, 31382.0], [1692.0, 32409.0], [1684.0, 31262.0], [1708.0, 31851.5], [1780.0, 31234.0], [1788.0, 31160.0], [1764.0, 30275.0], [1732.0, 31771.5], [1740.0, 31730.0], [1748.0, 30550.0], [1852.0, 30068.0], [1828.0, 30278.0], [1844.0, 29482.0], [1796.0, 31216.0], [1804.0, 29905.0], [1820.0, 30352.0], [1812.0, 30368.0], [1916.0, 29573.0], [1892.0, 29020.0], [1908.0, 29772.0], [1860.0, 29030.0], [1868.0, 30130.0], [1884.0, 29510.0], [1876.0, 28916.0], [1900.0, 28865.0], [1956.0, 29038.0], [1932.0, 28960.0], [1924.0, 29472.0], [1948.0, 28280.0], [1940.0, 28469.0], [1964.0, 27901.0], [2020.0, 27365.0], [2044.0, 27491.0], [2036.0, 27586.0], [1996.0, 28403.0], [2012.0, 28197.0], [2028.0, 27213.0], [2168.0, 25252.0], [2120.0, 25953.0], [2152.0, 25383.0], [2056.0, 26899.0], [2072.0, 27514.0], [2104.0, 26305.0], [2088.0, 26418.0], [2136.0, 25899.0], [2296.0, 23138.0], [2184.0, 25875.0], [2232.0, 24968.0], [2216.0, 25060.0], [2264.0, 23610.0], [2248.0, 23902.0], [2424.0, 21065.0], [2376.0, 22553.5], [2408.0, 21995.0], [2312.0, 23689.0], [2328.0, 22954.0], [2360.0, 22642.0], [2344.0, 23125.0], [2504.0, 19454.0], [2552.0, 18225.0], [2520.0, 19135.0], [2536.0, 19318.0], [2440.0, 21501.0], [2456.0, 20461.0], [2472.0, 20590.5], [2632.0, 16828.0], [2680.0, 16303.0], [2648.0, 16638.0], [2664.0, 16272.0], [2584.0, 17707.0], [2616.0, 17008.0], [2600.0, 18151.0], [2808.0, 13351.0], [2792.0, 13750.0], [2760.0, 14703.0], [2696.0, 15495.0], [2712.0, 15458.0], [2744.0, 15643.0], [2728.0, 15169.0], [2920.0, 11846.0], [2936.0, 11738.0], [2888.0, 12336.0], [2904.0, 12705.0], [2840.0, 13154.0], [2824.0, 13292.0], [2872.0, 12559.0], [2856.0, 12771.0], [3048.0, 10083.0], [3064.0, 9286.0], [3016.0, 10670.0], [3032.0, 10071.0], [2968.0, 11662.0], [2952.0, 11402.0], [3000.0, 10734.0], [2984.0, 10852.0], [3144.0, 7606.0], [3160.0, 7473.0], [3096.0, 8412.0], [3080.0, 9196.0], [3128.0, 8602.0], [3112.0, 8732.0], [3320.0, 6120.0], [3240.0, 7100.2], [3432.0, 5074.666666666667], [3352.0, 5746.0], [3464.0, 4761.0], [3496.0, 1443.0], [2169.0, 25195.0], [2121.0, 26067.0], [2153.0, 25974.0], [2057.0, 26764.0], [2073.0, 27098.0], [2105.0, 26300.0], [2089.0, 26392.0], [2297.0, 24157.0], [2249.0, 23925.0], [2281.0, 23464.0], [2185.0, 25039.0], [2233.0, 24239.0], [2217.0, 24490.0], [2265.0, 23616.0], [2425.0, 21393.0], [2377.0, 22205.0], [2313.0, 22912.0], [2329.0, 22658.0], [2361.0, 22900.0], [2345.0, 22347.0], [2393.0, 21768.5], [2537.0, 19044.0], [2505.0, 19928.0], [2521.0, 19060.0], [2553.0, 18862.0], [2441.0, 20843.0], [2457.0, 21216.0], [2489.0, 20011.5], [2473.0, 20500.0], [2633.0, 17461.0], [2681.0, 16033.0], [2649.0, 16547.0], [2665.0, 16452.0], [2569.0, 18039.5], [2585.0, 18058.0], [2601.0, 17461.0], [2809.0, 13596.0], [2793.0, 13730.0], [2761.0, 14694.0], [2777.0, 14306.0], [2713.0, 15452.0], [2697.0, 15724.0], [2729.0, 15735.0], [2921.0, 12406.0], [2905.0, 12117.0], [2889.0, 12285.0], [2937.0, 11545.0], [2841.0, 12920.0], [2825.0, 13044.0], [2873.0, 12783.0], [2857.0, 13374.0], [3065.0, 9415.0], [3033.0, 10364.0], [3049.0, 10038.0], [2969.0, 11640.0], [2953.0, 11732.0], [3001.0, 10277.0], [2985.0, 10677.0], [3145.0, 7745.0], [3177.0, 7459.0], [3161.0, 7595.0], [3097.0, 8421.0], [3081.0, 9112.0], [3129.0, 7878.0], [3113.0, 8734.0], [3289.0, 6739.5], [3321.0, 5968.0], [3225.0, 7219.0], [3449.0, 5026.0], [3401.0, 5398.0], [3433.0, 4927.0], [3337.0, 6194.5], [3385.0, 5319.666666666667], [3369.0, 5885.0], [3465.0, 5200.0], [3497.0, 1106.0], [1085.0, 39151.0], [1077.0, 39855.0], [1069.0, 40419.0], [1061.0, 39651.0], [1053.0, 40473.5], [1029.0, 39844.0], [1037.0, 39818.0], [1045.0, 39762.0], [1141.0, 37833.0], [1101.0, 38809.0], [1093.0, 38936.0], [1133.0, 38024.0], [1125.0, 39342.0], [1109.0, 38789.0], [1205.0, 37851.0], [1213.0, 38177.0], [1165.0, 37828.0], [1157.0, 37706.0], [1197.0, 37921.0], [1189.0, 37380.0], [1181.0, 37339.0], [1173.0, 38875.0], [1277.0, 37538.0], [1269.0, 37495.0], [1261.0, 36607.0], [1253.0, 37358.0], [1245.0, 37839.0], [1221.0, 37048.0], [1229.0, 37543.0], [1237.0, 37928.0], [1341.0, 36041.0], [1333.0, 36410.0], [1293.0, 37091.0], [1325.0, 36869.0], [1317.0, 35833.0], [1309.0, 35887.0], [1405.0, 35909.0], [1397.0, 34732.0], [1389.0, 36125.0], [1381.0, 36207.0], [1373.0, 34987.0], [1349.0, 36238.0], [1357.0, 36265.0], [1365.0, 36296.0], [1421.0, 35428.0], [1469.0, 33884.0], [1413.0, 35759.0], [1453.0, 34942.0], [1445.0, 34854.0], [1437.0, 33899.0], [1429.0, 34266.0], [1533.0, 34050.0], [1525.0, 32988.0], [1517.0, 33344.0], [1509.0, 34503.0], [1501.0, 34552.0], [1477.0, 33508.0], [1485.0, 34682.0], [1493.0, 34347.0], [1597.0, 33474.0], [1589.0, 33566.0], [1581.0, 33655.0], [1573.0, 33877.0], [1565.0, 33362.0], [1541.0, 34211.0], [1549.0, 34169.0], [1557.0, 32840.0], [1661.0, 31388.0], [1653.0, 32981.0], [1645.0, 31982.0], [1637.0, 31756.0], [1629.0, 33066.0], [1605.0, 32360.0], [1613.0, 33318.0], [1621.0, 33184.0], [1725.0, 30663.0], [1701.0, 32189.0], [1717.0, 31948.0], [1677.0, 31473.0], [1669.0, 32586.0], [1693.0, 32404.0], [1685.0, 31256.0], [1709.0, 31960.0], [1789.0, 30236.0], [1765.0, 31387.0], [1781.0, 31326.0], [1733.0, 31774.0], [1741.0, 31638.0], [1757.0, 30962.5], [1749.0, 31104.0], [1773.0, 31051.0], [1853.0, 30317.0], [1829.0, 30716.0], [1845.0, 30467.0], [1797.0, 30006.0], [1805.0, 31029.0], [1821.0, 30308.0], [1813.0, 30890.0], [1917.0, 29392.0], [1893.0, 28893.0], [1869.0, 29012.0], [1861.0, 30301.0], [1885.0, 29960.0], [1877.0, 29000.0], [1901.0, 29517.0], [1973.0, 27876.333333333332], [1981.0, 27931.0], [1933.0, 29340.0], [1925.0, 28351.0], [1949.0, 29089.0], [1941.0, 29001.0], [1965.0, 28820.0], [2045.0, 27837.0], [2021.0, 27174.0], [2037.0, 27869.0], [1997.0, 28462.0], [2013.0, 28165.0], [2005.0, 27459.5], [2029.0, 27073.0], [2170.0, 25968.0], [2122.0, 26563.0], [2154.0, 26220.0], [2058.0, 27196.0], [2074.0, 27057.0], [2106.0, 26194.0], [2090.0, 26443.0], [2138.0, 26678.0], [2298.0, 23065.0], [2282.0, 23802.0], [2186.0, 25840.0], [2234.0, 24219.0], [2218.0, 24504.0], [2266.0, 23588.0], [2426.0, 21756.0], [2378.0, 22403.0], [2410.0, 21536.0], [2330.0, 22511.0], [2314.0, 23494.0], [2362.0, 22827.0], [2346.0, 22716.0], [2394.0, 22284.0], [2538.0, 19231.0], [2554.0, 18492.0], [2506.0, 19921.0], [2522.0, 19063.0], [2442.0, 20705.0], [2458.0, 20398.0], [2490.0, 20311.0], [2474.0, 19998.0], [2682.0, 16642.0], [2634.0, 16848.0], [2650.0, 16532.0], [2666.0, 16199.0], [2586.0, 18306.0], [2602.0, 17798.0], [2762.0, 14438.0], [2810.0, 13586.0], [2778.0, 14280.0], [2794.0, 13681.0], [2698.0, 16027.0], [2714.0, 15961.0], [2746.0, 15613.5], [2938.0, 11483.0], [2890.0, 12472.0], [2906.0, 12402.0], [2842.0, 12929.0], [2826.0, 13635.0], [2858.0, 13351.0], [3018.0, 10666.0], [3066.0, 9258.0], [3034.0, 10299.0], [3050.0, 9657.0], [2970.0, 11661.0], [2954.0, 11219.0], [2986.0, 10772.0], [3178.0, 7187.0], [3162.0, 7540.0], [3098.0, 8418.0], [3130.0, 7982.0], [3114.0, 8188.0], [3274.0, 7231.0], [3290.0, 5897.0], [3306.0, 6008.25], [3354.0, 6005.5], [3338.0, 6082.0], [3370.0, 5741.0], [3498.0, 1075.0], [2171.0, 25057.0], [2123.0, 26004.0], [2155.0, 25906.0], [2059.0, 26690.0], [2075.0, 26661.0], [2107.0, 26275.0], [2091.0, 26990.0], [2139.0, 26458.0], [2299.0, 23798.0], [2283.0, 24182.0], [2251.0, 23943.0], [2187.0, 24934.0], [2235.0, 24378.0], [2219.0, 24476.0], [2267.0, 23587.0], [2427.0, 21679.0], [2379.0, 22443.0], [2411.0, 21111.0], [2315.0, 22729.0], [2331.0, 22889.0], [2363.0, 22067.0], [2347.0, 23098.0], [2395.0, 21945.0], [2555.0, 18480.0], [2507.0, 19805.0], [2539.0, 18622.0], [2459.0, 20374.0], [2443.0, 20778.0], [2491.0, 19715.0], [2475.0, 20233.0], [2651.0, 16465.0], [2667.0, 16819.0], [2571.0, 18030.5], [2587.0, 17899.0], [2619.0, 17237.5], [2603.0, 17921.0], [2763.0, 14315.0], [2811.0, 13235.0], [2779.0, 14067.0], [2795.0, 14163.0], [2715.0, 15686.0], [2699.0, 16026.0], [2731.0, 15644.0], [2939.0, 12015.0], [2923.0, 12077.0], [2907.0, 12396.0], [2891.0, 12828.0], [2843.0, 13505.0], [2827.0, 13659.0], [2875.0, 12678.5], [2859.0, 13292.0], [3067.0, 9294.0], [3051.0, 9705.0], [3035.0, 9747.0], [2971.0, 11663.0], [2955.0, 11222.0], [3003.0, 10349.0], [2987.0, 10620.0], [3179.0, 7168.0], [3163.0, 7541.0], [3099.0, 8903.0], [3083.0, 8884.5], [3131.0, 7967.0], [3115.0, 8164.0], [3323.0, 5963.0], [3275.0, 7145.142857142857], [3259.0, 7130.833333333333], [3243.0, 7272.333333333333], [3419.0, 5084.666666666668], [3451.0, 5253.0], [3355.0, 6203.0], [3339.0, 5690.5], [3467.0, 4762.0], [3483.0, 2045.3333333333333], [543.0, 47190.0], [539.0, 46579.0], [535.0, 46513.0], [531.0, 46904.5], [527.0, 47570.0], [515.0, 46713.0], [519.0, 46797.0], [523.0, 47637.0], [575.0, 46983.0], [571.0, 46647.0], [567.0, 46099.0], [563.0, 46208.0], [559.0, 46376.0], [547.0, 46398.0], [551.0, 46330.0], [555.0, 46278.0], [607.0, 45847.0], [603.0, 46097.5], [599.0, 46397.0], [595.0, 46449.0], [591.0, 46490.0], [579.0, 46920.0], [583.0, 46647.0], [587.0, 45886.0], [639.0, 45367.0], [635.0, 45428.0], [627.0, 45573.0], [623.0, 45634.0], [611.0, 46276.5], [615.0, 45735.0], [619.0, 45574.0], [671.0, 45759.0], [667.0, 44981.0], [663.0, 45124.0], [659.0, 45276.0], [655.0, 46104.0], [643.0, 46311.0], [647.0, 45190.0], [651.0, 46224.0], [679.0, 44871.0], [699.0, 45816.0], [675.0, 45028.0], [695.0, 45945.0], [691.0, 44882.0], [687.0, 44950.0], [683.0, 45036.0], [735.0, 45313.0], [731.0, 44927.0], [727.0, 44348.0], [723.0, 45240.0], [707.0, 45314.0], [711.0, 45148.0], [715.0, 44393.0], [767.0, 44585.5], [763.0, 45165.0], [759.0, 44185.0], [755.0, 44209.0], [751.0, 44257.0], [739.0, 45409.0], [743.0, 44322.0], [747.0, 45173.0], [799.0, 44435.0], [795.0, 44618.0], [791.0, 44104.0], [787.0, 43452.0], [783.0, 44906.0], [771.0, 43964.0], [775.0, 43558.0], [779.0, 44944.0], [831.0, 43310.0], [827.0, 43965.0], [823.0, 44217.5], [819.0, 43408.0], [815.0, 43438.0], [803.0, 43546.0], [807.0, 44523.0], [811.0, 44441.0], [859.0, 43964.0], [863.0, 43907.0], [839.0, 43135.0], [835.0, 43827.0], [855.0, 43988.0], [851.0, 42946.0], [847.0, 43964.0], [843.0, 43143.0], [895.0, 42096.0], [891.0, 42129.0], [887.0, 43488.0], [883.0, 42117.0], [879.0, 42280.0], [867.0, 42993.0], [871.0, 42267.0], [875.0, 42325.0], [903.0, 42050.0], [923.0, 42789.0], [899.0, 41998.0], [919.0, 42993.0], [915.0, 42911.0], [911.0, 42772.0], [907.0, 41820.0], [959.0, 42039.0], [955.0, 41323.0], [951.0, 42176.0], [947.0, 41259.0], [943.0, 41833.0], [931.0, 41308.0], [935.0, 42451.0], [939.0, 42317.0], [991.0, 40395.0], [987.0, 40288.0], [983.0, 40456.0], [979.0, 40649.0], [975.0, 40644.0], [963.0, 41982.0], [967.0, 40787.0], [971.0, 40606.0], [1023.0, 41147.0], [1019.0, 41136.0], [1015.0, 40996.0], [1011.0, 40155.0], [1007.0, 40043.0], [995.0, 40185.0], [999.0, 41148.0], [1003.0, 40217.0], [1086.0, 39024.0], [1078.0, 39131.0], [1070.0, 39070.0], [1030.0, 39845.0], [1038.0, 40988.0], [1046.0, 39691.0], [1102.0, 38798.0], [1142.0, 37874.0], [1094.0, 40012.0], [1134.0, 38061.0], [1126.0, 38103.0], [1118.0, 39159.0], [1110.0, 38812.0], [1214.0, 37127.0], [1206.0, 37231.0], [1198.0, 38295.0], [1190.0, 37367.0], [1182.0, 37511.0], [1158.0, 38941.0], [1174.0, 37490.0], [1278.0, 37011.0], [1270.0, 37573.0], [1262.0, 36542.0], [1254.0, 36769.0], [1246.0, 37774.0], [1222.0, 38220.0], [1230.0, 38049.0], [1238.0, 36891.0], [1342.0, 36410.0], [1334.0, 35524.0], [1326.0, 35608.0], [1318.0, 35567.0], [1310.0, 36783.0], [1286.0, 37040.0], [1294.0, 36696.0], [1302.0, 36436.5], [1406.0, 35819.0], [1398.0, 34717.0], [1390.0, 34736.0], [1382.0, 35717.0], [1374.0, 35056.0], [1350.0, 36253.0], [1358.0, 36312.0], [1366.0, 36324.0], [1462.0, 34329.0], [1470.0, 34781.0], [1422.0, 35441.0], [1414.0, 35347.0], [1454.0, 34970.0], [1446.0, 35052.0], [1438.0, 34631.0], [1430.0, 33982.0], [1534.0, 34333.0], [1526.0, 33104.0], [1518.0, 34455.0], [1510.0, 34483.0], [1502.0, 33481.0], [1486.0, 33410.0], [1478.0, 34788.0], [1494.0, 33490.0], [1598.0, 33451.0], [1550.0, 34022.0], [1582.0, 32242.0], [1574.0, 33868.0], [1566.0, 32689.0], [1558.0, 34018.0], [1654.0, 31743.0], [1662.0, 31355.0], [1614.0, 33310.0], [1606.0, 32321.0], [1646.0, 31703.0], [1638.0, 33049.0], [1630.0, 31923.0], [1622.0, 32052.0], [1726.0, 31828.0], [1702.0, 32181.0], [1718.0, 30618.0], [1694.0, 32295.0], [1670.0, 32575.0], [1678.0, 31433.0], [1686.0, 32448.0], [1710.0, 31960.0], [1758.0, 30992.0], [1734.0, 31768.0], [1742.0, 31703.0], [1750.0, 31527.0], [1774.0, 30851.0], [1766.0, 31474.0], [1854.0, 29448.0], [1830.0, 30645.0], [1846.0, 30387.0], [1822.0, 30610.0], [1798.0, 31212.0], [1806.0, 30038.0], [1814.0, 30802.0], [1838.0, 29861.666666666668], [1918.0, 28443.0], [1894.0, 28993.0], [1910.0, 29207.5], [1886.0, 29954.0], [1862.0, 30234.0], [1870.0, 28903.0], [1878.0, 29821.0], [1902.0, 28718.0], [1982.0, 28524.0], [1958.0, 28428.5], [1934.0, 29406.0], [1926.0, 29157.0], [1950.0, 28802.0], [1942.0, 29137.0], [1966.0, 27993.0], [2046.0, 27557.0], [2022.0, 27365.0], [2038.0, 27035.0], [2014.0, 28021.0], [1998.0, 27352.0], [2006.0, 27646.0], [2030.0, 27252.0], [2172.0, 25124.0], [2124.0, 26810.0], [2156.0, 26176.0], [2108.0, 27089.0], [2060.0, 27324.0], [2076.0, 27069.0], [2092.0, 27244.0], [2140.0, 26400.0], [2300.0, 23790.0], [2236.0, 25005.0], [2188.0, 25018.0], [2204.0, 25509.5], [2220.0, 24498.0], [2268.0, 24119.0], [2428.0, 21050.0], [2380.0, 22145.0], [2412.0, 21293.0], [2364.0, 22030.0], [2316.0, 23487.0], [2348.0, 23009.0], [2396.0, 22072.0], [2540.0, 18520.0], [2556.0, 18342.0], [2508.0, 20108.0], [2524.0, 19220.0], [2492.0, 19686.0], [2444.0, 21161.0], [2460.0, 20339.0], [2476.0, 20078.0], [2636.0, 17131.0], [2652.0, 16983.0], [2668.0, 16428.0], [2588.0, 17655.0], [2572.0, 17873.0], [2620.0, 17339.0], [2604.0, 17282.0], [2796.0, 14203.0], [2812.0, 13219.0], [2764.0, 14298.0], [2780.0, 13888.0], [2700.0, 15507.0], [2716.0, 15661.0], [2748.0, 15157.5], [2732.0, 15167.0], [2892.0, 12275.0], [2940.0, 11728.0], [2908.0, 12640.0], [2924.0, 11819.0], [2844.0, 13224.0], [2828.0, 13052.0], [2876.0, 12634.0], [3068.0, 9403.0], [3020.0, 10521.0], [3052.0, 9399.0], [2972.0, 10975.0], [2956.0, 11167.0], [3004.0, 10213.0], [2988.0, 11138.0], [3180.0, 7301.0], [3164.0, 7917.0], [3084.0, 8746.0], [3132.0, 8317.0], [3276.0, 7400.0], [3292.0, 5937.0], [3356.0, 5863.0], [3436.0, 5056.666666666667], [3372.0, 5644.5], [3500.0, 1016.5], [3468.0, 4905.0], [3484.0, 1818.0], [2173.0, 25844.0], [2125.0, 26806.0], [2157.0, 26040.0], [2109.0, 26810.0], [2077.0, 26494.0], [2093.0, 27245.0], [2141.0, 26353.0], [2301.0, 22985.0], [2253.0, 24352.666666666668], [2285.0, 23580.0], [2237.0, 24605.0], [2189.0, 25579.0], [2221.0, 24492.0], [2269.0, 23595.0], [2413.0, 21507.0], [2381.0, 22140.0], [2365.0, 22820.0], [2317.0, 22954.0], [2333.0, 22842.0], [2349.0, 22257.0], [2397.0, 21542.0], [2509.0, 19492.0], [2525.0, 19057.0], [2541.0, 18892.0], [2493.0, 19569.0], [2445.0, 21438.0], [2461.0, 20692.0], [2477.0, 20464.0], [2637.0, 17413.0], [2685.0, 16062.333333333334], [2653.0, 16440.0], [2669.0, 16428.0], [2573.0, 18257.0], [2589.0, 17588.0], [2605.0, 17282.0], [2813.0, 13233.0], [2765.0, 14484.0], [2797.0, 14126.0], [2717.0, 15677.0], [2701.0, 16084.0], [2749.0, 15060.0], [2733.0, 15757.0], [2925.0, 11993.0], [2909.0, 12661.0], [2893.0, 12222.0], [2941.0, 11449.0], [2845.0, 12914.0], [2829.0, 13120.0], [2877.0, 13126.0], [2861.0, 13336.5], [3069.0, 9721.0], [3037.0, 9861.0], [3053.0, 9976.0], [2973.0, 10809.0], [2957.0, 11309.0], [3005.0, 10374.0], [2989.0, 11129.0], [3181.0, 7390.0], [3165.0, 7907.0], [3101.0, 8443.0], [3085.0, 8963.0], [3133.0, 7948.0], [3117.0, 8287.0], [3325.0, 5940.0], [3437.0, 4826.0], [3357.0, 5962.0], [3373.0, 5745.0], [1087.0, 40072.0], [1079.0, 39943.0], [1071.0, 39216.0], [1055.0, 40750.5], [1031.0, 39790.0], [1039.0, 39825.0], [1047.0, 40944.0], [1143.0, 38579.0], [1151.0, 38158.2], [1103.0, 38789.0], [1095.0, 40022.0], [1135.0, 38096.0], [1127.0, 38160.0], [1111.0, 38807.0], [1215.0, 37781.0], [1207.0, 37244.0], [1199.0, 38278.0], [1191.0, 38346.0], [1183.0, 38443.0], [1159.0, 38902.0], [1167.0, 37558.5], [1175.0, 37424.0], [1279.0, 37259.0], [1271.0, 36488.0], [1223.0, 38167.0], [1231.0, 36864.0], [1239.0, 37887.0], [1343.0, 36581.0], [1335.0, 36609.0], [1327.0, 35310.0], [1319.0, 35848.0], [1311.0, 36989.0], [1287.0, 37310.0], [1295.0, 36096.0], [1303.0, 36969.0], [1407.0, 34622.0], [1399.0, 34771.0], [1391.0, 36122.0], [1383.0, 34811.0], [1375.0, 36272.0], [1351.0, 36229.0], [1359.0, 35200.0], [1367.0, 36213.0], [1471.0, 34845.0], [1463.0, 33868.0], [1455.0, 34442.0], [1447.0, 35014.0], [1439.0, 33852.0], [1415.0, 35772.0], [1423.0, 34250.0], [1431.0, 34717.0], [1535.0, 34229.0], [1527.0, 34398.0], [1519.0, 34202.0], [1511.0, 34460.0], [1503.0, 34520.0], [1479.0, 34731.0], [1487.0, 34662.0], [1495.0, 34555.0], [1599.0, 32933.0], [1591.0, 32365.0], [1583.0, 33649.0], [1575.0, 33424.0], [1567.0, 33891.0], [1543.0, 34086.0], [1551.0, 34087.0], [1559.0, 33887.0], [1663.0, 32657.0], [1655.0, 31706.0], [1639.0, 31879.0], [1631.0, 32122.0], [1607.0, 33386.0], [1615.0, 33307.0], [1623.0, 33275.0], [1719.0, 31929.0], [1727.0, 30618.0], [1695.0, 32365.0], [1679.0, 32433.0], [1687.0, 32440.0], [1711.0, 31951.0], [1703.0, 32141.0], [1791.0, 30098.0], [1767.0, 30146.0], [1783.0, 31164.5], [1759.0, 30343.0], [1743.0, 31665.0], [1751.0, 31611.0], [1775.0, 30855.0], [1855.0, 30192.0], [1831.0, 29716.0], [1847.0, 29324.0], [1823.0, 29770.0], [1799.0, 31203.0], [1807.0, 30544.0], [1815.0, 30882.0], [1839.0, 29476.0], [1919.0, 28429.0], [1911.0, 29603.0], [1895.0, 28753.0], [1871.0, 28901.0], [1863.0, 30137.0], [1887.0, 29887.0], [1879.0, 29846.0], [1983.0, 28682.0], [1959.0, 27949.0], [1975.0, 28094.0], [1935.0, 28496.0], [1927.0, 28572.0], [1951.0, 29163.0], [1943.0, 28428.0], [1967.0, 28227.0], [2047.0, 27749.0], [2023.0, 28266.0], [2039.0, 27126.0], [2015.0, 28184.0], [1991.0, 28624.75], [1999.0, 28395.0], [2007.0, 27960.0], [2031.0, 27149.0], [2174.0, 25947.0], [2126.0, 26404.0], [2158.0, 26030.0], [2110.0, 27037.0], [2062.0, 27147.5], [2078.0, 27402.0], [2142.0, 25974.0], [2302.0, 23776.0], [2254.0, 23902.0], [2286.0, 23670.0], [2238.0, 24200.0], [2190.0, 24987.0], [2206.0, 24900.5], [2222.0, 24494.0], [2270.0, 24227.0], [2414.0, 21830.0], [2382.0, 21769.0], [2334.0, 22858.0], [2318.0, 22666.0], [2366.0, 22824.0], [2350.0, 22235.0], [2398.0, 21713.0], [2542.0, 19281.0], [2510.0, 19486.0], [2558.0, 18635.5], [2526.0, 19008.0], [2494.0, 20251.0], [2446.0, 21402.0], [2462.0, 21020.0], [2478.0, 20088.0], [2686.0, 15750.0], [2670.0, 16740.0], [2638.0, 17029.0], [2654.0, 16991.0], [2590.0, 17595.0], [2574.0, 18499.0], [2622.0, 17366.5], [2606.0, 17889.0], [2766.0, 14438.0], [2814.0, 13270.0], [2782.0, 14178.0], [2798.0, 13567.0], [2750.0, 15048.0], [2718.0, 15927.0], [2734.0, 15362.0], [2926.0, 11812.0], [2942.0, 11404.0], [2894.0, 12217.0], [2910.0, 12663.0], [2846.0, 13198.0], [2830.0, 13620.0], [2878.0, 13123.0], [2862.0, 13330.0], [3054.0, 9960.0], [3070.0, 9750.0], [3022.0, 10144.0], [3038.0, 10284.0], [2974.0, 10979.0], [2958.0, 11740.0], [3006.0, 10473.0], [2990.0, 10860.0], [3102.0, 8463.0], [3150.0, 7659.2], [3166.0, 7607.0], [3182.0, 7386.0], [3086.0, 8714.0], [3118.0, 8521.0], [3310.0, 6052.2], [3326.0, 6310.0], [3214.0, 6944.0], [3230.0, 7259.0], [3438.0, 4840.0], [3454.0, 4790.666666666667], [3342.0, 6040.0], [3470.0, 4946.333333333333], [3486.0, 2170.0], [2175.0, 25122.0], [2127.0, 26378.0], [2159.0, 25734.0], [2111.0, 26215.0], [2063.0, 26748.0], [2079.0, 26478.0], [2095.0, 26780.0], [2143.0, 26341.0], [2303.0, 23711.0], [2255.0, 24429.0], [2287.0, 23370.0], [2207.0, 24586.0], [2191.0, 25560.0], [2239.0, 24950.0], [2223.0, 24446.0], [2271.0, 24049.0], [2431.0, 21375.0], [2383.0, 22012.0], [2415.0, 21611.0], [2367.0, 22438.0], [2319.0, 22654.0], [2335.0, 22449.0], [2351.0, 22242.0], [2399.0, 21520.0], [2511.0, 19390.0], [2559.0, 18553.0], [2527.0, 19685.0], [2543.0, 18504.0], [2463.0, 20201.0], [2447.0, 21381.0], [2495.0, 20309.0], [2687.0, 15668.0], [2671.0, 16386.0], [2639.0, 17015.0], [2655.0, 16636.0], [2623.0, 17303.0], [2575.0, 18426.0], [2591.0, 17859.0], [2799.0, 13748.0], [2815.0, 13291.0], [2767.0, 14441.0], [2783.0, 14211.0], [2719.0, 15301.0], [2703.0, 15868.5], [2751.0, 15008.0], [2735.0, 15759.0], [2927.0, 12088.0], [2943.0, 11606.0], [2911.0, 11871.0], [2895.0, 12787.0], [2847.0, 13222.0], [2831.0, 13018.0], [2879.0, 12521.0], [2863.0, 13323.0], [3023.0, 10084.0], [3039.0, 9780.0], [3055.0, 9357.0], [2975.0, 11054.0], [2959.0, 11713.0], [3007.0, 10474.0], [2991.0, 10641.0], [3151.0, 7696.0], [3167.0, 7519.0], [3103.0, 8532.0], [3135.0, 7905.0], [3327.0, 6318.0], [3295.0, 5966.0], [3311.0, 5871.5], [3215.0, 7025.0], [3231.0, 7163.125], [3247.0, 7397.0], [3455.0, 4790.0], [3487.0, 2163.0], [1.0, 54988.0]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[1751.0448571428542, 29952.335714285702]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 3500.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 8925.783333333333, "minX": 1.63046418E12, "maxY": 57489.833333333336, "series": [{"data": [[1.63046418E12, 29371.45], [1.63046424E12, 57489.833333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63046418E12, 8925.783333333333], [1.63046424E12, 17491.833333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63046424E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 12759.352452202815, "minX": 1.63046418E12, "maxY": 38956.7583804964, "series": [{"data": [[1.63046418E12, 12759.352452202815], [1.63046424E12, 38956.7583804964]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046424E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 12558.738154613473, "minX": 1.63046418E12, "maxY": 38954.6264693078, "series": [{"data": [[1.63046418E12, 12558.738154613473], [1.63046424E12, 38954.6264693078]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046424E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1474.527015793848, "minX": 1.63046418E12, "maxY": 5825.025685676977, "series": [{"data": [[1.63046418E12, 1474.527015793848], [1.63046424E12, 5825.025685676977]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046424E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 887.0, "minX": 1.63046418E12, "maxY": 54988.0, "series": [{"data": [[1.63046418E12, 23798.0], [1.63046424E12, 54988.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63046418E12, 21507.0], [1.63046424E12, 51008.20000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63046418E12, 23394.3], [1.63046424E12, 54094.72]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63046418E12, 22622.5], [1.63046424E12, 52645.899999999994]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63046418E12, 887.0], [1.63046424E12, 23138.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63046418E12, 12728.0], [1.63046424E12, 38352.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63046424E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1146.0, "minX": 5.0, "maxY": 52783.0, "series": [{"data": [[39.0, 18966.0], [41.0, 9112.0], [42.0, 15175.5], [44.0, 26251.5], [49.0, 20016.0], [51.0, 16010.5], [50.0, 34822.0], [52.0, 18020.5], [53.0, 47895.0], [54.0, 32851.5], [58.0, 14054.0], [59.0, 28307.0], [61.0, 31766.0], [60.0, 25971.0], [63.0, 42988.0], [65.0, 22917.0], [64.0, 24955.0], [67.0, 32295.0], [66.0, 52783.0], [68.0, 29279.0], [73.0, 27903.0], [74.0, 36884.5], [79.0, 36923.0], [76.0, 29924.0], [77.0, 40626.0], [5.0, 4243.0], [81.0, 13123.0], [80.0, 45937.5], [82.0, 48411.0], [84.0, 28908.5], [87.0, 33249.0], [89.0, 36105.0], [88.0, 37914.0], [94.0, 27345.0], [92.0, 5897.0], [98.0, 31148.0], [102.0, 45867.0], [110.0, 34322.0], [119.0, 7112.0], [10.0, 2018.0], [11.0, 1146.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[92.0, 5963.0], [53.0, 21995.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 119.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 5.0, "maxY": 52783.0, "series": [{"data": [[39.0, 18965.0], [41.0, 9111.0], [42.0, 15175.5], [44.0, 26251.5], [49.0, 20016.0], [51.0, 16010.5], [50.0, 34822.0], [52.0, 18020.5], [53.0, 47895.0], [54.0, 32851.5], [58.0, 14054.0], [59.0, 28306.5], [61.0, 31766.0], [60.0, 25971.0], [63.0, 42988.0], [65.0, 22917.0], [64.0, 24955.0], [67.0, 32295.0], [66.0, 52783.0], [68.0, 29279.0], [73.0, 27903.0], [74.0, 36884.5], [79.0, 36923.0], [76.0, 29924.0], [77.0, 40626.0], [5.0, 4243.0], [81.0, 13119.0], [80.0, 45937.5], [82.0, 48384.0], [84.0, 28908.5], [87.0, 33249.0], [89.0, 36105.0], [88.0, 37914.0], [94.0, 27345.0], [92.0, 5818.0], [98.0, 31148.0], [102.0, 45867.0], [110.0, 34322.0], [119.0, 7095.0], [10.0, 2018.0], [11.0, 1145.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[92.0, 0.0], [53.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 119.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 58.333333333333336, "minX": 1.63046418E12, "maxY": 58.333333333333336, "series": [{"data": [[1.63046418E12, 58.333333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63046418E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.63046418E12, "maxY": 38.28333333333333, "series": [{"data": [[1.63046418E12, 19.483333333333334], [1.63046424E12, 38.28333333333333]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63046418E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.63046418E12, 0.55]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63046424E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.5666666666666667, "minX": 1.63046418E12, "maxY": 38.28333333333333, "series": [{"data": [[1.63046418E12, 0.5666666666666667]], "isOverall": false, "label": "HTTP请求-failure", "isController": false}, {"data": [[1.63046418E12, 19.483333333333334], [1.63046424E12, 38.28333333333333]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046424E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.5666666666666667, "minX": 1.63046418E12, "maxY": 38.28333333333333, "series": [{"data": [[1.63046418E12, 19.483333333333334], [1.63046424E12, 38.28333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63046418E12, 0.5666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046424E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

