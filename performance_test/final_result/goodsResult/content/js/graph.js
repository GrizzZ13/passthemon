/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 20.0, "minX": 0.0, "maxY": 159771.0, "series": [{"data": [[0.0, 20.0], [0.1, 23.0], [0.2, 25.0], [0.3, 26.0], [0.4, 28.0], [0.5, 31.0], [0.6, 34.0], [0.7, 36.0], [0.8, 37.0], [0.9, 38.0], [1.0, 38.0], [1.1, 39.0], [1.2, 39.0], [1.3, 40.0], [1.4, 40.0], [1.5, 40.0], [1.6, 41.0], [1.7, 41.0], [1.8, 41.0], [1.9, 41.0], [2.0, 41.0], [2.1, 41.0], [2.2, 42.0], [2.3, 42.0], [2.4, 42.0], [2.5, 42.0], [2.6, 42.0], [2.7, 43.0], [2.8, 43.0], [2.9, 43.0], [3.0, 43.0], [3.1, 43.0], [3.2, 43.0], [3.3, 43.0], [3.4, 44.0], [3.5, 44.0], [3.6, 44.0], [3.7, 44.0], [3.8, 44.0], [3.9, 44.0], [4.0, 44.0], [4.1, 45.0], [4.2, 45.0], [4.3, 45.0], [4.4, 45.0], [4.5, 45.0], [4.6, 45.0], [4.7, 45.0], [4.8, 46.0], [4.9, 46.0], [5.0, 46.0], [5.1, 46.0], [5.2, 46.0], [5.3, 46.0], [5.4, 46.0], [5.5, 47.0], [5.6, 47.0], [5.7, 47.0], [5.8, 47.0], [5.9, 47.0], [6.0, 47.0], [6.1, 47.0], [6.2, 48.0], [6.3, 48.0], [6.4, 48.0], [6.5, 48.0], [6.6, 48.0], [6.7, 48.0], [6.8, 49.0], [6.9, 49.0], [7.0, 49.0], [7.1, 49.0], [7.2, 50.0], [7.3, 50.0], [7.4, 50.0], [7.5, 50.0], [7.6, 50.0], [7.7, 50.0], [7.8, 50.0], [7.9, 51.0], [8.0, 51.0], [8.1, 51.0], [8.2, 51.0], [8.3, 51.0], [8.4, 52.0], [8.5, 52.0], [8.6, 52.0], [8.7, 53.0], [8.8, 53.0], [8.9, 53.0], [9.0, 54.0], [9.1, 54.0], [9.2, 54.0], [9.3, 54.0], [9.4, 55.0], [9.5, 55.0], [9.6, 55.0], [9.7, 56.0], [9.8, 56.0], [9.9, 56.0], [10.0, 57.0], [10.1, 57.0], [10.2, 57.0], [10.3, 58.0], [10.4, 58.0], [10.5, 58.0], [10.6, 58.0], [10.7, 59.0], [10.8, 59.0], [10.9, 60.0], [11.0, 60.0], [11.1, 60.0], [11.2, 61.0], [11.3, 62.0], [11.4, 62.0], [11.5, 63.0], [11.6, 63.0], [11.7, 64.0], [11.8, 64.0], [11.9, 64.0], [12.0, 65.0], [12.1, 65.0], [12.2, 66.0], [12.3, 66.0], [12.4, 67.0], [12.5, 67.0], [12.6, 68.0], [12.7, 68.0], [12.8, 69.0], [12.9, 70.0], [13.0, 70.0], [13.1, 71.0], [13.2, 71.0], [13.3, 72.0], [13.4, 72.0], [13.5, 73.0], [13.6, 73.0], [13.7, 74.0], [13.8, 75.0], [13.9, 75.0], [14.0, 76.0], [14.1, 76.0], [14.2, 77.0], [14.3, 77.0], [14.4, 78.0], [14.5, 79.0], [14.6, 79.0], [14.7, 80.0], [14.8, 81.0], [14.9, 81.0], [15.0, 82.0], [15.1, 84.0], [15.2, 85.0], [15.3, 86.0], [15.4, 88.0], [15.5, 89.0], [15.6, 91.0], [15.7, 93.0], [15.8, 96.0], [15.9, 97.0], [16.0, 101.0], [16.1, 106.0], [16.2, 112.0], [16.3, 117.0], [16.4, 124.0], [16.5, 135.0], [16.6, 140.0], [16.7, 147.0], [16.8, 160.0], [16.9, 177.0], [17.0, 194.0], [17.1, 205.0], [17.2, 216.0], [17.3, 240.0], [17.4, 253.0], [17.5, 277.0], [17.6, 299.0], [17.7, 314.0], [17.8, 334.0], [17.9, 358.0], [18.0, 371.0], [18.1, 380.0], [18.2, 407.0], [18.3, 418.0], [18.4, 437.0], [18.5, 455.0], [18.6, 466.0], [18.7, 476.0], [18.8, 489.0], [18.9, 493.0], [19.0, 499.0], [19.1, 510.0], [19.2, 520.0], [19.3, 526.0], [19.4, 530.0], [19.5, 534.0], [19.6, 540.0], [19.7, 547.0], [19.8, 554.0], [19.9, 579.0], [20.0, 593.0], [20.1, 605.0], [20.2, 614.0], [20.3, 620.0], [20.4, 630.0], [20.5, 646.0], [20.6, 668.0], [20.7, 673.0], [20.8, 682.0], [20.9, 702.0], [21.0, 724.0], [21.1, 738.0], [21.2, 748.0], [21.3, 753.0], [21.4, 762.0], [21.5, 778.0], [21.6, 792.0], [21.7, 796.0], [21.8, 805.0], [21.9, 817.0], [22.0, 820.0], [22.1, 828.0], [22.2, 835.0], [22.3, 850.0], [22.4, 870.0], [22.5, 876.0], [22.6, 887.0], [22.7, 893.0], [22.8, 902.0], [22.9, 909.0], [23.0, 918.0], [23.1, 922.0], [23.2, 931.0], [23.3, 939.0], [23.4, 949.0], [23.5, 959.0], [23.6, 973.0], [23.7, 993.0], [23.8, 1020.0], [23.9, 1054.0], [24.0, 1096.0], [24.1, 1137.0], [24.2, 1185.0], [24.3, 1221.0], [24.4, 1243.0], [24.5, 1255.0], [24.6, 1266.0], [24.7, 1277.0], [24.8, 1309.0], [24.9, 1331.0], [25.0, 1348.0], [25.1, 1364.0], [25.2, 1374.0], [25.3, 1387.0], [25.4, 1401.0], [25.5, 1417.0], [25.6, 1435.0], [25.7, 1450.0], [25.8, 1465.0], [25.9, 1472.0], [26.0, 1477.0], [26.1, 1519.0], [26.2, 1529.0], [26.3, 1535.0], [26.4, 1541.0], [26.5, 1549.0], [26.6, 1604.0], [26.7, 1657.0], [26.8, 1685.0], [26.9, 1694.0], [27.0, 1710.0], [27.1, 1728.0], [27.2, 1740.0], [27.3, 1750.0], [27.4, 1788.0], [27.5, 1849.0], [27.6, 1891.0], [27.7, 1913.0], [27.8, 1918.0], [27.9, 1923.0], [28.0, 1927.0], [28.1, 1936.0], [28.2, 1945.0], [28.3, 1968.0], [28.4, 2039.0], [28.5, 2095.0], [28.6, 2156.0], [28.7, 2203.0], [28.8, 2225.0], [28.9, 2251.0], [29.0, 2265.0], [29.1, 2279.0], [29.2, 2289.0], [29.3, 2307.0], [29.4, 2321.0], [29.5, 2328.0], [29.6, 2357.0], [29.7, 2371.0], [29.8, 2385.0], [29.9, 2420.0], [30.0, 2435.0], [30.1, 2447.0], [30.2, 2456.0], [30.3, 2463.0], [30.4, 2470.0], [30.5, 2477.0], [30.6, 2484.0], [30.7, 2492.0], [30.8, 2499.0], [30.9, 2514.0], [31.0, 2533.0], [31.1, 2547.0], [31.2, 2556.0], [31.3, 2566.0], [31.4, 2574.0], [31.5, 2581.0], [31.6, 2588.0], [31.7, 2591.0], [31.8, 2596.0], [31.9, 2598.0], [32.0, 2600.0], [32.1, 2602.0], [32.2, 2604.0], [32.3, 2606.0], [32.4, 2608.0], [32.5, 2610.0], [32.6, 2612.0], [32.7, 2613.0], [32.8, 2615.0], [32.9, 2616.0], [33.0, 2618.0], [33.1, 2620.0], [33.2, 2621.0], [33.3, 2623.0], [33.4, 2626.0], [33.5, 2627.0], [33.6, 2631.0], [33.7, 2634.0], [33.8, 2638.0], [33.9, 2643.0], [34.0, 2648.0], [34.1, 2654.0], [34.2, 2657.0], [34.3, 2660.0], [34.4, 2663.0], [34.5, 2668.0], [34.6, 2671.0], [34.7, 2677.0], [34.8, 2681.0], [34.9, 2700.0], [35.0, 2769.0], [35.1, 2841.0], [35.2, 2878.0], [35.3, 2922.0], [35.4, 2953.0], [35.5, 2976.0], [35.6, 3003.0], [35.7, 3051.0], [35.8, 3068.0], [35.9, 3081.0], [36.0, 3087.0], [36.1, 3093.0], [36.2, 3117.0], [36.3, 3136.0], [36.4, 3152.0], [36.5, 3175.0], [36.6, 3195.0], [36.7, 3216.0], [36.8, 3247.0], [36.9, 3297.0], [37.0, 3322.0], [37.1, 3334.0], [37.2, 3345.0], [37.3, 3359.0], [37.4, 3375.0], [37.5, 3386.0], [37.6, 3394.0], [37.7, 3403.0], [37.8, 3420.0], [37.9, 3438.0], [38.0, 3458.0], [38.1, 3498.0], [38.2, 3523.0], [38.3, 3549.0], [38.4, 3613.0], [38.5, 3688.0], [38.6, 3710.0], [38.7, 3723.0], [38.8, 3735.0], [38.9, 3739.0], [39.0, 3746.0], [39.1, 3757.0], [39.2, 3761.0], [39.3, 3765.0], [39.4, 3772.0], [39.5, 3777.0], [39.6, 3780.0], [39.7, 3785.0], [39.8, 3786.0], [39.9, 3789.0], [40.0, 3793.0], [40.1, 3797.0], [40.2, 3802.0], [40.3, 3809.0], [40.4, 3824.0], [40.5, 3848.0], [40.6, 3858.0], [40.7, 3871.0], [40.8, 3884.0], [40.9, 3894.0], [41.0, 3906.0], [41.1, 3912.0], [41.2, 3920.0], [41.3, 3928.0], [41.4, 3939.0], [41.5, 3947.0], [41.6, 3955.0], [41.7, 3977.0], [41.8, 3989.0], [41.9, 3999.0], [42.0, 4026.0], [42.1, 4059.0], [42.2, 4110.0], [42.3, 4121.0], [42.4, 4128.0], [42.5, 4133.0], [42.6, 4140.0], [42.7, 4147.0], [42.8, 4151.0], [42.9, 4155.0], [43.0, 4158.0], [43.1, 4165.0], [43.2, 4169.0], [43.3, 4174.0], [43.4, 4179.0], [43.5, 4185.0], [43.6, 4193.0], [43.7, 4209.0], [43.8, 4260.0], [43.9, 4315.0], [44.0, 4379.0], [44.1, 4434.0], [44.2, 4451.0], [44.3, 4456.0], [44.4, 4465.0], [44.5, 4477.0], [44.6, 4498.0], [44.7, 4606.0], [44.8, 4653.0], [44.9, 4671.0], [45.0, 4678.0], [45.1, 4682.0], [45.2, 4684.0], [45.3, 4686.0], [45.4, 4687.0], [45.5, 4690.0], [45.6, 4692.0], [45.7, 4694.0], [45.8, 4697.0], [45.9, 4699.0], [46.0, 4702.0], [46.1, 4705.0], [46.2, 4708.0], [46.3, 4711.0], [46.4, 4713.0], [46.5, 4715.0], [46.6, 4721.0], [46.7, 4730.0], [46.8, 4737.0], [46.9, 4754.0], [47.0, 4802.0], [47.1, 4841.0], [47.2, 4858.0], [47.3, 4888.0], [47.4, 4928.0], [47.5, 5015.0], [47.6, 5055.0], [47.7, 5093.0], [47.8, 5142.0], [47.9, 5173.0], [48.0, 5185.0], [48.1, 5198.0], [48.2, 5209.0], [48.3, 5219.0], [48.4, 5232.0], [48.5, 5247.0], [48.6, 5257.0], [48.7, 5267.0], [48.8, 5273.0], [48.9, 5282.0], [49.0, 5291.0], [49.1, 5307.0], [49.2, 5321.0], [49.3, 5347.0], [49.4, 5365.0], [49.5, 5369.0], [49.6, 5375.0], [49.7, 5379.0], [49.8, 5385.0], [49.9, 5390.0], [50.0, 5392.0], [50.1, 5397.0], [50.2, 5401.0], [50.3, 5406.0], [50.4, 5410.0], [50.5, 5413.0], [50.6, 5416.0], [50.7, 5424.0], [50.8, 5427.0], [50.9, 5431.0], [51.0, 5436.0], [51.1, 5448.0], [51.2, 5464.0], [51.3, 5490.0], [51.4, 5517.0], [51.5, 5530.0], [51.6, 5540.0], [51.7, 5545.0], [51.8, 5554.0], [51.9, 5566.0], [52.0, 5577.0], [52.1, 5597.0], [52.2, 5643.0], [52.3, 5710.0], [52.4, 5793.0], [52.5, 5819.0], [52.6, 5856.0], [52.7, 5859.0], [52.8, 5873.0], [52.9, 5885.0], [53.0, 5896.0], [53.1, 5918.0], [53.2, 5942.0], [53.3, 5954.0], [53.4, 5961.0], [53.5, 5967.0], [53.6, 5978.0], [53.7, 5994.0], [53.8, 6019.0], [53.9, 6039.0], [54.0, 6055.0], [54.1, 6089.0], [54.2, 6102.0], [54.3, 6119.0], [54.4, 6130.0], [54.5, 6163.0], [54.6, 6218.0], [54.7, 6259.0], [54.8, 6297.0], [54.9, 6327.0], [55.0, 6350.0], [55.1, 6386.0], [55.2, 6411.0], [55.3, 6426.0], [55.4, 6445.0], [55.5, 6454.0], [55.6, 6469.0], [55.7, 6482.0], [55.8, 6498.0], [55.9, 6519.0], [56.0, 6531.0], [56.1, 6554.0], [56.2, 6571.0], [56.3, 6623.0], [56.4, 6665.0], [56.5, 6684.0], [56.6, 6704.0], [56.7, 6738.0], [56.8, 6793.0], [56.9, 6824.0], [57.0, 6850.0], [57.1, 6857.0], [57.2, 6865.0], [57.3, 6885.0], [57.4, 6905.0], [57.5, 6944.0], [57.6, 7026.0], [57.7, 7055.0], [57.8, 7075.0], [57.9, 7092.0], [58.0, 7119.0], [58.1, 7136.0], [58.2, 7158.0], [58.3, 7167.0], [58.4, 7194.0], [58.5, 7209.0], [58.6, 7227.0], [58.7, 7261.0], [58.8, 7283.0], [58.9, 7317.0], [59.0, 7346.0], [59.1, 7376.0], [59.2, 7440.0], [59.3, 7533.0], [59.4, 7582.0], [59.5, 7606.0], [59.6, 7631.0], [59.7, 7656.0], [59.8, 7668.0], [59.9, 7690.0], [60.0, 7704.0], [60.1, 7713.0], [60.2, 7719.0], [60.3, 7731.0], [60.4, 7744.0], [60.5, 7754.0], [60.6, 7772.0], [60.7, 7813.0], [60.8, 7834.0], [60.9, 7843.0], [61.0, 7858.0], [61.1, 7869.0], [61.2, 7881.0], [61.3, 7891.0], [61.4, 7903.0], [61.5, 7920.0], [61.6, 7940.0], [61.7, 7979.0], [61.8, 8018.0], [61.9, 8063.0], [62.0, 8096.0], [62.1, 8122.0], [62.2, 8142.0], [62.3, 8151.0], [62.4, 8164.0], [62.5, 8176.0], [62.6, 8183.0], [62.7, 8192.0], [62.8, 8203.0], [62.9, 8226.0], [63.0, 8251.0], [63.1, 8269.0], [63.2, 8294.0], [63.3, 8304.0], [63.4, 8325.0], [63.5, 8359.0], [63.6, 8415.0], [63.7, 8469.0], [63.8, 8535.0], [63.9, 8580.0], [64.0, 8624.0], [64.1, 8670.0], [64.2, 8696.0], [64.3, 8736.0], [64.4, 8784.0], [64.5, 8829.0], [64.6, 8887.0], [64.7, 9006.0], [64.8, 9088.0], [64.9, 9253.0], [65.0, 9342.0], [65.1, 9426.0], [65.2, 9515.0], [65.3, 9552.0], [65.4, 9577.0], [65.5, 9623.0], [65.6, 9658.0], [65.7, 9679.0], [65.8, 9742.0], [65.9, 9799.0], [66.0, 9889.0], [66.1, 9984.0], [66.2, 10081.0], [66.3, 10143.0], [66.4, 10257.0], [66.5, 10354.0], [66.6, 10422.0], [66.7, 10538.0], [66.8, 10670.0], [66.9, 10836.0], [67.0, 11055.0], [67.1, 11246.0], [67.2, 11353.0], [67.3, 11496.0], [67.4, 11558.0], [67.5, 11647.0], [67.6, 11791.0], [67.7, 11895.0], [67.8, 12138.0], [67.9, 12341.0], [68.0, 12447.0], [68.1, 12518.0], [68.2, 12615.0], [68.3, 12705.0], [68.4, 12825.0], [68.5, 12995.0], [68.6, 13184.0], [68.7, 13306.0], [68.8, 13372.0], [68.9, 13440.0], [69.0, 13516.0], [69.1, 13609.0], [69.2, 13756.0], [69.3, 13919.0], [69.4, 14075.0], [69.5, 14223.0], [69.6, 14334.0], [69.7, 14442.0], [69.8, 14526.0], [69.9, 14642.0], [70.0, 14715.0], [70.1, 14803.0], [70.2, 14958.0], [70.3, 15094.0], [70.4, 15199.0], [70.5, 15310.0], [70.6, 15485.0], [70.7, 15660.0], [70.8, 15790.0], [70.9, 15885.0], [71.0, 16009.0], [71.1, 16128.0], [71.2, 16346.0], [71.3, 16415.0], [71.4, 16468.0], [71.5, 16575.0], [71.6, 16647.0], [71.7, 16705.0], [71.8, 16750.0], [71.9, 16789.0], [72.0, 16888.0], [72.1, 16970.0], [72.2, 17040.0], [72.3, 17131.0], [72.4, 17185.0], [72.5, 17239.0], [72.6, 17341.0], [72.7, 17415.0], [72.8, 17460.0], [72.9, 17513.0], [73.0, 17582.0], [73.1, 17638.0], [73.2, 17681.0], [73.3, 17748.0], [73.4, 17820.0], [73.5, 17859.0], [73.6, 17932.0], [73.7, 17999.0], [73.8, 18083.0], [73.9, 18124.0], [74.0, 18200.0], [74.1, 18259.0], [74.2, 18292.0], [74.3, 18322.0], [74.4, 18356.0], [74.5, 18387.0], [74.6, 18429.0], [74.7, 18473.0], [74.8, 18549.0], [74.9, 18646.0], [75.0, 18877.0], [75.1, 19063.0], [75.2, 19243.0], [75.3, 19317.0], [75.4, 19661.0], [75.5, 19803.0], [75.6, 19931.0], [75.7, 20142.0], [75.8, 20558.0], [75.9, 20884.0], [76.0, 21048.0], [76.1, 21120.0], [76.2, 21470.0], [76.3, 21842.0], [76.4, 22222.0], [76.5, 22641.0], [76.6, 23248.0], [76.7, 23727.0], [76.8, 24126.0], [76.9, 24333.0], [77.0, 24674.0], [77.1, 25099.0], [77.2, 25249.0], [77.3, 25332.0], [77.4, 25409.0], [77.5, 25502.0], [77.6, 25604.0], [77.7, 25926.0], [77.8, 26224.0], [77.9, 26880.0], [78.0, 27302.0], [78.1, 28124.0], [78.2, 28671.0], [78.3, 29202.0], [78.4, 29744.0], [78.5, 30073.0], [78.6, 30545.0], [78.7, 30921.0], [78.8, 32023.0], [78.9, 32678.0], [79.0, 32999.0], [79.1, 33166.0], [79.2, 33270.0], [79.3, 33346.0], [79.4, 33408.0], [79.5, 33464.0], [79.6, 33532.0], [79.7, 33595.0], [79.8, 33669.0], [79.9, 33736.0], [80.0, 33787.0], [80.1, 33818.0], [80.2, 33865.0], [80.3, 33935.0], [80.4, 33993.0], [80.5, 34035.0], [80.6, 34176.0], [80.7, 34296.0], [80.8, 34365.0], [80.9, 34406.0], [81.0, 34462.0], [81.1, 34530.0], [81.2, 34781.0], [81.3, 34889.0], [81.4, 34952.0], [81.5, 34998.0], [81.6, 35062.0], [81.7, 35087.0], [81.8, 35177.0], [81.9, 35235.0], [82.0, 35292.0], [82.1, 35496.0], [82.2, 36031.0], [82.3, 36818.0], [82.4, 37497.0], [82.5, 38566.0], [82.6, 39255.0], [82.7, 39852.0], [82.8, 40416.0], [82.9, 40768.0], [83.0, 41031.0], [83.1, 41431.0], [83.2, 41726.0], [83.3, 42076.0], [83.4, 42226.0], [83.5, 42425.0], [83.6, 42606.0], [83.7, 42745.0], [83.8, 42923.0], [83.9, 42995.0], [84.0, 43079.0], [84.1, 43128.0], [84.2, 43200.0], [84.3, 43257.0], [84.4, 43301.0], [84.5, 43354.0], [84.6, 43549.0], [84.7, 43597.0], [84.8, 43614.0], [84.9, 43635.0], [85.0, 43653.0], [85.1, 43676.0], [85.2, 43693.0], [85.3, 43714.0], [85.4, 43768.0], [85.5, 43817.0], [85.6, 43894.0], [85.7, 44060.0], [85.8, 44339.0], [85.9, 44509.0], [86.0, 44880.0], [86.1, 45203.0], [86.2, 45546.0], [86.3, 45798.0], [86.4, 45991.0], [86.5, 46348.0], [86.6, 46719.0], [86.7, 47157.0], [86.8, 47669.0], [86.9, 48245.0], [87.0, 48982.0], [87.1, 49429.0], [87.2, 49746.0], [87.3, 49918.0], [87.4, 50011.0], [87.5, 50281.0], [87.6, 50512.0], [87.7, 50757.0], [87.8, 50956.0], [87.9, 51173.0], [88.0, 51313.0], [88.1, 51400.0], [88.2, 51487.0], [88.3, 51620.0], [88.4, 51709.0], [88.5, 51791.0], [88.6, 51880.0], [88.7, 51944.0], [88.8, 52018.0], [88.9, 52067.0], [89.0, 52128.0], [89.1, 52199.0], [89.2, 52259.0], [89.3, 52327.0], [89.4, 52388.0], [89.5, 52454.0], [89.6, 52560.0], [89.7, 52734.0], [89.8, 53029.0], [89.9, 53417.0], [90.0, 53632.0], [90.1, 53841.0], [90.2, 54044.0], [90.3, 54314.0], [90.4, 54777.0], [90.5, 55355.0], [90.6, 56197.0], [90.7, 57029.0], [90.8, 57525.0], [90.9, 58131.0], [91.0, 59004.0], [91.1, 59436.0], [91.2, 59612.0], [91.3, 59800.0], [91.4, 60118.0], [91.5, 60681.0], [91.6, 61354.0], [91.7, 62009.0], [91.8, 63029.0], [91.9, 63850.0], [92.0, 65255.0], [92.1, 65788.0], [92.2, 66563.0], [92.3, 67308.0], [92.4, 67671.0], [92.5, 68135.0], [92.6, 68954.0], [92.7, 69828.0], [92.8, 71337.0], [92.9, 71966.0], [93.0, 74580.0], [93.1, 75837.0], [93.2, 76437.0], [93.3, 76521.0], [93.4, 76564.0], [93.5, 76595.0], [93.6, 76618.0], [93.7, 76644.0], [93.8, 76668.0], [93.9, 76695.0], [94.0, 76716.0], [94.1, 76739.0], [94.2, 76760.0], [94.3, 76804.0], [94.4, 76841.0], [94.5, 76946.0], [94.6, 77545.0], [94.7, 79024.0], [94.8, 79997.0], [94.9, 80964.0], [95.0, 82264.0], [95.1, 83450.0], [95.2, 84733.0], [95.3, 86619.0], [95.4, 87713.0], [95.5, 90462.0], [95.6, 90831.0], [95.7, 93784.0], [95.8, 93846.0], [95.9, 93880.0], [96.0, 93904.0], [96.1, 93918.0], [96.2, 93931.0], [96.3, 93951.0], [96.4, 93993.0], [96.5, 94024.0], [96.6, 94063.0], [96.7, 94122.0], [96.8, 94178.0], [96.9, 94302.0], [97.0, 94508.0], [97.1, 94992.0], [97.2, 101785.0], [97.3, 110672.0], [97.4, 110846.0], [97.5, 110900.0], [97.6, 110930.0], [97.7, 110971.0], [97.8, 111009.0], [97.9, 111047.0], [98.0, 111117.0], [98.1, 111191.0], [98.2, 111276.0], [98.3, 111379.0], [98.4, 111465.0], [98.5, 111565.0], [98.6, 111779.0], [98.7, 118440.0], [98.8, 118896.0], [98.9, 118941.0], [99.0, 118983.0], [99.1, 119002.0], [99.2, 119045.0], [99.3, 119064.0], [99.4, 119084.0], [99.5, 119102.0], [99.6, 119120.0], [99.7, 119148.0], [99.8, 119185.0], [99.9, 129303.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2235.0, "series": [{"data": [[0.0, 2235.0], [141600.0, 1.0], [66700.0, 1.0], [69900.0, 1.0], [73100.0, 1.0], [76300.0, 4.0], [79500.0, 1.0], [82700.0, 1.0], [95500.0, 1.0], [111500.0, 10.0], [100.0, 152.0], [32900.0, 4.0], [34500.0, 14.0], [153900.0, 1.0], [39300.0, 2.0], [40900.0, 2.0], [42500.0, 7.0], [44100.0, 4.0], [45700.0, 4.0], [47300.0, 4.0], [48900.0, 5.0], [50500.0, 8.0], [200.0, 77.0], [52100.0, 22.0], [53700.0, 7.0], [55300.0, 2.0], [56900.0, 6.0], [58500.0, 1.0], [60100.0, 2.0], [63300.0, 3.0], [64900.0, 1.0], [65800.0, 3.0], [69000.0, 1.0], [300.0, 78.0], [78600.0, 2.0], [85000.0, 2.0], [91400.0, 1.0], [94600.0, 2.0], [400.0, 119.0], [110600.0, 2.0], [123400.0, 1.0], [500.0, 145.0], [600.0, 116.0], [700.0, 124.0], [800.0, 143.0], [900.0, 129.0], [1000.0, 47.0], [1100.0, 28.0], [1200.0, 77.0], [1300.0, 85.0], [1400.0, 95.0], [1500.0, 72.0], [1600.0, 47.0], [1700.0, 71.0], [1800.0, 30.0], [1900.0, 98.0], [2000.0, 24.0], [2100.0, 25.0], [2200.0, 84.0], [2300.0, 76.0], [2400.0, 137.0], [2500.0, 161.0], [2600.0, 409.0], [2800.0, 31.0], [2700.0, 19.0], [2900.0, 46.0], [3000.0, 79.0], [3100.0, 70.0], [3200.0, 38.0], [3300.0, 106.0], [3400.0, 62.0], [3500.0, 39.0], [3700.0, 222.0], [3600.0, 23.0], [3800.0, 114.0], [3900.0, 138.0], [4000.0, 33.0], [4200.0, 28.0], [68100.0, 4.0], [4400.0, 80.0], [4600.0, 169.0], [71300.0, 1.0], [4800.0, 46.0], [74500.0, 1.0], [77700.0, 1.0], [5000.0, 36.0], [80900.0, 2.0], [5200.0, 132.0], [84100.0, 1.0], [5400.0, 168.0], [5600.0, 20.0], [87300.0, 5.0], [5800.0, 82.0], [90500.0, 4.0], [93700.0, 12.0], [6000.0, 61.0], [6200.0, 38.0], [6400.0, 93.0], [6600.0, 50.0], [6800.0, 78.0], [7000.0, 53.0], [7200.0, 59.0], [7400.0, 15.0], [7600.0, 68.0], [7800.0, 99.0], [8000.0, 37.0], [8400.0, 25.0], [8800.0, 27.0], [9200.0, 9.0], [9600.0, 41.0], [10000.0, 15.0], [10400.0, 16.0], [10800.0, 9.0], [11200.0, 10.0], [11600.0, 14.0], [12000.0, 2.0], [12400.0, 21.0], [13200.0, 13.0], [12800.0, 12.0], [13600.0, 10.0], [14000.0, 12.0], [14400.0, 17.0], [14800.0, 11.0], [15200.0, 12.0], [15600.0, 5.0], [16000.0, 12.0], [16800.0, 16.0], [17600.0, 30.0], [18400.0, 31.0], [19200.0, 8.0], [20000.0, 7.0], [20800.0, 5.0], [22400.0, 2.0], [21600.0, 5.0], [23200.0, 1.0], [24000.0, 4.0], [24800.0, 1.0], [25600.0, 8.0], [26400.0, 2.0], [27200.0, 5.0], [28000.0, 2.0], [28800.0, 4.0], [29600.0, 5.0], [30400.0, 1.0], [31200.0, 2.0], [32000.0, 2.0], [33600.0, 18.0], [35200.0, 23.0], [36800.0, 3.0], [38400.0, 1.0], [40000.0, 3.0], [41600.0, 5.0], [43200.0, 28.0], [44800.0, 5.0], [46400.0, 6.0], [48000.0, 4.0], [49600.0, 5.0], [51200.0, 10.0], [52800.0, 3.0], [54400.0, 2.0], [56000.0, 3.0], [57600.0, 1.0], [59200.0, 3.0], [60800.0, 3.0], [64000.0, 1.0], [67200.0, 3.0], [70400.0, 1.0], [73600.0, 1.0], [76800.0, 25.0], [80000.0, 1.0], [83200.0, 2.0], [92800.0, 1.0], [102400.0, 1.0], [112000.0, 1.0], [118400.0, 2.0], [76700.0, 54.0], [79900.0, 4.0], [86300.0, 1.0], [92700.0, 1.0], [111900.0, 6.0], [33100.0, 11.0], [34700.0, 8.0], [36300.0, 2.0], [39500.0, 4.0], [41100.0, 4.0], [42700.0, 8.0], [44300.0, 9.0], [45900.0, 8.0], [47500.0, 3.0], [49100.0, 3.0], [50700.0, 8.0], [52300.0, 20.0], [53900.0, 7.0], [55500.0, 2.0], [57100.0, 3.0], [58700.0, 3.0], [60300.0, 1.0], [61900.0, 4.0], [65100.0, 2.0], [69400.0, 3.0], [75800.0, 1.0], [79000.0, 2.0], [82200.0, 2.0], [88600.0, 2.0], [104600.0, 1.0], [111000.0, 28.0], [68500.0, 2.0], [71700.0, 2.0], [74900.0, 1.0], [78100.0, 2.0], [81300.0, 1.0], [84500.0, 1.0], [87700.0, 1.0], [94100.0, 29.0], [119700.0, 1.0], [129300.0, 1.0], [139800.0, 1.0], [16900.0, 17.0], [17700.0, 16.0], [18500.0, 15.0], [19300.0, 12.0], [20100.0, 6.0], [20900.0, 5.0], [21700.0, 6.0], [22500.0, 5.0], [23300.0, 3.0], [24100.0, 6.0], [24900.0, 3.0], [25700.0, 3.0], [27300.0, 2.0], [28100.0, 3.0], [29700.0, 2.0], [30500.0, 4.0], [31300.0, 1.0], [32100.0, 2.0], [33800.0, 27.0], [35400.0, 3.0], [37000.0, 1.0], [38600.0, 2.0], [40200.0, 4.0], [41800.0, 4.0], [43400.0, 6.0], [45000.0, 3.0], [46600.0, 2.0], [48200.0, 1.0], [49800.0, 11.0], [51400.0, 17.0], [53000.0, 3.0], [54600.0, 2.0], [56200.0, 1.0], [59400.0, 10.0], [61000.0, 1.0], [62600.0, 1.0], [64200.0, 1.0], [67600.0, 3.0], [74000.0, 3.0], [77200.0, 2.0], [80400.0, 5.0], [99600.0, 1.0], [118800.0, 14.0], [67500.0, 4.0], [77100.0, 2.0], [80300.0, 2.0], [83500.0, 1.0], [118700.0, 1.0], [33300.0, 18.0], [34900.0, 25.0], [36500.0, 1.0], [38100.0, 1.0], [39700.0, 3.0], [41300.0, 2.0], [42900.0, 15.0], [44500.0, 6.0], [46100.0, 4.0], [47700.0, 3.0], [49300.0, 4.0], [50900.0, 7.0], [52500.0, 10.0], [54100.0, 6.0], [55700.0, 4.0], [58900.0, 3.0], [60500.0, 3.0], [62100.0, 1.0], [65300.0, 1.0], [63700.0, 2.0], [66600.0, 1.0], [69800.0, 2.0], [76200.0, 3.0], [82600.0, 1.0], [92200.0, 1.0], [98600.0, 1.0], [111400.0, 16.0], [65700.0, 5.0], [68900.0, 2.0], [72100.0, 1.0], [75300.0, 1.0], [78500.0, 2.0], [81700.0, 1.0], [94500.0, 10.0], [110500.0, 1.0], [116900.0, 2.0], [8500.0, 28.0], [8900.0, 12.0], [9300.0, 18.0], [9700.0, 24.0], [10100.0, 16.0], [10500.0, 13.0], [10900.0, 6.0], [11300.0, 13.0], [11700.0, 8.0], [12100.0, 5.0], [12500.0, 15.0], [13300.0, 19.0], [12900.0, 7.0], [13700.0, 9.0], [14100.0, 8.0], [14500.0, 12.0], [14900.0, 9.0], [15300.0, 9.0], [15700.0, 16.0], [16100.0, 8.0], [17000.0, 17.0], [17800.0, 27.0], [18600.0, 8.0], [19400.0, 3.0], [20200.0, 2.0], [21000.0, 21.0], [21800.0, 3.0], [23400.0, 1.0], [22600.0, 2.0], [24200.0, 9.0], [25000.0, 4.0], [25800.0, 1.0], [26600.0, 2.0], [27400.0, 2.0], [28200.0, 5.0], [29000.0, 3.0], [29800.0, 2.0], [30600.0, 3.0], [32200.0, 2.0], [34000.0, 21.0], [35600.0, 6.0], [37200.0, 2.0], [38800.0, 3.0], [40400.0, 4.0], [42000.0, 6.0], [43600.0, 72.0], [45200.0, 7.0], [46800.0, 4.0], [50000.0, 6.0], [51600.0, 16.0], [53200.0, 2.0], [54800.0, 3.0], [56400.0, 2.0], [58000.0, 5.0], [59600.0, 6.0], [61200.0, 3.0], [62800.0, 2.0], [68000.0, 4.0], [71200.0, 2.0], [84000.0, 2.0], [87200.0, 1.0], [90400.0, 3.0], [119200.0, 3.0], [67900.0, 5.0], [71100.0, 2.0], [74300.0, 1.0], [77500.0, 2.0], [87100.0, 2.0], [93500.0, 1.0], [119100.0, 47.0], [125500.0, 1.0], [137800.0, 1.0], [33500.0, 22.0], [35100.0, 16.0], [36700.0, 3.0], [38300.0, 1.0], [39900.0, 3.0], [41500.0, 3.0], [43100.0, 20.0], [44700.0, 3.0], [46300.0, 3.0], [47900.0, 2.0], [49500.0, 4.0], [51100.0, 5.0], [52700.0, 9.0], [54300.0, 5.0], [55900.0, 1.0], [57500.0, 4.0], [59100.0, 4.0], [60700.0, 1.0], [63900.0, 2.0], [65500.0, 2.0], [67000.0, 6.0], [70200.0, 2.0], [76600.0, 54.0], [79800.0, 3.0], [86200.0, 2.0], [89400.0, 1.0], [75700.0, 5.0], [82100.0, 3.0], [85300.0, 2.0], [88500.0, 3.0], [91700.0, 1.0], [94900.0, 1.0], [104500.0, 1.0], [110900.0, 36.0], [17100.0, 22.0], [17900.0, 20.0], [18700.0, 6.0], [20300.0, 6.0], [19500.0, 3.0], [21100.0, 5.0], [23500.0, 2.0], [22700.0, 2.0], [24300.0, 3.0], [25100.0, 4.0], [25900.0, 5.0], [26700.0, 2.0], [27500.0, 2.0], [28300.0, 2.0], [29100.0, 4.0], [29900.0, 8.0], [30700.0, 3.0], [32300.0, 1.0], [34200.0, 9.0], [35800.0, 1.0], [37400.0, 5.0], [39000.0, 1.0], [40600.0, 3.0], [42200.0, 8.0], [43800.0, 19.0], [45400.0, 3.0], [47000.0, 4.0], [48600.0, 2.0], [50200.0, 6.0], [51800.0, 14.0], [53400.0, 6.0], [55000.0, 2.0], [58200.0, 5.0], [59800.0, 3.0], [63000.0, 6.0], [71600.0, 1.0], [81200.0, 1.0], [90800.0, 2.0], [94000.0, 31.0], [100400.0, 1.0], [68300.0, 2.0], [71500.0, 2.0], [77900.0, 1.0], [81100.0, 2.0], [84300.0, 2.0], [87500.0, 1.0], [90700.0, 3.0], [93900.0, 61.0], [109900.0, 1.0], [33700.0, 31.0], [35300.0, 9.0], [36900.0, 1.0], [38500.0, 1.0], [40100.0, 1.0], [41700.0, 7.0], [43300.0, 18.0], [44900.0, 5.0], [46500.0, 4.0], [48100.0, 1.0], [49700.0, 4.0], [51300.0, 17.0], [52900.0, 5.0], [54500.0, 2.0], [56100.0, 3.0], [57700.0, 2.0], [60900.0, 2.0], [67400.0, 1.0], [73800.0, 1.0], [77000.0, 4.0], [80200.0, 2.0], [83400.0, 2.0], [86600.0, 6.0], [96200.0, 1.0], [112200.0, 1.0], [135600.0, 1.0], [4100.0, 206.0], [4300.0, 26.0], [66500.0, 2.0], [4500.0, 13.0], [72900.0, 1.0], [4700.0, 152.0], [76100.0, 2.0], [5100.0, 54.0], [4900.0, 20.0], [79300.0, 2.0], [5300.0, 154.0], [82500.0, 1.0], [5500.0, 108.0], [5700.0, 25.0], [5900.0, 100.0], [6100.0, 52.0], [6300.0, 46.0], [101700.0, 1.0], [6500.0, 59.0], [6700.0, 31.0], [6900.0, 25.0], [7100.0, 71.0], [111300.0, 13.0], [7300.0, 41.0], [7500.0, 32.0], [120900.0, 2.0], [7700.0, 97.0], [7900.0, 56.0], [8100.0, 101.0], [8200.0, 73.0], [8600.0, 37.0], [9000.0, 16.0], [9400.0, 14.0], [9800.0, 16.0], [10200.0, 13.0], [10600.0, 9.0], [11000.0, 6.0], [11400.0, 10.0], [11800.0, 15.0], [12200.0, 8.0], [12600.0, 13.0], [13000.0, 8.0], [13400.0, 21.0], [13800.0, 8.0], [14200.0, 12.0], [14600.0, 14.0], [15000.0, 11.0], [15400.0, 10.0], [15800.0, 13.0], [16200.0, 6.0], [16400.0, 22.0], [17200.0, 21.0], [18000.0, 20.0], [18800.0, 7.0], [19600.0, 6.0], [20400.0, 2.0], [21200.0, 2.0], [22000.0, 6.0], [22800.0, 2.0], [23600.0, 6.0], [24400.0, 4.0], [25200.0, 20.0], [26000.0, 4.0], [26800.0, 3.0], [28400.0, 2.0], [29200.0, 2.0], [30000.0, 6.0], [30800.0, 4.0], [31600.0, 3.0], [32400.0, 5.0], [32800.0, 5.0], [135100.0, 1.0], [34400.0, 21.0], [36000.0, 3.0], [39200.0, 1.0], [40800.0, 7.0], [42400.0, 8.0], [44000.0, 7.0], [45600.0, 5.0], [47200.0, 2.0], [48800.0, 2.0], [50400.0, 5.0], [52000.0, 27.0], [53600.0, 6.0], [55200.0, 2.0], [56800.0, 1.0], [58400.0, 1.0], [60000.0, 9.0], [61600.0, 2.0], [63200.0, 1.0], [65600.0, 3.0], [68800.0, 1.0], [75200.0, 2.0], [78400.0, 2.0], [81600.0, 1.0], [97600.0, 1.0], [94400.0, 7.0], [110400.0, 1.0], [116800.0, 1.0], [123200.0, 1.0], [137600.0, 1.0], [141700.0, 1.0], [68700.0, 2.0], [71900.0, 3.0], [78300.0, 1.0], [84700.0, 3.0], [97500.0, 1.0], [94300.0, 7.0], [100700.0, 1.0], [110300.0, 1.0], [33900.0, 24.0], [35500.0, 4.0], [37100.0, 3.0], [38700.0, 2.0], [149900.0, 1.0], [40300.0, 1.0], [41900.0, 1.0], [43500.0, 21.0], [45100.0, 4.0], [46700.0, 4.0], [48300.0, 2.0], [49900.0, 14.0], [51500.0, 8.0], [53100.0, 2.0], [54700.0, 4.0], [57900.0, 2.0], [59500.0, 4.0], [61100.0, 2.0], [64300.0, 1.0], [67800.0, 2.0], [74200.0, 2.0], [77400.0, 1.0], [83800.0, 2.0], [119000.0, 55.0], [66900.0, 2.0], [70100.0, 1.0], [76500.0, 36.0], [79700.0, 1.0], [82900.0, 2.0], [86100.0, 1.0], [111700.0, 8.0], [16500.0, 14.0], [17300.0, 14.0], [18100.0, 21.0], [18900.0, 5.0], [19700.0, 11.0], [20500.0, 3.0], [21300.0, 4.0], [22100.0, 5.0], [22900.0, 3.0], [23700.0, 7.0], [24500.0, 3.0], [25300.0, 16.0], [26100.0, 3.0], [26900.0, 3.0], [27700.0, 1.0], [28500.0, 2.0], [29300.0, 1.0], [30100.0, 5.0], [30900.0, 6.0], [31700.0, 1.0], [32500.0, 2.0], [33000.0, 7.0], [34600.0, 3.0], [36200.0, 2.0], [37800.0, 2.0], [39400.0, 2.0], [41000.0, 6.0], [42600.0, 13.0], [44200.0, 7.0], [45800.0, 7.0], [47400.0, 3.0], [49000.0, 1.0], [50600.0, 3.0], [52200.0, 23.0], [53800.0, 9.0], [57000.0, 3.0], [60200.0, 3.0], [61800.0, 2.0], [65000.0, 2.0], [66000.0, 3.0], [69200.0, 1.0], [75600.0, 2.0], [82000.0, 1.0], [85200.0, 1.0], [88400.0, 2.0], [91600.0, 1.0], [94800.0, 2.0], [104400.0, 1.0], [110800.0, 23.0], [133600.0, 1.0], [65900.0, 3.0], [69100.0, 3.0], [81900.0, 1.0], [85100.0, 1.0], [88300.0, 4.0], [110700.0, 3.0], [34100.0, 10.0], [37300.0, 1.0], [38900.0, 3.0], [40500.0, 6.0], [42100.0, 9.0], [43700.0, 34.0], [45300.0, 3.0], [46900.0, 2.0], [48500.0, 1.0], [50100.0, 4.0], [51700.0, 17.0], [53300.0, 5.0], [54900.0, 3.0], [58100.0, 2.0], [59700.0, 9.0], [61300.0, 4.0], [62900.0, 2.0], [64500.0, 1.0], [68200.0, 3.0], [71400.0, 5.0], [74600.0, 1.0], [77800.0, 1.0], [81000.0, 1.0], [90600.0, 4.0], [93800.0, 34.0], [100200.0, 1.0], [109800.0, 3.0], [137200.0, 1.0], [154100.0, 1.0], [67300.0, 7.0], [76900.0, 8.0], [80100.0, 1.0], [83300.0, 1.0], [86500.0, 2.0], [102500.0, 1.0], [112100.0, 1.0], [8300.0, 40.0], [8700.0, 30.0], [9100.0, 10.0], [9500.0, 37.0], [9900.0, 15.0], [10300.0, 16.0], [10700.0, 7.0], [11100.0, 7.0], [11500.0, 19.0], [11900.0, 9.0], [12300.0, 7.0], [12700.0, 12.0], [13100.0, 6.0], [13500.0, 16.0], [14300.0, 13.0], [13900.0, 6.0], [14700.0, 19.0], [15100.0, 12.0], [15500.0, 7.0], [15900.0, 10.0], [16300.0, 14.0], [16600.0, 23.0], [17400.0, 27.0], [18200.0, 34.0], [19000.0, 13.0], [19800.0, 11.0], [20600.0, 6.0], [21400.0, 5.0], [22200.0, 4.0], [23000.0, 2.0], [23800.0, 1.0], [24600.0, 7.0], [25400.0, 14.0], [26200.0, 8.0], [27000.0, 2.0], [28600.0, 3.0], [27800.0, 1.0], [29400.0, 1.0], [30200.0, 3.0], [31000.0, 1.0], [32600.0, 2.0], [33200.0, 17.0], [34800.0, 15.0], [36400.0, 2.0], [38000.0, 2.0], [39600.0, 2.0], [41200.0, 3.0], [42800.0, 8.0], [44400.0, 5.0], [46000.0, 4.0], [47600.0, 2.0], [49200.0, 4.0], [50800.0, 9.0], [52400.0, 20.0], [54000.0, 7.0], [57200.0, 6.0], [60400.0, 3.0], [62000.0, 5.0], [63600.0, 2.0], [65200.0, 3.0], [69600.0, 1.0], [72800.0, 1.0], [76000.0, 2.0], [79200.0, 2.0], [82400.0, 2.0], [98400.0, 2.0], [111200.0, 16.0], [66300.0, 3.0], [69500.0, 3.0], [75900.0, 1.0], [79100.0, 1.0], [82300.0, 2.0], [88700.0, 1.0], [111100.0, 23.0], [34300.0, 26.0], [35900.0, 2.0], [37500.0, 4.0], [39100.0, 2.0], [40700.0, 4.0], [42300.0, 6.0], [43900.0, 7.0], [45500.0, 7.0], [47100.0, 1.0], [48700.0, 2.0], [50300.0, 5.0], [51900.0, 20.0], [53500.0, 8.0], [55100.0, 2.0], [56700.0, 1.0], [59900.0, 3.0], [61500.0, 3.0], [68600.0, 1.0], [71800.0, 1.0], [75000.0, 1.0], [94200.0, 6.0], [100600.0, 1.0], [123000.0, 1.0], [159700.0, 1.0], [67700.0, 1.0], [70900.0, 1.0], [74100.0, 1.0], [80500.0, 1.0], [83700.0, 2.0], [99700.0, 1.0], [118900.0, 38.0], [16700.0, 30.0], [17500.0, 25.0], [18300.0, 41.0], [19100.0, 7.0], [19900.0, 7.0], [20700.0, 2.0], [21500.0, 1.0], [22300.0, 4.0], [23100.0, 3.0], [23900.0, 2.0], [24700.0, 4.0], [25500.0, 15.0], [26300.0, 2.0], [27100.0, 3.0], [27900.0, 3.0], [29500.0, 4.0], [28700.0, 1.0], [30300.0, 1.0], [32700.0, 4.0], [31900.0, 1.0], [33400.0, 23.0], [35000.0, 33.0], [38200.0, 2.0], [39800.0, 1.0], [41400.0, 7.0], [43000.0, 21.0], [44600.0, 3.0], [46200.0, 3.0], [47800.0, 3.0], [49400.0, 4.0], [51000.0, 6.0], [52600.0, 7.0], [54200.0, 2.0], [55800.0, 2.0], [57400.0, 2.0], [59000.0, 5.0], [60600.0, 3.0], [62200.0, 3.0], [65400.0, 2.0], [63800.0, 2.0], [70000.0, 2.0], [76400.0, 10.0], [105200.0, 1.0], [111600.0, 6.0], [121200.0, 1.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 159700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 619.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 10328.0, "series": [{"data": [[0.0, 2264.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 619.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 10328.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 789.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.625, "minX": 1.63143678E12, "maxY": 1380.7520128824485, "series": [{"data": [[1.63143714E12, 1026.7977591036445], [1.6314372E12, 123.88837209302314]], "isOverall": false, "label": "editGood", "isController": false}, {"data": [[1.63143702E12, 14.0], [1.63143696E12, 371.64534883720927], [1.6314369E12, 1330.502723735407]], "isOverall": false, "label": "getWanter", "isController": false}, {"data": [[1.63143684E12, 857.672379032257], [1.6314369E12, 8.625]], "isOverall": false, "label": "getGoodsById", "isController": false}, {"data": [[1.6314372E12, 927.8655000000003]], "isOverall": false, "label": "addGood", "isController": false}, {"data": [[1.63143714E12, 380.69393139841696], [1.63143708E12, 1380.7520128824485]], "isOverall": false, "label": "getMaxGoodsPage", "isController": false}, {"data": [[1.6314372E12, 61.074999999999974]], "isOverall": false, "label": "removeGoods", "isController": false}, {"data": [[1.63143684E12, 543.2223247232469], [1.63143678E12, 752.233624454149]], "isOverall": false, "label": "findGoodsById", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6314372E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 219.86363636363635, "minX": 1.0, "maxY": 92900.77777777778, "series": [{"data": [[2.0, 42856.00000000001], [3.0, 40359.8], [4.0, 48670.833333333336], [5.0, 45978.25], [6.0, 53136.2], [7.0, 33812.857142857145], [8.0, 67551.0], [9.0, 28379.857142857138], [10.0, 86104.00000000001], [11.0, 34988.0], [12.0, 51536.0], [13.0, 25000.25], [14.0, 48794.75], [15.0, 39317.0], [16.0, 82282.45454545454], [17.0, 59965.8], [18.0, 57123.666666666664], [19.0, 33677.3076923077], [20.0, 41374.6], [21.0, 32504.833333333332], [22.0, 66915.125], [23.0, 18893.937499999996], [24.0, 52614.33333333333], [25.0, 47038.555555555555], [26.0, 39591.0], [27.0, 20444.666666666668], [28.0, 74096.71428571429], [29.0, 24548.714285714286], [30.0, 31857.076923076922], [31.0, 27282.5], [33.0, 16794.75], [32.0, 44531.66666666667], [34.0, 33432.2], [35.0, 23021.166666666664], [37.0, 55387.5], [36.0, 92900.77777777778], [39.0, 16632.333333333332], [38.0, 60432.28571428571], [41.0, 13382.5], [40.0, 37016.600000000006], [43.0, 5725.434782608693], [42.0, 25221.624999999996], [45.0, 9189.25925925926], [44.0, 3248.5882352941167], [46.0, 1416.780487804878], [47.0, 3782.240384615386], [49.0, 2491.0945945945955], [48.0, 1443.8712871287125], [51.0, 4477.2], [50.0, 4290.877358490561], [53.0, 4817.891304347828], [52.0, 219.86363636363635], [55.0, 4828.152777777776], [54.0, 2623.694444444446], [57.0, 3206.090909090908], [56.0, 1547.6406249999998], [58.0, 9927.040816326531], [59.0, 4011.245283018866], [61.0, 7378.2941176470595], [60.0, 5453.275862068966], [63.0, 5997.2068965517265], [62.0, 2578.161290322581], [67.0, 22387.714285714286], [66.0, 8498.615384615383], [65.0, 6870.836363636364], [64.0, 4964.937500000001], [71.0, 3752.755555555557], [69.0, 11145.969696969698], [68.0, 11876.380952380958], [70.0, 14017.933333333334], [75.0, 13459.133333333331], [73.0, 13472.454545454546], [72.0, 19155.55], [74.0, 23520.0], [77.0, 7233.133333333335], [79.0, 6680.722222222222], [78.0, 10425.819999999998], [76.0, 3591.5277777777783], [81.0, 40519.666666666664], [80.0, 11876.692307692309], [83.0, 5035.464285714287], [82.0, 4320.727272727273], [85.0, 14280.875000000002], [84.0, 30107.529411764695], [87.0, 8711.872340425532], [86.0, 6323.375], [91.0, 13884.272727272726], [90.0, 23961.499999999996], [88.0, 9787.8], [89.0, 45495.99999999999], [94.0, 29652.84615384615], [95.0, 30369.375], [93.0, 9441.307692307693], [92.0, 15676.826086956524], [99.0, 21224.058823529405], [98.0, 13729.5], [96.0, 5546.2], [97.0, 11909.766666666666], [103.0, 25333.2], [102.0, 17592.6], [101.0, 52564.8], [100.0, 2598.2857142857147], [106.0, 21099.666666666664], [104.0, 26005.5], [107.0, 30377.499999999996], [105.0, 23232.999999999996], [110.0, 48596.6], [109.0, 48623.8], [108.0, 19685.842105263157], [111.0, 38778.0], [115.0, 42826.444444444445], [112.0, 36820.28571428571], [114.0, 29333.8], [113.0, 69870.0], [117.0, 52679.71428571428], [116.0, 39581.0], [119.0, 53895.5], [118.0, 47530.2], [121.0, 62687.88888888889], [123.0, 60531.833333333336], [122.0, 25314.5], [120.0, 11113.333333333334], [125.0, 10547.0], [127.0, 61994.25000000001], [126.0, 45598.25], [124.0, 44705.4], [135.0, 49142.333333333336], [134.0, 11346.571428571428], [129.0, 33681.5], [128.0, 27007.6], [133.0, 25301.8], [131.0, 14451.0], [130.0, 27903.300000000003], [132.0, 28175.181818181823], [141.0, 35498.99999999999], [140.0, 66732.54545454546], [137.0, 11061.25925925926], [143.0, 46536.2], [142.0, 74420.33333333333], [139.0, 36402.0], [138.0, 36885.666666666664], [136.0, 25590.8], [151.0, 57647.75], [150.0, 35669.0], [148.0, 53199.83333333333], [147.0, 39063.75], [146.0, 58338.5], [145.0, 51793.28571428571], [144.0, 14787.000000000002], [149.0, 56792.0], [159.0, 37046.5], [158.0, 51970.28571428571], [156.0, 36595.71428571428], [155.0, 10402.0], [153.0, 29122.500000000004], [152.0, 47001.4], [157.0, 36169.0], [154.0, 34392.33333333333], [167.0, 34706.0], [165.0, 46538.0], [163.0, 38989.666666666664], [162.0, 46229.6], [160.0, 60806.2], [166.0, 54327.5], [164.0, 70813.0], [161.0, 54797.0], [175.0, 29477.75], [173.0, 18501.333333333332], [172.0, 63541.0], [171.0, 21290.0], [170.0, 46122.2], [169.0, 33842.57142857143], [168.0, 45583.6], [174.0, 55989.333333333336], [181.0, 28816.44444444444], [177.0, 27278.0], [176.0, 66744.66666666667], [183.0, 29435.6], [182.0, 53911.25], [180.0, 53845.75], [179.0, 44765.0], [178.0, 28355.454545454544], [191.0, 34936.57142857143], [189.0, 61305.28571428572], [186.0, 41127.33333333333], [184.0, 40295.375], [190.0, 44264.8], [187.0, 44515.2], [185.0, 65332.33333333333], [188.0, 5427.0], [199.0, 41135.444444444445], [197.0, 34187.42857142857], [196.0, 43906.25], [193.0, 31158.571428571435], [192.0, 41924.0], [195.0, 15021.769230769232], [198.0, 29862.666666666664], [194.0, 33314.818181818184], [206.0, 33328.571428571435], [205.0, 37761.333333333336], [204.0, 28481.444444444445], [203.0, 53902.75], [202.0, 34103.857142857145], [201.0, 57407.66666666667], [207.0, 49577.75], [200.0, 41516.0], [215.0, 29073.749999999996], [212.0, 28376.352941176465], [211.0, 14638.0], [210.0, 44156.8], [209.0, 34557.57142857143], [214.0, 68838.33333333333], [213.0, 54001.0], [208.0, 56455.0], [223.0, 27394.499999999996], [222.0, 43560.4], [221.0, 34000.85714285714], [220.0, 39193.22222222222], [217.0, 43359.25], [219.0, 32677.0], [218.0, 43526.0], [216.0, 22175.166666666668], [231.0, 22665.8], [230.0, 43875.8], [229.0, 43761.4], [228.0, 38655.125], [227.0, 36151.5], [226.0, 30703.375000000004], [225.0, 33990.42857142857], [224.0, 46747.71428571429], [239.0, 62191.4], [237.0, 41767.8], [236.0, 50481.83333333333], [235.0, 34157.25], [233.0, 35214.83333333333], [238.0, 21882.499999999996], [234.0, 38774.0], [232.0, 48168.0], [247.0, 34050.84615384615], [244.0, 48013.85714285714], [242.0, 29805.0], [246.0, 12645.0], [245.0, 52016.0], [243.0, 16377.500000000002], [241.0, 43011.6], [240.0, 39301.166666666664], [254.0, 41805.0], [253.0, 33067.68750000001], [251.0, 27285.333333333332], [255.0, 35080.0], [252.0, 12663.0], [250.0, 51387.0], [249.0, 51484.5], [248.0, 51204.75], [269.0, 18225.230769230766], [271.0, 22101.444444444445], [270.0, 34818.5], [268.0, 16902.428571428572], [259.0, 44127.5], [267.0, 33482.33333333333], [266.0, 25938.071428571428], [264.0, 44677.899999999994], [265.0, 13420.000000000002], [261.0, 18272.999999999996], [260.0, 42410.125], [262.0, 31820.666666666664], [258.0, 36064.142857142855], [257.0, 24040.699999999997], [256.0, 91254.0], [263.0, 65896.33333333333], [273.0, 26418.6], [287.0, 18067.454545454548], [283.0, 27065.0], [279.0, 19271.0], [277.0, 8663.181818181818], [278.0, 70633.28571428571], [272.0, 18703.222222222223], [276.0, 10978.57142857143], [275.0, 30245.8], [284.0, 74112.0], [274.0, 23121.600000000002], [286.0, 52474.0], [285.0, 22215.2], [280.0, 52515.5], [281.0, 41735.0], [282.0, 64682.0], [291.0, 63436.4], [302.0, 71058.0], [301.0, 21883.2], [300.0, 44371.4], [299.0, 26122.444444444445], [298.0, 24063.0], [297.0, 20931.6], [296.0, 36882.333333333336], [303.0, 58217.0], [293.0, 16332.375000000002], [292.0, 41586.4], [294.0, 21530.15], [288.0, 25885.0], [295.0, 50409.75], [290.0, 24913.5], [289.0, 47206.28571428572], [305.0, 10549.5], [315.0, 48404.5], [314.0, 9776.333333333334], [313.0, 76459.85714285714], [312.0, 16353.555555555555], [310.0, 25184.5], [308.0, 15748.0], [309.0, 53473.0], [307.0, 22148.454545454548], [304.0, 41122.0], [311.0, 36470.0], [306.0, 37014.461538461546], [319.0, 15418.700000000004], [318.0, 73433.0], [317.0, 50708.333333333336], [316.0, 37497.25], [321.0, 20599.4], [330.0, 32654.6], [329.0, 50784.6], [327.0, 47676.166666666664], [326.0, 35563.454545454544], [324.0, 21718.75], [325.0, 20313.666666666664], [322.0, 26894.0], [323.0, 55666.750000000015], [333.0, 62336.2], [332.0, 22253.0], [334.0, 33455.166666666664], [335.0, 18681.0], [328.0, 16538.42857142857], [320.0, 32669.36363636364], [331.0, 52009.33333333333], [350.0, 50536.25], [351.0, 40134.0], [349.0, 31418.71428571429], [339.0, 18123.86666666667], [348.0, 42998.2], [338.0, 60439.4], [337.0, 14447.300000000001], [343.0, 21962.75], [336.0, 76460.5], [347.0, 30712.714285714283], [346.0, 41365.125], [344.0, 27086.8], [345.0, 26787.5], [342.0, 41797.81818181818], [341.0, 30285.333333333332], [340.0, 18899.142857142855], [355.0, 18458.800000000003], [367.0, 38034.6], [365.0, 30279.666666666668], [364.0, 32869.75], [366.0, 35886.0], [362.0, 28673.85714285714], [363.0, 21761.699999999997], [361.0, 55828.0], [360.0, 34023.4], [359.0, 51321.0], [358.0, 48587.66666666667], [356.0, 20802.4], [357.0, 40334.5], [353.0, 34326.166666666664], [354.0, 28354.714285714286], [352.0, 30954.28571428571], [371.0, 23068.454545454544], [381.0, 30361.85714285714], [383.0, 40561.14285714286], [376.0, 45267.0], [382.0, 14404.666666666666], [380.0, 24878.375], [379.0, 28577.857142857145], [378.0, 37282.8], [377.0, 33229.0], [374.0, 6768.2], [373.0, 25624.583333333336], [372.0, 48639.0], [368.0, 23417.75], [375.0, 48537.142857142855], [370.0, 17147.333333333336], [369.0, 25698.166666666668], [387.0, 25024.666666666664], [397.0, 49194.9], [398.0, 32047.333333333336], [399.0, 57760.0], [392.0, 11781.0], [396.0, 17443.2], [385.0, 32012.666666666668], [386.0, 24845.624999999996], [384.0, 36797.0], [395.0, 17472.0], [394.0, 28007.333333333336], [393.0, 49020.769230769234], [391.0, 28589.333333333332], [390.0, 19524.4], [389.0, 19509.4], [388.0, 31862.166666666668], [414.0, 14529.0], [415.0, 15902.666666666666], [412.0, 15845.875], [403.0, 43871.62500000001], [413.0, 27564.333333333336], [408.0, 17327.666666666668], [407.0, 20015.6], [406.0, 4321.5], [405.0, 38599.0], [404.0, 18618.4], [402.0, 7730.4], [400.0, 14650.666666666666], [401.0, 54043.8], [411.0, 22190.666666666664], [410.0, 17002.6], [409.0, 60202.09090909089], [428.0, 26728.0], [431.0, 64353.1], [430.0, 16967.0], [429.0, 4669.0], [427.0, 17604.0], [424.0, 15853.2], [425.0, 90492.66666666669], [422.0, 52372.0], [421.0, 10372.153846153848], [420.0, 38057.5], [417.0, 19156.6], [419.0, 21310.0], [418.0, 19826.6], [423.0, 65177.571428571435], [416.0, 20353.8], [426.0, 17114.999999999996], [445.0, 14784.5], [446.0, 12401.2], [447.0, 26478.666666666664], [440.0, 35997.6], [444.0, 20692.8], [443.0, 33532.0], [442.0, 29323.6], [441.0, 13776.777777777776], [439.0, 45926.72727272727], [436.0, 56385.9], [438.0, 10653.0], [437.0, 15358.0], [435.0, 15099.714285714286], [432.0, 21016.2], [434.0, 20715.6], [433.0, 20182.25], [462.0, 14288.25], [458.0, 12675.375000000002], [453.0, 39505.5], [452.0, 32511.999999999996], [455.0, 65859.5], [454.0, 26387.333333333336], [450.0, 20814.777777777774], [449.0, 71503.0], [451.0, 13026.666666666666], [448.0, 15351.571428571426], [463.0, 36268.0], [457.0, 14456.375], [456.0, 55980.0], [461.0, 61724.333333333336], [460.0, 20797.0], [459.0, 20391.0], [464.0, 19894.454545454544], [477.0, 11724.4], [474.0, 7749.0], [475.0, 23732.833333333336], [470.0, 32360.272727272728], [471.0, 37173.0], [469.0, 3323.4285714285716], [468.0, 64845.9], [465.0, 21199.25], [467.0, 17671.999999999996], [476.0, 57050.5], [466.0, 7220.0], [479.0, 32499.5], [478.0, 23123.666666666664], [472.0, 65096.25], [473.0, 20491.25], [494.0, 19785.71428571429], [495.0, 26337.625], [493.0, 34984.0], [492.0, 38895.28571428572], [491.0, 20958.0], [490.0, 27397.14285714286], [488.0, 26358.0], [489.0, 45487.666666666664], [487.0, 31111.899999999994], [480.0, 32701.0], [481.0, 12365.727272727272], [483.0, 14767.588235294119], [482.0, 31476.0], [486.0, 17793.0], [484.0, 14301.833333333334], [485.0, 52467.92307692308], [510.0, 22185.666666666664], [511.0, 19108.2], [509.0, 63254.62500000001], [508.0, 33718.0], [506.0, 34027.933333333334], [507.0, 39671.14285714286], [505.0, 18309.25], [504.0, 17757.0], [502.0, 12706.3], [503.0, 26338.666666666664], [497.0, 53388.4], [496.0, 15563.833333333334], [499.0, 14507.666666666666], [498.0, 20684.5], [501.0, 17503.8], [500.0, 21358.25], [540.0, 72671.6], [542.0, 14010.599999999999], [528.0, 40672.8], [530.0, 19591.0], [532.0, 27728.571428571428], [534.0, 21397.0], [538.0, 11917.5], [536.0, 13392.833333333334], [518.0, 15686.0], [512.0, 35623.5], [516.0, 16633.0], [514.0, 25026.333333333336], [526.0, 33272.5], [524.0, 21792.0], [520.0, 34904.5], [522.0, 55718.0], [568.0, 19745.444444444445], [574.0, 18704.0], [572.0, 13646.5], [570.0, 6673.714285714285], [558.0, 45742.857142857145], [546.0, 53790.916666666664], [544.0, 16966.142857142855], [550.0, 12989.714285714286], [548.0, 20461.0], [556.0, 12684.111111111111], [552.0, 69958.33333333333], [554.0, 4699.0], [564.0, 25751.0], [566.0, 69256.33333333333], [562.0, 31401.0], [560.0, 27849.375], [578.0, 17412.14285714286], [576.0, 5301.478260869565], [590.0, 14969.571428571428], [588.0, 5366.178571428572], [582.0, 12226.000000000004], [592.0, 32962.75], [604.0, 10005.542857142857], [606.0, 9334.90909090909], [602.0, 11659.785714285716], [600.0, 22937.85714285714], [596.0, 24423.333333333332], [594.0, 33247.125], [598.0, 14814.46153846154], [580.0, 2788.916666666667], [584.0, 18926.0], [586.0, 24412.166666666664], [632.0, 12925.000000000002], [638.0, 30757.75], [624.0, 8055.333333333333], [634.0, 12797.142857142857], [614.0, 6990.874999999999], [612.0, 9918.777777777777], [608.0, 22812.5], [610.0, 68735.0], [622.0, 8101.333333333334], [620.0, 33530.857142857145], [616.0, 42803.71428571429], [618.0, 37558.5], [636.0, 15508.636363636364], [628.0, 32450.000000000004], [630.0, 52813.75], [626.0, 43755.28571428571], [640.0, 15572.428571428574], [664.0, 25184.0], [650.0, 3149.230769230769], [652.0, 45319.71428571429], [654.0, 23958.916666666668], [648.0, 29349.666666666668], [646.0, 18173.0], [662.0, 3892.1499999999996], [668.0, 23046.0], [658.0, 32755.142857142862], [656.0, 46715.4], [670.0, 28553.0], [660.0, 8776.125], [666.0, 21339.636363636364], [644.0, 15194.5], [642.0, 13024.999999999998], [698.0, 43281.0], [684.0, 6959.333333333333], [686.0, 4455.0], [676.0, 39581.5], [674.0, 6123.666666666666], [672.0, 44208.33333333333], [682.0, 27968.533333333333], [680.0, 15696.5], [702.0, 7039.666666666666], [690.0, 8285.8], [688.0, 26624.157894736843], [700.0, 22389.9], [678.0, 14664.166666666666], [696.0, 28261.0], [694.0, 25183.0], [692.0, 49208.333333333336], [728.0, 22660.666666666664], [732.0, 8617.0], [730.0, 14965.6], [710.0, 4620.666666666667], [708.0, 20596.8], [706.0, 8601.5], [704.0, 17194.8], [726.0, 12008.0], [724.0, 27150.5], [722.0, 31395.0], [720.0, 33128.4], [734.0, 22328.0], [718.0, 48062.16666666667], [716.0, 20468.25], [714.0, 7480.25], [712.0, 16449.333333333336], [764.0, 14934.5], [762.0, 2177.6666666666665], [752.0, 26069.166666666668], [754.0, 4369.222222222223], [756.0, 22448.142857142855], [766.0, 39241.0], [750.0, 15817.333333333332], [738.0, 9767.0], [736.0, 64036.28571428571], [742.0, 27643.85714285714], [740.0, 22296.666666666664], [746.0, 7504.21052631579], [748.0, 33911.75], [744.0, 6793.970588235295], [758.0, 9870.96], [770.0, 3482.2], [796.0, 23532.0], [792.0, 7850.882352941177], [774.0, 11572.333333333334], [772.0, 48918.0], [768.0, 13091.8], [782.0, 17840.57142857143], [778.0, 31447.5], [776.0, 8323.0], [780.0, 30995.0], [794.0, 6409.538461538461], [784.0, 37801.666666666664], [798.0, 22452.0], [790.0, 27355.5], [788.0, 22617.333333333336], [786.0, 19446.777777777777], [824.0, 13444.888888888889], [816.0, 22515.5], [830.0, 20034.88888888889], [826.0, 22287.666666666668], [828.0, 26852.5], [806.0, 14217.285714285714], [804.0, 19011.0], [802.0, 13839.999999999998], [800.0, 19305.714285714286], [814.0, 6436.5], [812.0, 9072.461538461539], [810.0, 30163.428571428572], [808.0, 12465.750000000002], [822.0, 12723.928571428572], [820.0, 4646.833333333333], [818.0, 1693.5245901639346], [838.0, 21489.0], [856.0, 10036.624999999998], [844.0, 4287.421052631579], [846.0, 14036.588235294119], [832.0, 16641.375], [842.0, 2723.857142857143], [840.0, 20062.88888888889], [858.0, 20241.555555555555], [860.0, 18313.333333333332], [852.0, 336.0], [854.0, 13681.5], [848.0, 28933.5], [850.0, 28517.0], [862.0, 22887.428571428572], [834.0, 39786.0], [836.0, 24647.285714285717], [864.0, 6150.923076923077], [888.0, 8558.5], [878.0, 16173.75], [868.0, 16957.846153846156], [866.0, 12902.42857142857], [870.0, 10490.500000000002], [876.0, 19259.5], [874.0, 13575.81818181818], [872.0, 11815.166666666666], [894.0, 13849.4], [880.0, 21344.333333333336], [892.0, 22939.0], [882.0, 16362.6], [884.0, 7219.75], [886.0, 41699.0], [890.0, 23408.0], [898.0, 12049.454545454544], [920.0, 16118.250000000002], [926.0, 21564.4], [906.0, 19420.333333333332], [904.0, 20758.0], [910.0, 22269.6], [896.0, 25269.0], [900.0, 23417.0], [902.0, 8369.923076923078], [908.0, 13469.733333333332], [916.0, 16811.727272727276], [918.0, 49681.666666666664], [914.0, 15963.125], [912.0, 26368.555555555555], [924.0, 13903.749999999998], [922.0, 31331.2], [952.0, 25634.75], [958.0, 3346.25], [956.0, 14496.75], [954.0, 11611.2], [930.0, 19060.666666666664], [928.0, 17944.428571428572], [932.0, 14409.111111111111], [934.0, 15082.0], [942.0, 20335.666666666668], [940.0, 13013.500000000002], [938.0, 10638.666666666666], [936.0, 27822.25], [950.0, 11679.0], [948.0, 27487.666666666664], [944.0, 21741.125], [946.0, 16555.25], [986.0, 18147.666666666664], [988.0, 15090.500000000002], [990.0, 24641.75], [976.0, 17453.57142857143], [966.0, 32085.666666666664], [984.0, 35540.5], [964.0, 17383.0], [960.0, 22605.6], [962.0, 20134.0], [974.0, 20789.375], [972.0, 16457.625], [970.0, 17075.571428571428], [968.0, 13561.555555555555], [982.0, 17833.85714285714], [980.0, 19657.5], [978.0, 20699.88888888889], [998.0, 27230.428571428572], [1012.0, 24425.5], [1022.0, 24945.25], [1020.0, 30516.0], [1016.0, 43454.666666666664], [1018.0, 23784.5], [1008.0, 29713.333333333332], [996.0, 20493.0], [994.0, 20574.0], [992.0, 15387.0], [1006.0, 19773.75], [1004.0, 17345.0], [1002.0, 3160.5], [1000.0, 15436.249999999998], [1014.0, 28390.6], [1010.0, 17608.166666666668], [1036.0, 13092.5], [1052.0, 15429.499999999998], [1040.0, 1082.0], [1048.0, 20936.555555555555], [1044.0, 15912.285714285714], [1072.0, 12302.8], [1032.0, 5681.666666666667], [1024.0, 23995.625], [1028.0, 28143.2], [1056.0, 13805.25], [1060.0, 21262.88888888889], [1064.0, 25944.111111111113], [1068.0, 10523.166666666666], [1084.0, 12823.0], [1076.0, 26589.4], [1080.0, 20894.714285714283], [1100.0, 5426.8], [1140.0, 25131.0], [1136.0, 23244.0], [1088.0, 17883.333333333332], [1116.0, 12900.5], [1112.0, 16445.666666666668], [1108.0, 23077.0], [1104.0, 27495.2], [1096.0, 19361.4], [1092.0, 6299.9], [1120.0, 4778.333333333333], [1128.0, 25842.111111111113], [1124.0, 39390.5], [1132.0, 17423.5], [1148.0, 18149.375], [1144.0, 29396.666666666664], [1160.0, 17772.166666666668], [1188.0, 23288.5], [1212.0, 10250.1], [1200.0, 34539.2], [1164.0, 23049.0], [1208.0, 21706.5], [1204.0, 37989.0], [1152.0, 5116.25], [1156.0, 34199.0], [1180.0, 23547.75], [1176.0, 34225.8], [1172.0, 17788.5], [1168.0, 17677.0], [1196.0, 34253.22222222222], [1192.0, 14324.5], [1184.0, 23908.5], [1272.0, 11818.42857142857], [1252.0, 25480.0], [1264.0, 10656.4], [1228.0, 23126.6], [1268.0, 18412.75], [1244.0, 20672.75], [1240.0, 19139.833333333332], [1236.0, 24724.666666666664], [1232.0, 16437.2], [1216.0, 18090.4], [1224.0, 17895.2], [1220.0, 17478.0], [1256.0, 14864.666666666668], [1260.0, 19417.0], [1248.0, 16187.0], [1276.0, 7435.666666666666], [1332.0, 7068.625], [1340.0, 5442.400000000001], [1336.0, 12012.333333333332], [1312.0, 19434.333333333332], [1320.0, 13594.333333333334], [1316.0, 11847.833333333332], [1328.0, 11723.0], [1292.0, 14684.0], [1280.0, 22112.85714285714], [1288.0, 35199.0], [1284.0, 15609.142857142859], [1308.0, 14300.0], [1304.0, 14412.833333333332], [1300.0, 24341.5], [1296.0, 14538.333333333332], [1324.0, 13693.666666666668], [1400.0, 15362.0], [1376.0, 12739.0], [1380.0, 12963.333333333332], [1388.0, 17600.333333333332], [1384.0, 32540.5], [1404.0, 10497.75], [1396.0, 5942.562499999999], [1392.0, 11437.25], [1348.0, 30211.000000000004], [1344.0, 17513.5], [1352.0, 8859.0], [1356.0, 17133.5], [1372.0, 6754.0], [1360.0, 7549.000000000001], [1368.0, 5865.714285714285], [1364.0, 8851.75], [1460.0, 9143.0], [1464.0, 10813.333333333332], [1468.0, 4884.545454545455], [1440.0, 16574.0], [1456.0, 26662.2], [1436.0, 8593.399999999998], [1408.0, 11918.333333333332], [1416.0, 32381.0], [1412.0, 15542.0], [1420.0, 10914.42857142857], [1432.0, 17948.75], [1428.0, 15325.714285714284], [1424.0, 6205.833333333333], [1452.0, 16676.0], [1448.0, 9063.0], [1444.0, 7475.666666666666], [1524.0, 16843.5], [1532.0, 11482.5], [1508.0, 8744.0], [1504.0, 5455.625], [1512.0, 4411.238095238095], [1516.0, 1755.4], [1528.0, 13423.6], [1484.0, 10446.166666666668], [1480.0, 10713.333333333334], [1520.0, 16646.0], [1476.0, 10637.333333333332], [1472.0, 14098.2], [1500.0, 12524.25], [1496.0, 13900.4], [1492.0, 22343.166666666664], [1488.0, 15218.285714285714], [1592.0, 8759.333333333334], [1568.0, 15458.0], [1572.0, 10828.5], [1596.0, 10566.0], [1588.0, 9416.857142857143], [1584.0, 14698.0], [1536.0, 6437.333333333333], [1540.0, 16209.5], [1544.0, 16391.5], [1548.0, 11514.5], [1564.0, 15174.25], [1556.0, 13188.4], [1560.0, 28079.5], [1552.0, 13282.8], [1580.0, 18749.2], [1576.0, 12540.333333333332], [1656.0, 5529.461538461538], [1660.0, 7161.0], [1632.0, 11197.5], [1636.0, 10421.25], [1652.0, 12211.375], [1648.0, 13719.54545454545], [1612.0, 7063.75], [1608.0, 2380.0], [1628.0, 6745.714285714286], [1604.0, 7775.5], [1600.0, 26569.0], [1624.0, 11260.5], [1620.0, 9386.6], [1616.0, 6144.900000000001], [1644.0, 5693.25], [1640.0, 11020.5], [1712.0, 6395.0], [1704.0, 11088.0], [1724.0, 9665.0], [1700.0, 14066.6], [1696.0, 4615.2], [1720.0, 10135.0], [1716.0, 5115.333333333334], [1676.0, 11621.333333333334], [1672.0, 14951.5], [1668.0, 11818.384615384617], [1664.0, 9785.0], [1692.0, 4723.75], [1688.0, 10015.333333333332], [1684.0, 5294.25], [1680.0, 5571.500000000001], [1708.0, 7374.0], [1760.0, 5570.75], [1768.0, 11807.25], [1772.0, 9591.666666666668], [1764.0, 9710.333333333334], [1728.0, 10222.0], [1732.0, 10184.0], [1736.0, 12278.75], [1740.0, 15038.666666666666], [1780.0, 5534.090909090909], [1776.0, 9519.333333333334], [1788.0, 13032.0], [1784.0, 9282.0], [1756.0, 9596.666666666666], [1748.0, 6884.2], [1752.0, 10274.0], [1744.0, 8445.2], [1848.0, 12206.5], [1852.0, 5838.0], [1844.0, 13905.666666666666], [1840.0, 12355.0], [1836.0, 12534.5], [1832.0, 7028.0], [1828.0, 11115.75], [1824.0, 12405.0], [1820.0, 11909.5], [1792.0, 13282.5], [1804.0, 6449.2], [1800.0, 7140.333333333334], [1796.0, 12858.5], [1816.0, 13082.0], [1812.0, 6705.666666666667], [1808.0, 7390.5], [1912.0, 11188.5], [1916.0, 10542.5], [1908.0, 5357.0], [1904.0, 5129.0], [1896.0, 11416.5], [1900.0, 16963.0], [1892.0, 13382.333333333334], [1888.0, 9393.0], [1884.0, 11565.5], [1860.0, 11661.0], [1856.0, 12008.5], [1868.0, 11228.5], [1864.0, 5556.0], [1880.0, 5931.0], [1876.0, 4575.0], [1872.0, 11827.0], [1968.0, 9155.0], [1952.0, 9811.0], [1960.0, 9519.5], [1972.0, 9309.0], [1980.0, 15566.0], [1976.0, 16346.0], [1944.0, 13525.75], [1948.0, 16248.0], [1924.0, 11053.0], [1920.0, 10887.5], [1932.0, 10579.5], [1928.0, 12667.666666666666], [1940.0, 10005.5], [1936.0, 10572.0], [1964.0, 9674.5], [1956.0, 9883.0], [2000.0, 15487.0], [1996.0, 15897.0], [1992.0, 15602.0], [1988.0, 15280.0], [1984.0, 15719.0], [1029.0, 14792.0], [1049.0, 23874.5], [1081.0, 23596.0], [1041.0, 22679.000000000004], [1045.0, 9160.0], [1053.0, 6872.5714285714275], [1037.0, 19993.0], [1033.0, 34640.5], [1025.0, 16423.714285714283], [1073.0, 23475.5], [1065.0, 4070.5], [1061.0, 4634.5], [1057.0, 28262.6], [1069.0, 11134.666666666666], [1085.0, 9103.375], [1077.0, 18097.333333333336], [1101.0, 14406.5], [1137.0, 17506.166666666668], [1089.0, 10676.0], [1109.0, 6632.538461538462], [1117.0, 42690.0], [1105.0, 7022.444444444444], [1093.0, 17732.666666666668], [1097.0, 13608.75], [1141.0, 24273.0], [1149.0, 24531.5], [1121.0, 7079.0], [1125.0, 29456.454545454544], [1129.0, 35653.439999999995], [1133.0, 23702.75], [1145.0, 24040.25], [1209.0, 14829.900000000001], [1193.0, 23491.5], [1213.0, 15590.666666666668], [1189.0, 41514.0], [1185.0, 16100.333333333332], [1153.0, 26333.2], [1157.0, 20382.2], [1165.0, 32737.25], [1161.0, 8864.538461538463], [1177.0, 11274.4], [1181.0, 11236.2], [1173.0, 23304.75], [1169.0, 19940.571428571428], [1201.0, 15404.500000000002], [1205.0, 8700.750000000002], [1197.0, 23169.5], [1277.0, 14095.77777777778], [1249.0, 26472.14285714286], [1229.0, 7414.111111111111], [1225.0, 36367.5], [1265.0, 21988.0], [1273.0, 6637.285714285715], [1269.0, 18760.5], [1221.0, 16206.333333333332], [1217.0, 13016.5], [1245.0, 22186.6], [1237.0, 5371.466666666668], [1241.0, 1217.5], [1233.0, 14520.666666666668], [1261.0, 8774.333333333334], [1257.0, 19877.833333333332], [1253.0, 6390.599999999999], [1337.0, 11003.25], [1281.0, 13161.5], [1309.0, 22804.0], [1285.0, 3547.4444444444443], [1293.0, 7211.142857142858], [1289.0, 14320.75], [1333.0, 4069.3076923076933], [1329.0, 33517.0], [1305.0, 2951.428571428571], [1297.0, 19083.833333333332], [1301.0, 18674.0], [1321.0, 9952.4], [1325.0, 10554.75], [1341.0, 12583.0], [1317.0, 25982.875], [1313.0, 33880.0], [1401.0, 10071.5], [1405.0, 21054.4], [1385.0, 13499.333333333334], [1377.0, 22547.625], [1381.0, 20684.285714285714], [1397.0, 10242.624999999998], [1393.0, 20119.2], [1353.0, 23809.333333333332], [1357.0, 21260.2], [1349.0, 7878.166666666666], [1373.0, 21253.6], [1345.0, 18051.5], [1369.0, 5901.099999999999], [1365.0, 10773.25], [1361.0, 13369.818181818182], [1389.0, 9228.1], [1465.0, 26650.6], [1441.0, 16460.5], [1445.0, 15433.857142857143], [1449.0, 8963.75], [1469.0, 20239.2], [1461.0, 15394.857142857141], [1457.0, 8271.0], [1409.0, 9141.2], [1437.0, 12108.5], [1413.0, 15075.0], [1421.0, 10005.25], [1417.0, 5740.714285714285], [1433.0, 9902.25], [1429.0, 9790.125], [1425.0, 10689.545454545454], [1453.0, 29170.749999999996], [1525.0, 10375.142857142857], [1521.0, 10126.0], [1533.0, 13388.2], [1505.0, 13147.625], [1509.0, 7740.499999999999], [1529.0, 9752.666666666666], [1473.0, 21771.333333333332], [1501.0, 16239.500000000002], [1477.0, 19936.0], [1481.0, 17334.666666666668], [1485.0, 25715.0], [1497.0, 13214.2], [1493.0, 16365.75], [1489.0, 16517.0], [1513.0, 7260.9000000000015], [1517.0, 15428.8], [1585.0, 14766.5], [1593.0, 22518.5], [1569.0, 9034.0], [1597.0, 9303.285714285716], [1589.0, 8391.333333333334], [1541.0, 8929.8], [1537.0, 23536.0], [1545.0, 7017.4], [1549.0, 15584.5], [1565.0, 15172.5], [1561.0, 8115.0], [1557.0, 12657.8], [1553.0, 13450.6], [1581.0, 12508.0], [1577.0, 16466.4], [1573.0, 19503.666666666668], [1657.0, 11778.4], [1633.0, 10107.833333333334], [1637.0, 7765.333333333334], [1641.0, 11802.2], [1661.0, 9822.0], [1653.0, 4107.571428571428], [1649.0, 3564.2727272727275], [1601.0, 9241.2], [1609.0, 11839.5], [1605.0, 9173.0], [1613.0, 14968.25], [1629.0, 7090.833333333333], [1617.0, 13843.666666666666], [1621.0, 7279.571428571428], [1625.0, 9367.42857142857], [1645.0, 3316.2999999999997], [1717.0, 5556.666666666667], [1725.0, 11352.833333333334], [1697.0, 11605.875000000002], [1701.0, 11310.0], [1705.0, 4297.833333333333], [1709.0, 12444.0], [1721.0, 9973.0], [1713.0, 7047.5], [1677.0, 7864.4], [1673.0, 11805.666666666666], [1669.0, 9299.0], [1665.0, 4549.166666666667], [1693.0, 13032.571428571428], [1689.0, 9730.875000000002], [1685.0, 7580.0], [1681.0, 11786.666666666666], [1761.0, 9332.75], [1773.0, 9540.0], [1769.0, 4935.0], [1765.0, 5123.0], [1741.0, 7026.0], [1781.0, 13596.5], [1777.0, 17771.0], [1789.0, 13208.0], [1785.0, 14982.0], [1737.0, 9997.333333333334], [1729.0, 4248.416666666667], [1733.0, 13718.0], [1757.0, 5777.5], [1745.0, 6924.599999999999], [1753.0, 15471.666666666666], [1749.0, 6725.4], [1849.0, 6915.0], [1853.0, 6490.0], [1845.0, 11743.0], [1841.0, 12235.0], [1837.0, 12414.5], [1833.0, 17239.0], [1829.0, 8842.666666666666], [1825.0, 3408.5], [1821.0, 12639.5], [1797.0, 8231.0], [1793.0, 13137.0], [1805.0, 12715.5], [1801.0, 9200.5], [1817.0, 12447.0], [1813.0, 9243.333333333334], [1809.0, 9579.0], [1913.0, 10798.0], [1861.0, 3290.0], [1857.0, 6401.0], [1869.0, 4593.0], [1865.0, 13500.666666666666], [1885.0, 11570.5], [1881.0, 6077.0], [1877.0, 13407.333333333334], [1873.0, 11614.5], [1917.0, 10882.0], [1909.0, 3534.0], [1905.0, 3808.0], [1901.0, 9357.666666666666], [1897.0, 11308.5], [1893.0, 11064.5], [1889.0, 11457.0], [1969.0, 9454.0], [1953.0, 10061.0], [1961.0, 9646.5], [1973.0, 2003.0], [1981.0, 15862.0], [1977.0, 16407.0], [1949.0, 8032.0], [1921.0, 10891.5], [1933.0, 10808.5], [1929.0, 16370.0], [1925.0, 11020.0], [1945.0, 10334.0], [1941.0, 10261.0], [1937.0, 16736.0], [1965.0, 2763.0], [1957.0, 3423.0], [1997.0, 15765.0], [1993.0, 15908.0], [1989.0, 16009.0], [1985.0, 16119.0], [539.0, 16022.0], [537.0, 7255.0], [543.0, 14107.6], [531.0, 18604.75], [529.0, 60564.8], [541.0, 22576.666666666664], [519.0, 75305.90909090909], [517.0, 41758.5], [515.0, 30846.0], [513.0, 21069.25], [527.0, 22082.666666666664], [525.0, 7445.6], [523.0, 43572.7], [521.0, 23276.666666666668], [535.0, 13520.111111111111], [533.0, 66886.5], [569.0, 31237.6], [575.0, 11638.818181818182], [573.0, 35229.0], [571.0, 23348.666666666664], [557.0, 37648.66666666667], [559.0, 32101.333333333336], [545.0, 15629.0], [547.0, 13923.333333333332], [551.0, 13948.166666666668], [549.0, 29528.5], [553.0, 11453.5], [555.0, 34203.692307692305], [565.0, 11584.6], [567.0, 33012.2], [561.0, 18862.999999999996], [563.0, 30001.4], [583.0, 9343.153846153846], [577.0, 3836.9999999999995], [591.0, 42728.57142857143], [589.0, 6653.6], [581.0, 27037.11111111111], [607.0, 38317.666666666664], [605.0, 48134.666666666664], [601.0, 23705.0], [603.0, 2960.9999999999995], [593.0, 6488.333333333334], [597.0, 11975.428571428572], [599.0, 30183.125], [595.0, 37096.5], [579.0, 4794.388888888889], [585.0, 24453.57142857143], [587.0, 21096.0], [611.0, 9992.941176470587], [639.0, 16810.5], [635.0, 39792.700000000004], [615.0, 13911.076923076924], [613.0, 42539.8], [633.0, 28905.5], [609.0, 22721.833333333336], [623.0, 40291.00000000001], [621.0, 31768.2], [619.0, 12940.777777777776], [617.0, 8434.272727272728], [631.0, 9593.181818181818], [629.0, 21336.75], [637.0, 33284.5], [627.0, 12473.111111111111], [625.0, 26052.6], [647.0, 3832.5], [643.0, 26467.999999999996], [651.0, 9887.181818181818], [655.0, 13641.5], [653.0, 14881.285714285716], [649.0, 15951.0], [667.0, 10143.733333333332], [669.0, 9601.76923076923], [659.0, 27127.8], [657.0, 13016.857142857143], [671.0, 39629.5], [661.0, 13794.692307692309], [663.0, 4713.549999999999], [665.0, 7211.375], [645.0, 14832.545454545454], [641.0, 12690.8], [697.0, 25417.0], [701.0, 20218.333333333332], [685.0, 1599.0833333333335], [681.0, 34800.0], [683.0, 36380.833333333336], [703.0, 26335.266666666666], [699.0, 45444.5], [673.0, 23552.25], [687.0, 5849.333333333333], [675.0, 10257.333333333334], [679.0, 4492.0], [677.0, 4460.0], [695.0, 29974.6], [693.0, 5434.5], [691.0, 29381.285714285717], [689.0, 65757.66666666667], [729.0, 10978.444444444445], [711.0, 13603.416666666668], [733.0, 11960.833333333332], [731.0, 40137.928571428565], [709.0, 38199.333333333336], [707.0, 39730.00000000001], [705.0, 42932.2], [719.0, 19954.25], [727.0, 13033.857142857143], [725.0, 41550.22222222222], [723.0, 13469.0], [721.0, 30266.28571428571], [735.0, 31116.0], [717.0, 22419.0], [715.0, 44338.0], [713.0, 42764.09090909091], [763.0, 9774.055555555557], [767.0, 20206.0], [753.0, 3213.6874999999995], [755.0, 35262.7], [757.0, 7324.761904761905], [765.0, 19289.0], [761.0, 10541.545454545454], [743.0, 9860.25], [751.0, 26100.583333333332], [737.0, 51244.0], [741.0, 50512.87500000001], [739.0, 14286.6], [749.0, 14747.857142857143], [747.0, 27241.8], [745.0, 3668.5272727272727], [759.0, 18357.666666666668], [769.0, 32388.333333333332], [793.0, 6485.241379310344], [771.0, 20564.833333333336], [773.0, 43609.0], [775.0, 13483.9], [783.0, 15169.545454545456], [781.0, 18974.000000000004], [779.0, 15311.8], [777.0, 29854.6], [797.0, 23243.666666666664], [785.0, 22296.75], [799.0, 36497.0], [795.0, 14912.846153846156], [791.0, 13791.2], [789.0, 1170.3333333333333], [787.0, 10387.923076923078], [827.0, 16155.0], [819.0, 12313.5625], [831.0, 13968.0], [829.0, 10992.916666666668], [807.0, 19541.0], [825.0, 39335.0], [803.0, 15387.75], [805.0, 20890.5], [801.0, 16152.42857142857], [815.0, 24668.285714285714], [813.0, 41224.0], [809.0, 15829.25], [811.0, 12742.999999999998], [823.0, 14769.6], [821.0, 13257.181818181818], [817.0, 17064.857142857145], [833.0, 11403.666666666666], [843.0, 4156.092307692307], [845.0, 19399.0], [847.0, 29290.25], [841.0, 12297.199999999999], [839.0, 12973.2], [857.0, 31200.666666666668], [859.0, 4151.166666666667], [861.0, 5324.3], [853.0, 22671.46153846154], [855.0, 20916.666666666668], [863.0, 16130.6], [851.0, 20522.444444444445], [849.0, 10229.42857142857], [837.0, 13624.6], [835.0, 8010.1], [867.0, 16034.75], [877.0, 23932.777777777774], [865.0, 25748.75], [879.0, 28256.166666666668], [869.0, 19928.8], [871.0, 10509.0], [875.0, 2874.4444444444443], [873.0, 18587.928571428572], [881.0, 13820.249999999998], [895.0, 11092.571428571428], [893.0, 23228.6], [883.0, 21847.14285714286], [887.0, 19259.0], [885.0, 19325.0], [891.0, 18265.666666666664], [889.0, 21709.0], [911.0, 9678.714285714284], [907.0, 13749.833333333332], [905.0, 24998.714285714286], [897.0, 18980.899999999998], [909.0, 31190.0], [899.0, 10289.5], [901.0, 21795.125], [903.0, 22835.999999999996], [917.0, 8209.0], [919.0, 14710.4], [915.0, 13261.0], [913.0, 14723.333333333332], [927.0, 13656.0], [925.0, 40931.2], [923.0, 19390.666666666664], [921.0, 9006.374999999998], [935.0, 27556.0], [947.0, 8831.000000000004], [957.0, 27378.0], [955.0, 14275.874999999996], [953.0, 9049.083333333332], [943.0, 13871.5], [929.0, 24220.857142857145], [931.0, 16402.375], [933.0, 12865.090909090908], [937.0, 16683.142857142855], [939.0, 25882.666666666664], [941.0, 26093.5], [951.0, 19867.5], [949.0, 17018.571428571428], [945.0, 13947.6], [959.0, 20805.18181818182], [985.0, 13655.454545454546], [979.0, 19216.166666666668], [991.0, 13777.800000000001], [967.0, 21235.333333333332], [987.0, 23069.8], [989.0, 32822.0], [965.0, 25918.833333333332], [963.0, 7710.176470588235], [961.0, 30459.5], [971.0, 25719.75], [975.0, 15121.444444444445], [973.0, 27642.0], [969.0, 12886.000000000004], [983.0, 19246.0], [981.0, 26318.25], [977.0, 16904.0], [1019.0, 20868.125], [1021.0, 12774.222222222223], [1023.0, 4039.4], [1009.0, 18274.833333333336], [1017.0, 19236.4], [999.0, 32365.0], [997.0, 21082.666666666664], [995.0, 15969.833333333334], [993.0, 20346.0], [1007.0, 20420.4], [1003.0, 30065.25], [1005.0, 11893.2], [1001.0, 9466.142857142857], [1015.0, 18230.333333333336], [1013.0, 10927.0], [1011.0, 25058.0], [1034.0, 8538.75], [1054.0, 25096.0], [1042.0, 19975.6], [1050.0, 17315.666666666664], [1046.0, 20716.11111111111], [1038.0, 13759.333333333336], [1030.0, 14133.250000000002], [1026.0, 11313.000000000002], [1058.0, 10633.8], [1062.0, 5800.5], [1066.0, 12139.000000000002], [1070.0, 9496.0], [1086.0, 25698.0], [1078.0, 15209.333333333334], [1074.0, 9860.166666666668], [1082.0, 8648.374999999998], [1102.0, 4562.0], [1094.0, 14594.714285714286], [1098.0, 3814.1666666666665], [1106.0, 3870.0], [1114.0, 22872.5], [1110.0, 9853.6], [1118.0, 9189.250000000002], [1138.0, 23728.75], [1090.0, 9167.142857142857], [1150.0, 12330.23076923077], [1122.0, 27013.2], [1126.0, 30316.333333333332], [1130.0, 23749.75], [1134.0, 18959.0], [1146.0, 15049.714285714284], [1142.0, 29775.666666666664], [1210.0, 26441.666666666668], [1214.0, 14081.499999999998], [1186.0, 43034.0], [1182.0, 19827.8], [1154.0, 6692.0], [1166.0, 11737.0], [1162.0, 22292.0], [1158.0, 22882.5], [1206.0, 36532.0], [1202.0, 37607.5], [1178.0, 19867.6], [1174.0, 17592.333333333332], [1170.0, 22742.75], [1190.0, 23273.0], [1198.0, 28709.333333333336], [1194.0, 22103.5], [1266.0, 6778.35294117647], [1274.0, 16839.571428571428], [1270.0, 18911.5], [1278.0, 10302.5], [1250.0, 20172.0], [1230.0, 23381.2], [1226.0, 15926.500000000002], [1242.0, 18661.6], [1246.0, 2601.1111111111113], [1222.0, 27549.75], [1218.0, 36287.0], [1238.0, 19858.333333333336], [1234.0, 12254.0], [1258.0, 15450.666666666668], [1262.0, 28328.2], [1254.0, 28052.5], [1334.0, 6470.124999999999], [1330.0, 10106.2], [1342.0, 14415.18181818182], [1318.0, 10183.0], [1314.0, 8268.666666666668], [1322.0, 14182.333333333332], [1338.0, 14311.5], [1294.0, 9151.166666666668], [1290.0, 4918.25], [1286.0, 24749.666666666668], [1282.0, 25055.0], [1310.0, 10901.375], [1306.0, 24858.666666666668], [1302.0, 19760.833333333336], [1326.0, 9826.6], [1398.0, 12627.666666666668], [1406.0, 12303.666666666666], [1378.0, 18560.75], [1402.0, 15910.8], [1394.0, 18132.0], [1358.0, 11430.5], [1374.0, 5984.444444444445], [1346.0, 4647.777777777777], [1350.0, 21892.4], [1354.0, 10666.0], [1362.0, 7278.166666666667], [1366.0, 4017.8], [1370.0, 12210.333333333332], [1390.0, 9643.375], [1386.0, 22844.333333333336], [1382.0, 4083.0], [1462.0, 21236.666666666668], [1442.0, 22488.333333333336], [1466.0, 20890.333333333336], [1470.0, 3003.0], [1458.0, 11392.666666666668], [1418.0, 9253.714285714286], [1414.0, 16606.25], [1410.0, 24846.428571428572], [1422.0, 10589.285714285714], [1430.0, 13621.666666666668], [1426.0, 10801.5], [1434.0, 13285.400000000001], [1438.0, 27901.0], [1450.0, 7391.000000000001], [1446.0, 11277.666666666668], [1454.0, 4586.76923076923], [1526.0, 4264.538461538462], [1534.0, 20196.0], [1510.0, 9194.666666666666], [1506.0, 4828.5], [1530.0, 14633.57142857143], [1522.0, 13334.2], [1486.0, 8336.857142857143], [1482.0, 21488.666666666668], [1478.0, 8586.5], [1474.0, 9212.0], [1502.0, 11641.833333333332], [1498.0, 11841.0], [1494.0, 16414.75], [1490.0, 2886.0], [1518.0, 8253.111111111111], [1514.0, 5265.142857142858], [1594.0, 12181.8], [1598.0, 8118.0], [1570.0, 15522.0], [1578.0, 9931.857142857141], [1574.0, 14988.75], [1590.0, 13617.42857142857], [1586.0, 8964.666666666666], [1566.0, 11273.5], [1562.0, 2580.0], [1538.0, 13583.0], [1542.0, 17615.4], [1550.0, 15840.0], [1546.0, 13137.125], [1554.0, 9314.0], [1558.0, 15522.5], [1582.0, 19092.666666666668], [1654.0, 4135.0], [1638.0, 10828.5], [1662.0, 7581.833333333334], [1658.0, 11178.8], [1634.0, 12880.0], [1606.0, 5245.5], [1602.0, 7753.666666666666], [1610.0, 4770.375], [1650.0, 4329.714285714285], [1614.0, 19410.5], [1630.0, 10508.75], [1626.0, 6254.0], [1618.0, 6305.000000000001], [1622.0, 8288.333333333334], [1646.0, 5443.2], [1642.0, 11350.5], [1674.0, 9174.0], [1714.0, 6965.0], [1678.0, 16032.0], [1718.0, 8609.22222222222], [1722.0, 10384.333333333334], [1698.0, 2885.4545454545455], [1702.0, 15983.5], [1726.0, 11091.0], [1666.0, 6383.666666666666], [1670.0, 16199.0], [1694.0, 4923.5], [1690.0, 4814.0], [1682.0, 6148.333333333334], [1686.0, 13692.75], [1710.0, 10410.4], [1706.0, 12488.75], [1762.0, 9439.333333333334], [1774.0, 6349.799999999999], [1770.0, 9610.5], [1766.0, 5444.363636363636], [1758.0, 6442.857142857142], [1754.0, 14147.5], [1750.0, 3823.4], [1746.0, 7123.4], [1730.0, 6799.5], [1734.0, 7962.5], [1742.0, 10121.5], [1782.0, 9795.666666666666], [1778.0, 12218.666666666666], [1790.0, 4193.0], [1786.0, 7783.5], [1738.0, 10281.333333333334], [1850.0, 13888.0], [1854.0, 15095.2], [1842.0, 12360.5], [1846.0, 16910.0], [1806.0, 6338.2], [1802.0, 4939.0], [1798.0, 8859.0], [1794.0, 4458.888888888889], [1838.0, 12042.0], [1834.0, 7235.5], [1830.0, 8912.333333333334], [1826.0, 12428.0], [1822.0, 12250.5], [1818.0, 12870.0], [1814.0, 13005.5], [1810.0, 11482.666666666666], [1914.0, 10922.5], [1910.0, 14060.5], [1906.0, 17181.0], [1870.0, 13682.666666666666], [1866.0, 11792.5], [1862.0, 13675.0], [1858.0, 13737.0], [1902.0, 10879.5], [1898.0, 11438.0], [1894.0, 11328.0], [1890.0, 11200.0], [1918.0, 17076.0], [1886.0, 11243.0], [1882.0, 14499.0], [1878.0, 11336.5], [1874.0, 11867.5], [1974.0, 1280.0], [1954.0, 9861.0], [1982.0, 15545.0], [1978.0, 16437.0], [1970.0, 2380.0], [1934.0, 4430.0], [1930.0, 8850.0], [1926.0, 10650.0], [1922.0, 10964.0], [1950.0, 9795.5], [1946.0, 10347.0], [1942.0, 3994.0], [1938.0, 8039.666666666667], [1966.0, 11983.0], [1962.0, 9743.0], [1958.0, 12001.0], [1990.0, 15254.0], [1986.0, 16055.0], [1055.0, 14907.857142857143], [1031.0, 16180.0], [1043.0, 13165.25], [1047.0, 3923.6666666666665], [1051.0, 25723.5], [1035.0, 29853.833333333332], [1039.0, 43645.5], [1027.0, 6947.500000000001], [1083.0, 5058.0], [1087.0, 11203.6], [1063.0, 15025.2], [1059.0, 6879.9285714285725], [1071.0, 26238.11111111111], [1067.0, 35420.6], [1079.0, 3823.0], [1075.0, 19786.8], [1095.0, 3987.5], [1119.0, 7784.6], [1115.0, 16789.333333333332], [1111.0, 15409.75], [1107.0, 16307.333333333332], [1099.0, 13934.0], [1091.0, 12208.6], [1103.0, 23845.0], [1123.0, 9533.0], [1151.0, 3753.5], [1127.0, 36146.4], [1135.0, 17801.666666666664], [1131.0, 29576.0], [1147.0, 9225.0], [1143.0, 23939.5], [1139.0, 18222.6], [1163.0, 21398.714285714286], [1155.0, 19564.4], [1159.0, 42620.0], [1167.0, 19562.6], [1183.0, 27365.8], [1179.0, 26815.6], [1175.0, 7284.4], [1171.0, 29444.0], [1211.0, 15347.666666666666], [1187.0, 18815.75], [1191.0, 16050.0], [1215.0, 29236.8], [1207.0, 15403.166666666666], [1203.0, 20752.25], [1199.0, 4812.0], [1195.0, 5474.500000000001], [1227.0, 10698.2], [1255.0, 19702.75], [1279.0, 9293.2], [1271.0, 9792.909090909092], [1267.0, 13341.166666666666], [1231.0, 14150.333333333334], [1275.0, 18993.5], [1223.0, 26178.333333333332], [1219.0, 18240.0], [1247.0, 20822.5], [1243.0, 3689.0], [1239.0, 20219.0], [1235.0, 21942.714285714286], [1259.0, 22713.0], [1263.0, 10277.125], [1251.0, 10925.4], [1335.0, 25595.85714285714], [1319.0, 18860.166666666668], [1343.0, 18211.0], [1339.0, 21752.8], [1283.0, 8114.142857142856], [1311.0, 13226.333333333332], [1287.0, 7381.571428571428], [1295.0, 25994.14285714286], [1331.0, 25488.85714285714], [1291.0, 24800.833333333336], [1307.0, 19082.399999999998], [1299.0, 8508.833333333334], [1303.0, 18588.5], [1327.0, 29475.0], [1323.0, 28545.6], [1315.0, 4638.75], [1359.0, 10161.75], [1407.0, 4464.571428571428], [1403.0, 23744.75], [1399.0, 25517.5], [1395.0, 17221.0], [1379.0, 13165.333333333332], [1383.0, 22698.333333333336], [1355.0, 12375.714285714286], [1351.0, 10424.0], [1347.0, 10130.25], [1375.0, 3329.0], [1371.0, 12305.899999999998], [1363.0, 18669.333333333336], [1367.0, 15961.636363636364], [1391.0, 15210.2], [1387.0, 5599.363636363636], [1467.0, 11782.666666666666], [1471.0, 18831.42857142857], [1443.0, 12067.333333333334], [1447.0, 14880.6], [1451.0, 4097.071428571428], [1463.0, 8399.5], [1459.0, 13421.09090909091], [1439.0, 14361.125], [1411.0, 10464.0], [1415.0, 3456.75], [1423.0, 10488.142857142857], [1419.0, 21341.0], [1435.0, 14533.2], [1431.0, 14357.714285714284], [1427.0, 7200.999999999999], [1455.0, 9750.25], [1535.0, 13025.8], [1527.0, 16343.333333333334], [1523.0, 13207.0], [1487.0, 25061.0], [1531.0, 15807.25], [1507.0, 13298.0], [1499.0, 9150.0], [1503.0, 13002.999999999998], [1475.0, 24556.5], [1479.0, 24944.75], [1483.0, 10565.0], [1495.0, 13462.6], [1491.0, 12085.6], [1519.0, 9941.666666666668], [1515.0, 14906.2], [1511.0, 9984.0], [1539.0, 16074.25], [1599.0, 14069.5], [1571.0, 18618.0], [1595.0, 14672.5], [1591.0, 11709.6], [1587.0, 11454.444444444445], [1567.0, 19322.666666666668], [1543.0, 7900.75], [1547.0, 15364.250000000002], [1551.0, 11398.166666666666], [1563.0, 20109.5], [1559.0, 9901.0], [1555.0, 20028.0], [1579.0, 7460.25], [1583.0, 12597.8], [1575.0, 6417.0], [1659.0, 3786.0], [1663.0, 9764.0], [1635.0, 10369.5], [1639.0, 6472.5], [1643.0, 5276.8], [1655.0, 3200.3333333333335], [1651.0, 2922.8], [1631.0, 8699.8], [1603.0, 15488.0], [1615.0, 7326.857142857142], [1611.0, 12947.5], [1607.0, 11143.666666666668], [1627.0, 11883.0], [1623.0, 5562.76923076923], [1619.0, 9227.4], [1647.0, 5365.6], [1719.0, 4463.454545454546], [1727.0, 8809.666666666666], [1703.0, 5677.857142857143], [1699.0, 4662.2], [1723.0, 5837.5], [1679.0, 3866.2857142857138], [1715.0, 14597.999999999998], [1675.0, 9484.0], [1671.0, 6364.0], [1667.0, 5528.888888888889], [1695.0, 3803.5], [1687.0, 2021.0], [1683.0, 4839.8], [1691.0, 6270.666666666666], [1711.0, 12672.5], [1707.0, 10962.0], [1743.0, 9528.5], [1767.0, 5368.5], [1771.0, 9511.666666666668], [1775.0, 13382.5], [1763.0, 6760.8], [1791.0, 14742.666666666666], [1787.0, 9106.0], [1783.0, 9382.0], [1779.0, 9043.0], [1739.0, 5608.5], [1735.0, 6093.5], [1731.0, 11663.0], [1759.0, 9699.666666666666], [1755.0, 5333.666666666667], [1751.0, 8254.5], [1747.0, 4415.2], [1851.0, 5060.0], [1855.0, 11706.5], [1847.0, 9768.0], [1843.0, 6231.0], [1839.0, 12239.0], [1835.0, 14186.0], [1831.0, 8392.333333333334], [1827.0, 3563.0], [1823.0, 12512.5], [1799.0, 15126.25], [1795.0, 13241.0], [1807.0, 12961.5], [1803.0, 9373.2], [1819.0, 12906.0], [1815.0, 13023.0], [1811.0, 17099.0], [1915.0, 10630.5], [1899.0, 8051.333333333333], [1903.0, 8060.666666666667], [1919.0, 8280.333333333332], [1911.0, 10915.0], [1907.0, 9296.333333333334], [1895.0, 11417.0], [1891.0, 5615.0], [1883.0, 11313.0], [1887.0, 17290.0], [1863.0, 11986.5], [1859.0, 11995.5], [1871.0, 11446.0], [1867.0, 11688.0], [1879.0, 11386.0], [1875.0, 11705.5], [1971.0, 11564.333333333334], [1955.0, 9608.0], [1983.0, 15485.0], [1979.0, 16229.0], [1975.0, 16319.666666666666], [1951.0, 10148.5], [1927.0, 4860.0], [1923.0, 10820.0], [1935.0, 12480.0], [1931.0, 10722.0], [1947.0, 3878.0], [1943.0, 3731.0], [1939.0, 10329.0], [1967.0, 9611.5], [1963.0, 9419.0], [1959.0, 9883.5], [1999.0, 15707.25], [1991.0, 15492.0], [1987.0, 15990.0], [1.0, 64630.666666666664]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[770.4452857142886, 17777.303285714268]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 155.26666666666668, "minX": 1.63143678E12, "maxY": 1980808.2333333334, "series": [{"data": [[1.63143684E12, 1471795.4], [1.63143702E12, 32457.666666666668], [1.63143696E12, 1208633.7833333334], [1.63143714E12, 13816.966666666667], [1.63143708E12, 6748.2], [1.63143678E12, 48060.566666666666], [1.6314372E12, 22419.966666666667], [1.6314369E12, 1980808.2333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63143684E12, 23828.716666666667], [1.63143702E12, 155.26666666666668], [1.63143696E12, 4613.0], [1.63143714E12, 520269.68333333335], [1.63143708E12, 8739.316666666668], [1.63143678E12, 6394.733333333334], [1.6314372E12, 75950.25], [1.6314369E12, 8762.75]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6314372E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 439.53275109170266, "minX": 1.63143678E12, "maxY": 131646.03703703705, "series": [{"data": [[1.63143684E12, 8458.042372881357], [1.63143702E12, 131646.03703703705], [1.63143696E12, 66988.71366279072], [1.63143714E12, 32655.403460479793], [1.63143708E12, 34029.74798711756], [1.63143678E12, 439.53275109170266], [1.6314372E12, 2161.3176749703457], [1.6314369E12, 29569.631053036133]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6314372E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 426.1812227074236, "minX": 1.63143678E12, "maxY": 34029.7045088567, "series": [{"data": [[1.63143684E12, 3536.3070404172104], [1.63143702E12, 19378.962962962967], [1.63143696E12, 24699.832848837188], [1.63143714E12, 32655.394416044095], [1.63143708E12, 34029.7045088567], [1.63143678E12, 426.1812227074236], [1.6314372E12, 2131.330486358242], [1.6314369E12, 19322.59569561875]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6314372E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 14.248792270531398, "minX": 1.63143678E12, "maxY": 707.1252882398155, "series": [{"data": [[1.63143684E12, 613.3794002607556], [1.63143702E12, 18.740740740740737], [1.63143696E12, 526.1119186046506], [1.63143714E12, 560.3952025167125], [1.63143708E12, 14.248792270531398], [1.63143678E12, 164.59170305676852], [1.6314372E12, 102.4158956109131], [1.6314369E12, 707.1252882398155]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6314372E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 35.0, "minX": 1.63143678E12, "maxY": 154120.0, "series": [{"data": [[1.63143684E12, 41661.0], [1.63143702E12, 154120.0], [1.63143696E12, 105272.0], [1.63143714E12, 119774.0], [1.63143708E12, 60031.0], [1.63143678E12, 1087.0], [1.6314372E12, 8629.0], [1.6314369E12, 51842.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63143684E12, 17156.7], [1.63143702E12, 149074.00000000003], [1.63143696E12, 86632.2], [1.63143714E12, 111113.0], [1.63143708E12, 52137.4], [1.63143678E12, 733.0], [1.6314372E12, 5372.0], [1.6314369E12, 47799.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63143684E12, 25546.93], [1.63143702E12, 154120.0], [1.63143696E12, 100892.91999999997], [1.63143714E12, 119137.56], [1.63143708E12, 59798.14], [1.63143678E12, 1052.0], [1.6314372E12, 8248.9], [1.6314369E12, 50761.649999999994]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63143684E12, 20504.399999999987], [1.63143702E12, 154093.6], [1.63143696E12, 90625.4], [1.63143714E12, 118956.2], [1.63143708E12, 52476.4], [1.63143678E12, 855.0], [1.6314372E12, 7648.0], [1.6314369E12, 49895.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63143684E12, 50.0], [1.63143702E12, 116888.0], [1.63143696E12, 50625.0], [1.63143714E12, 409.0], [1.63143708E12, 15254.0], [1.63143678E12, 102.0], [1.6314372E12, 35.0], [1.6314369E12, 36.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63143684E12, 6815.0], [1.63143702E12, 123445.0], [1.63143696E12, 63917.0], [1.63143714E12, 6451.0], [1.63143708E12, 34244.5], [1.63143678E12, 394.0], [1.6314372E12, 1099.0], [1.6314369E12, 31735.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6314372E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 49.0, "minX": 1.0, "maxY": 139814.0, "series": [{"data": [[2.0, 126775.0], [3.0, 116888.0], [4.0, 98644.0], [5.0, 37536.0], [6.0, 17297.0], [7.0, 8731.5], [8.0, 23713.0], [9.0, 31301.0], [10.0, 72082.0], [11.0, 13392.0], [12.0, 27944.0], [13.0, 38604.0], [14.0, 33909.5], [15.0, 38610.5], [16.0, 58537.0], [17.0, 7256.0], [18.0, 30859.0], [19.0, 37429.0], [20.0, 58469.5], [21.0, 45637.5], [22.0, 35400.5], [23.0, 47675.5], [24.0, 20969.5], [25.0, 74712.0], [26.0, 39467.5], [27.0, 52511.0], [28.0, 18484.0], [30.0, 29971.0], [31.0, 28706.0], [32.0, 19899.5], [33.0, 6426.0], [34.0, 10148.5], [37.0, 44467.0], [40.0, 3552.5], [41.0, 110885.0], [43.0, 50091.5], [42.0, 50158.0], [44.0, 546.5], [47.0, 21335.5], [46.0, 2092.5], [49.0, 13832.5], [48.0, 33431.5], [51.0, 51361.0], [52.0, 17302.0], [55.0, 25450.0], [54.0, 51452.0], [56.0, 8368.0], [59.0, 53602.0], [62.0, 9687.5], [64.0, 11052.5], [66.0, 9999.5], [69.0, 44196.0], [70.0, 43452.5], [72.0, 3181.0], [73.0, 6895.0], [77.0, 10096.0], [82.0, 35096.0], [88.0, 6877.5], [92.0, 9576.0], [93.0, 16761.0], [95.0, 1921.0], [99.0, 2436.0], [101.0, 7583.0], [102.0, 11858.5], [109.0, 3051.0], [108.0, 1541.0], [110.0, 13775.5], [112.0, 12862.0], [119.0, 418.0], [126.0, 5236.0], [125.0, 409.0], [133.0, 6009.0], [137.0, 52158.0], [145.0, 58841.0], [157.0, 93935.0], [158.0, 119063.0], [153.0, 953.0], [159.0, 2492.0], [167.0, 4023.0], [175.0, 5891.5], [171.0, 43617.0], [168.0, 2674.0], [179.0, 8513.0], [191.0, 76691.0], [218.0, 5869.5], [226.0, 3179.5], [236.0, 4703.5], [254.0, 17861.5], [258.0, 34301.0], [291.0, 227.0], [306.0, 5379.0], [342.0, 4190.5], [395.0, 3785.0], [424.0, 7585.5], [484.0, 2598.5], [797.0, 192.5], [927.0, 68.0], [992.0, 49.0], [1.0, 41661.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 84723.0], [4.0, 104642.0], [1.0, 139814.0], [19.0, 90733.0], [5.0, 21057.0], [11.0, 9665.0], [797.0, 491.0], [24.0, 21049.0], [3.0, 94650.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 992.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 119063.0, "series": [{"data": [[2.0, 25214.0], [3.0, 25643.0], [4.0, 31119.0], [5.0, 3347.0], [6.0, 10634.5], [7.0, 1743.0], [8.0, 11824.5], [9.0, 19731.0], [10.0, 29334.0], [11.0, 9609.0], [12.0, 26710.5], [13.0, 12227.5], [14.0, 8997.0], [15.0, 38430.0], [16.0, 22830.0], [17.0, 5442.0], [18.0, 23489.5], [19.0, 21450.0], [20.0, 16164.5], [21.0, 17867.0], [22.0, 15940.5], [23.0, 7302.0], [24.0, 15888.5], [25.0, 21661.0], [26.0, 22748.5], [27.0, 19359.0], [28.0, 18484.0], [30.0, 9370.5], [31.0, 19721.0], [32.0, 3249.5], [33.0, 4360.0], [34.0, 8147.0], [37.0, 33332.0], [40.0, 3125.0], [41.0, 110885.0], [43.0, 49847.5], [42.0, 29264.5], [44.0, 546.5], [47.0, 1464.5], [46.0, 1886.0], [49.0, 3513.5], [48.0, 33431.5], [51.0, 51361.0], [52.0, 3725.0], [55.0, 7339.0], [54.0, 33033.0], [56.0, 3897.0], [59.0, 23702.0], [62.0, 3571.0], [64.0, 3444.5], [66.0, 3580.5], [69.0, 31676.0], [70.0, 32248.5], [72.0, 2555.0], [73.0, 3457.0], [77.0, 2460.0], [82.0, 35096.0], [88.0, 4242.0], [92.0, 2764.0], [93.0, 16761.0], [95.0, 1921.0], [99.0, 1661.0], [101.0, 1019.0], [102.0, 3610.5], [109.0, 2729.0], [108.0, 1128.5], [110.0, 5912.0], [112.0, 3549.5], [119.0, 258.0], [126.0, 3533.0], [125.0, 349.0], [133.0, 3080.0], [137.0, 52158.0], [145.0, 58775.5], [157.0, 93935.0], [158.0, 119063.0], [153.0, 953.0], [159.0, 2492.0], [167.0, 3099.0], [175.0, 5616.0], [171.0, 43617.0], [168.0, 2674.0], [179.0, 1932.0], [191.0, 76691.0], [218.0, 5869.5], [226.0, 3179.5], [236.0, 4703.5], [254.0, 17861.5], [258.0, 34301.0], [291.0, 227.0], [306.0, 5379.0], [342.0, 4190.5], [395.0, 3785.0], [424.0, 7585.5], [484.0, 2598.5], [797.0, 172.5], [927.0, 68.0], [992.0, 49.0], [1.0, 3477.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[16.0, 16814.0], [4.0, 17152.0], [1.0, 13015.0], [19.0, 21626.0], [5.0, 0.0], [11.0, 0.0], [797.0, 491.0], [24.0, 0.0], [3.0, 25513.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 992.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.63143678E12, "maxY": 66.66666666666667, "series": [{"data": [[1.63143684E12, 33.333333333333336], [1.63143702E12, 33.333333333333336], [1.63143714E12, 33.333333333333336], [1.63143678E12, 33.333333333333336], [1.6314372E12, 66.66666666666667], [1.6314369E12, 33.333333333333336]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6314372E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.63143678E12, "maxY": 70.15, "series": [{"data": [[1.63143684E12, 51.13333333333333], [1.63143702E12, 0.38333333333333336], [1.63143696E12, 11.383333333333333], [1.63143714E12, 42.38333333333333], [1.63143708E12, 20.7], [1.63143678E12, 2.4833333333333334], [1.6314372E12, 70.15], [1.6314369E12, 21.566666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6314372E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.ConnectException", "isController": false}, {"data": [[1.6314372E12, 0.08333333333333333], [1.6314369E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.63143702E12, 0.06666666666666667], [1.63143696E12, 0.08333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.TruncatedChunkException", "isController": false}, {"data": [[1.63143678E12, 12.783333333333333]], "isOverall": false, "label": "502", "isController": false}, {"data": [[1.6314369E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6314372E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.63143678E12, "maxY": 70.15, "series": [{"data": [[1.63143702E12, 0.06666666666666667], [1.63143696E12, 0.08333333333333333], [1.63143678E12, 12.783333333333333], [1.6314372E12, 0.1], [1.6314369E12, 0.11666666666666667]], "isOverall": false, "label": "HTTP请求-failure", "isController": false}, {"data": [[1.63143684E12, 51.13333333333333], [1.63143702E12, 0.38333333333333336], [1.63143696E12, 11.383333333333333], [1.63143714E12, 42.38333333333333], [1.63143708E12, 20.7], [1.63143678E12, 2.4833333333333334], [1.6314372E12, 70.15], [1.6314369E12, 21.566666666666666]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6314372E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.63143678E12, "maxY": 70.15, "series": [{"data": [[1.63143684E12, 51.13333333333333], [1.63143702E12, 0.38333333333333336], [1.63143696E12, 11.383333333333333], [1.63143714E12, 42.38333333333333], [1.63143708E12, 20.7], [1.63143678E12, 2.4833333333333334], [1.6314372E12, 70.15], [1.6314369E12, 21.566666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63143702E12, 0.06666666666666667], [1.63143696E12, 0.08333333333333333], [1.63143678E12, 12.783333333333333], [1.6314372E12, 0.1], [1.6314369E12, 0.11666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.6314372E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

