/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 20.0, "minX": 0.0, "maxY": 40578.0, "series": [{"data": [[0.0, 20.0], [0.1, 22.0], [0.2, 22.0], [0.3, 22.0], [0.4, 22.0], [0.5, 23.0], [0.6, 23.0], [0.7, 23.0], [0.8, 23.0], [0.9, 23.0], [1.0, 23.0], [1.1, 23.0], [1.2, 23.0], [1.3, 23.0], [1.4, 23.0], [1.5, 24.0], [1.6, 24.0], [1.7, 24.0], [1.8, 24.0], [1.9, 24.0], [2.0, 24.0], [2.1, 24.0], [2.2, 24.0], [2.3, 24.0], [2.4, 24.0], [2.5, 24.0], [2.6, 24.0], [2.7, 24.0], [2.8, 24.0], [2.9, 24.0], [3.0, 24.0], [3.1, 24.0], [3.2, 24.0], [3.3, 25.0], [3.4, 25.0], [3.5, 25.0], [3.6, 25.0], [3.7, 25.0], [3.8, 25.0], [3.9, 25.0], [4.0, 25.0], [4.1, 25.0], [4.2, 25.0], [4.3, 25.0], [4.4, 25.0], [4.5, 25.0], [4.6, 25.0], [4.7, 25.0], [4.8, 25.0], [4.9, 25.0], [5.0, 25.0], [5.1, 25.0], [5.2, 25.0], [5.3, 25.0], [5.4, 25.0], [5.5, 26.0], [5.6, 26.0], [5.7, 26.0], [5.8, 26.0], [5.9, 26.0], [6.0, 26.0], [6.1, 26.0], [6.2, 26.0], [6.3, 26.0], [6.4, 26.0], [6.5, 26.0], [6.6, 26.0], [6.7, 26.0], [6.8, 26.0], [6.9, 26.0], [7.0, 26.0], [7.1, 26.0], [7.2, 26.0], [7.3, 26.0], [7.4, 27.0], [7.5, 27.0], [7.6, 27.0], [7.7, 27.0], [7.8, 27.0], [7.9, 27.0], [8.0, 27.0], [8.1, 27.0], [8.2, 27.0], [8.3, 27.0], [8.4, 27.0], [8.5, 27.0], [8.6, 28.0], [8.7, 28.0], [8.8, 28.0], [8.9, 28.0], [9.0, 28.0], [9.1, 28.0], [9.2, 28.0], [9.3, 28.0], [9.4, 29.0], [9.5, 29.0], [9.6, 29.0], [9.7, 29.0], [9.8, 29.0], [9.9, 29.0], [10.0, 30.0], [10.1, 30.0], [10.2, 30.0], [10.3, 31.0], [10.4, 31.0], [10.5, 31.0], [10.6, 32.0], [10.7, 32.0], [10.8, 33.0], [10.9, 34.0], [11.0, 34.0], [11.1, 34.0], [11.2, 35.0], [11.3, 35.0], [11.4, 35.0], [11.5, 36.0], [11.6, 36.0], [11.7, 36.0], [11.8, 36.0], [11.9, 37.0], [12.0, 37.0], [12.1, 37.0], [12.2, 38.0], [12.3, 38.0], [12.4, 38.0], [12.5, 39.0], [12.6, 39.0], [12.7, 40.0], [12.8, 40.0], [12.9, 40.0], [13.0, 41.0], [13.1, 41.0], [13.2, 41.0], [13.3, 41.0], [13.4, 41.0], [13.5, 41.0], [13.6, 42.0], [13.7, 42.0], [13.8, 42.0], [13.9, 43.0], [14.0, 43.0], [14.1, 43.0], [14.2, 43.0], [14.3, 43.0], [14.4, 44.0], [14.5, 44.0], [14.6, 44.0], [14.7, 45.0], [14.8, 45.0], [14.9, 45.0], [15.0, 46.0], [15.1, 46.0], [15.2, 46.0], [15.3, 46.0], [15.4, 47.0], [15.5, 48.0], [15.6, 48.0], [15.7, 49.0], [15.8, 49.0], [15.9, 49.0], [16.0, 50.0], [16.1, 51.0], [16.2, 52.0], [16.3, 52.0], [16.4, 53.0], [16.5, 53.0], [16.6, 54.0], [16.7, 54.0], [16.8, 55.0], [16.9, 56.0], [17.0, 56.0], [17.1, 57.0], [17.2, 58.0], [17.3, 58.0], [17.4, 59.0], [17.5, 60.0], [17.6, 61.0], [17.7, 61.0], [17.8, 62.0], [17.9, 63.0], [18.0, 63.0], [18.1, 64.0], [18.2, 64.0], [18.3, 65.0], [18.4, 66.0], [18.5, 66.0], [18.6, 67.0], [18.7, 67.0], [18.8, 68.0], [18.9, 68.0], [19.0, 69.0], [19.1, 70.0], [19.2, 70.0], [19.3, 70.0], [19.4, 71.0], [19.5, 72.0], [19.6, 72.0], [19.7, 73.0], [19.8, 74.0], [19.9, 75.0], [20.0, 76.0], [20.1, 77.0], [20.2, 78.0], [20.3, 80.0], [20.4, 81.0], [20.5, 83.0], [20.6, 83.0], [20.7, 84.0], [20.8, 85.0], [20.9, 86.0], [21.0, 87.0], [21.1, 88.0], [21.2, 89.0], [21.3, 90.0], [21.4, 91.0], [21.5, 93.0], [21.6, 94.0], [21.7, 94.0], [21.8, 95.0], [21.9, 97.0], [22.0, 98.0], [22.1, 100.0], [22.2, 101.0], [22.3, 103.0], [22.4, 105.0], [22.5, 108.0], [22.6, 109.0], [22.7, 112.0], [22.8, 114.0], [22.9, 115.0], [23.0, 118.0], [23.1, 120.0], [23.2, 123.0], [23.3, 124.0], [23.4, 125.0], [23.5, 128.0], [23.6, 130.0], [23.7, 132.0], [23.8, 133.0], [23.9, 136.0], [24.0, 137.0], [24.1, 140.0], [24.2, 142.0], [24.3, 145.0], [24.4, 147.0], [24.5, 148.0], [24.6, 151.0], [24.7, 154.0], [24.8, 156.0], [24.9, 161.0], [25.0, 164.0], [25.1, 168.0], [25.2, 175.0], [25.3, 178.0], [25.4, 184.0], [25.5, 190.0], [25.6, 197.0], [25.7, 204.0], [25.8, 214.0], [25.9, 220.0], [26.0, 224.0], [26.1, 230.0], [26.2, 235.0], [26.3, 240.0], [26.4, 246.0], [26.5, 253.0], [26.6, 258.0], [26.7, 262.0], [26.8, 266.0], [26.9, 272.0], [27.0, 278.0], [27.1, 281.0], [27.2, 284.0], [27.3, 287.0], [27.4, 293.0], [27.5, 296.0], [27.6, 300.0], [27.7, 303.0], [27.8, 307.0], [27.9, 310.0], [28.0, 315.0], [28.1, 320.0], [28.2, 325.0], [28.3, 331.0], [28.4, 334.0], [28.5, 338.0], [28.6, 342.0], [28.7, 348.0], [28.8, 349.0], [28.9, 352.0], [29.0, 357.0], [29.1, 360.0], [29.2, 362.0], [29.3, 365.0], [29.4, 371.0], [29.5, 375.0], [29.6, 378.0], [29.7, 381.0], [29.8, 385.0], [29.9, 390.0], [30.0, 392.0], [30.1, 396.0], [30.2, 402.0], [30.3, 406.0], [30.4, 410.0], [30.5, 415.0], [30.6, 420.0], [30.7, 424.0], [30.8, 429.0], [30.9, 433.0], [31.0, 437.0], [31.1, 442.0], [31.2, 446.0], [31.3, 451.0], [31.4, 453.0], [31.5, 461.0], [31.6, 467.0], [31.7, 470.0], [31.8, 474.0], [31.9, 476.0], [32.0, 479.0], [32.1, 482.0], [32.2, 484.0], [32.3, 486.0], [32.4, 488.0], [32.5, 490.0], [32.6, 491.0], [32.7, 494.0], [32.8, 497.0], [32.9, 499.0], [33.0, 501.0], [33.1, 503.0], [33.2, 506.0], [33.3, 509.0], [33.4, 514.0], [33.5, 517.0], [33.6, 520.0], [33.7, 525.0], [33.8, 528.0], [33.9, 535.0], [34.0, 540.0], [34.1, 543.0], [34.2, 546.0], [34.3, 554.0], [34.4, 560.0], [34.5, 566.0], [34.6, 572.0], [34.7, 577.0], [34.8, 581.0], [34.9, 588.0], [35.0, 593.0], [35.1, 597.0], [35.2, 605.0], [35.3, 610.0], [35.4, 615.0], [35.5, 623.0], [35.6, 630.0], [35.7, 639.0], [35.8, 645.0], [35.9, 650.0], [36.0, 656.0], [36.1, 661.0], [36.2, 670.0], [36.3, 675.0], [36.4, 681.0], [36.5, 690.0], [36.6, 697.0], [36.7, 703.0], [36.8, 707.0], [36.9, 713.0], [37.0, 715.0], [37.1, 719.0], [37.2, 724.0], [37.3, 730.0], [37.4, 737.0], [37.5, 744.0], [37.6, 747.0], [37.7, 750.0], [37.8, 755.0], [37.9, 758.0], [38.0, 763.0], [38.1, 767.0], [38.2, 771.0], [38.3, 778.0], [38.4, 789.0], [38.5, 795.0], [38.6, 803.0], [38.7, 808.0], [38.8, 818.0], [38.9, 828.0], [39.0, 840.0], [39.1, 848.0], [39.2, 857.0], [39.3, 863.0], [39.4, 866.0], [39.5, 873.0], [39.6, 880.0], [39.7, 886.0], [39.8, 895.0], [39.9, 903.0], [40.0, 909.0], [40.1, 916.0], [40.2, 926.0], [40.3, 934.0], [40.4, 940.0], [40.5, 944.0], [40.6, 953.0], [40.7, 957.0], [40.8, 962.0], [40.9, 971.0], [41.0, 976.0], [41.1, 989.0], [41.2, 995.0], [41.3, 1006.0], [41.4, 1019.0], [41.5, 1032.0], [41.6, 1039.0], [41.7, 1042.0], [41.8, 1045.0], [41.9, 1049.0], [42.0, 1052.0], [42.1, 1053.0], [42.2, 1056.0], [42.3, 1063.0], [42.4, 1071.0], [42.5, 1075.0], [42.6, 1078.0], [42.7, 1082.0], [42.8, 1088.0], [42.9, 1094.0], [43.0, 1103.0], [43.1, 1111.0], [43.2, 1118.0], [43.3, 1126.0], [43.4, 1134.0], [43.5, 1145.0], [43.6, 1151.0], [43.7, 1160.0], [43.8, 1168.0], [43.9, 1185.0], [44.0, 1197.0], [44.1, 1210.0], [44.2, 1219.0], [44.3, 1233.0], [44.4, 1247.0], [44.5, 1258.0], [44.6, 1267.0], [44.7, 1282.0], [44.8, 1293.0], [44.9, 1306.0], [45.0, 1318.0], [45.1, 1330.0], [45.2, 1345.0], [45.3, 1355.0], [45.4, 1370.0], [45.5, 1377.0], [45.6, 1389.0], [45.7, 1405.0], [45.8, 1414.0], [45.9, 1426.0], [46.0, 1443.0], [46.1, 1454.0], [46.2, 1467.0], [46.3, 1488.0], [46.4, 1507.0], [46.5, 1527.0], [46.6, 1541.0], [46.7, 1550.0], [46.8, 1559.0], [46.9, 1568.0], [47.0, 1574.0], [47.1, 1590.0], [47.2, 1605.0], [47.3, 1620.0], [47.4, 1630.0], [47.5, 1639.0], [47.6, 1650.0], [47.7, 1661.0], [47.8, 1674.0], [47.9, 1689.0], [48.0, 1707.0], [48.1, 1717.0], [48.2, 1726.0], [48.3, 1740.0], [48.4, 1751.0], [48.5, 1758.0], [48.6, 1769.0], [48.7, 1777.0], [48.8, 1785.0], [48.9, 1795.0], [49.0, 1810.0], [49.1, 1827.0], [49.2, 1837.0], [49.3, 1849.0], [49.4, 1860.0], [49.5, 1870.0], [49.6, 1886.0], [49.7, 1910.0], [49.8, 1923.0], [49.9, 1943.0], [50.0, 1958.0], [50.1, 1973.0], [50.2, 1986.0], [50.3, 2006.0], [50.4, 2022.0], [50.5, 2043.0], [50.6, 2061.0], [50.7, 2083.0], [50.8, 2099.0], [50.9, 2119.0], [51.0, 2150.0], [51.1, 2163.0], [51.2, 2178.0], [51.3, 2200.0], [51.4, 2234.0], [51.5, 2260.0], [51.6, 2286.0], [51.7, 2305.0], [51.8, 2333.0], [51.9, 2365.0], [52.0, 2397.0], [52.1, 2422.0], [52.2, 2437.0], [52.3, 2465.0], [52.4, 2485.0], [52.5, 2509.0], [52.6, 2526.0], [52.7, 2543.0], [52.8, 2556.0], [52.9, 2570.0], [53.0, 2591.0], [53.1, 2603.0], [53.2, 2620.0], [53.3, 2640.0], [53.4, 2685.0], [53.5, 2706.0], [53.6, 2735.0], [53.7, 2762.0], [53.8, 2777.0], [53.9, 2793.0], [54.0, 2815.0], [54.1, 2831.0], [54.2, 2850.0], [54.3, 2877.0], [54.4, 2909.0], [54.5, 2944.0], [54.6, 2974.0], [54.7, 2985.0], [54.8, 3022.0], [54.9, 3044.0], [55.0, 3077.0], [55.1, 3107.0], [55.2, 3137.0], [55.3, 3167.0], [55.4, 3197.0], [55.5, 3222.0], [55.6, 3249.0], [55.7, 3275.0], [55.8, 3329.0], [55.9, 3372.0], [56.0, 3410.0], [56.1, 3450.0], [56.2, 3504.0], [56.3, 3537.0], [56.4, 3571.0], [56.5, 3630.0], [56.6, 3660.0], [56.7, 3704.0], [56.8, 3728.0], [56.9, 3761.0], [57.0, 3794.0], [57.1, 3845.0], [57.2, 3865.0], [57.3, 3901.0], [57.4, 3938.0], [57.5, 3983.0], [57.6, 4037.0], [57.7, 4092.0], [57.8, 4136.0], [57.9, 4163.0], [58.0, 4181.0], [58.1, 4240.0], [58.2, 4310.0], [58.3, 4357.0], [58.4, 4396.0], [58.5, 4435.0], [58.6, 4477.0], [58.7, 4522.0], [58.8, 4567.0], [58.9, 4600.0], [59.0, 4641.0], [59.1, 4682.0], [59.2, 4754.0], [59.3, 4788.0], [59.4, 4829.0], [59.5, 4876.0], [59.6, 4925.0], [59.7, 4954.0], [59.8, 5012.0], [59.9, 5030.0], [60.0, 5057.0], [60.1, 5100.0], [60.2, 5143.0], [60.3, 5212.0], [60.4, 5275.0], [60.5, 5321.0], [60.6, 5346.0], [60.7, 5390.0], [60.8, 5424.0], [60.9, 5484.0], [61.0, 5525.0], [61.1, 5572.0], [61.2, 5609.0], [61.3, 5639.0], [61.4, 5685.0], [61.5, 5730.0], [61.6, 5804.0], [61.7, 5844.0], [61.8, 5870.0], [61.9, 5904.0], [62.0, 5942.0], [62.1, 6024.0], [62.2, 6071.0], [62.3, 6112.0], [62.4, 6145.0], [62.5, 6177.0], [62.6, 6204.0], [62.7, 6246.0], [62.8, 6283.0], [62.9, 6317.0], [63.0, 6396.0], [63.1, 6489.0], [63.2, 6520.0], [63.3, 6572.0], [63.4, 6638.0], [63.5, 6670.0], [63.6, 6710.0], [63.7, 6776.0], [63.8, 6812.0], [63.9, 6847.0], [64.0, 6919.0], [64.1, 6950.0], [64.2, 7011.0], [64.3, 7065.0], [64.4, 7140.0], [64.5, 7177.0], [64.6, 7208.0], [64.7, 7273.0], [64.8, 7316.0], [64.9, 7365.0], [65.0, 7404.0], [65.1, 7450.0], [65.2, 7477.0], [65.3, 7515.0], [65.4, 7571.0], [65.5, 7623.0], [65.6, 7673.0], [65.7, 7729.0], [65.8, 7813.0], [65.9, 7874.0], [66.0, 7924.0], [66.1, 7978.0], [66.2, 8011.0], [66.3, 8045.0], [66.4, 8068.0], [66.5, 8140.0], [66.6, 8190.0], [66.7, 8243.0], [66.8, 8308.0], [66.9, 8357.0], [67.0, 8389.0], [67.1, 8425.0], [67.2, 8470.0], [67.3, 8513.0], [67.4, 8596.0], [67.5, 8634.0], [67.6, 8680.0], [67.7, 8717.0], [67.8, 8765.0], [67.9, 8805.0], [68.0, 8851.0], [68.1, 8898.0], [68.2, 8962.0], [68.3, 9030.0], [68.4, 9079.0], [68.5, 9124.0], [68.6, 9155.0], [68.7, 9205.0], [68.8, 9270.0], [68.9, 9298.0], [69.0, 9341.0], [69.1, 9383.0], [69.2, 9404.0], [69.3, 9450.0], [69.4, 9487.0], [69.5, 9544.0], [69.6, 9574.0], [69.7, 9616.0], [69.8, 9656.0], [69.9, 9685.0], [70.0, 9749.0], [70.1, 9801.0], [70.2, 9844.0], [70.3, 9885.0], [70.4, 9948.0], [70.5, 9996.0], [70.6, 10035.0], [70.7, 10105.0], [70.8, 10143.0], [70.9, 10174.0], [71.0, 10242.0], [71.1, 10287.0], [71.2, 10346.0], [71.3, 10380.0], [71.4, 10430.0], [71.5, 10487.0], [71.6, 10533.0], [71.7, 10588.0], [71.8, 10638.0], [71.9, 10683.0], [72.0, 10744.0], [72.1, 10785.0], [72.2, 10840.0], [72.3, 10888.0], [72.4, 10930.0], [72.5, 10976.0], [72.6, 11025.0], [72.7, 11085.0], [72.8, 11137.0], [72.9, 11180.0], [73.0, 11214.0], [73.1, 11243.0], [73.2, 11283.0], [73.3, 11334.0], [73.4, 11373.0], [73.5, 11407.0], [73.6, 11438.0], [73.7, 11498.0], [73.8, 11548.0], [73.9, 11612.0], [74.0, 11663.0], [74.1, 11717.0], [74.2, 11780.0], [74.3, 11822.0], [74.4, 11878.0], [74.5, 11920.0], [74.6, 11982.0], [74.7, 12052.0], [74.8, 12098.0], [74.9, 12128.0], [75.0, 12161.0], [75.1, 12185.0], [75.2, 12216.0], [75.3, 12272.0], [75.4, 12298.0], [75.5, 12364.0], [75.6, 12392.0], [75.7, 12416.0], [75.8, 12470.0], [75.9, 12511.0], [76.0, 12570.0], [76.1, 12616.0], [76.2, 12685.0], [76.3, 12775.0], [76.4, 12845.0], [76.5, 12915.0], [76.6, 12962.0], [76.7, 13005.0], [76.8, 13026.0], [76.9, 13092.0], [77.0, 13144.0], [77.1, 13177.0], [77.2, 13213.0], [77.3, 13282.0], [77.4, 13352.0], [77.5, 13396.0], [77.6, 13467.0], [77.7, 13524.0], [77.8, 13575.0], [77.9, 13633.0], [78.0, 13670.0], [78.1, 13707.0], [78.2, 13750.0], [78.3, 13796.0], [78.4, 13850.0], [78.5, 13913.0], [78.6, 13993.0], [78.7, 14049.0], [78.8, 14103.0], [78.9, 14123.0], [79.0, 14173.0], [79.1, 14204.0], [79.2, 14239.0], [79.3, 14281.0], [79.4, 14322.0], [79.5, 14371.0], [79.6, 14449.0], [79.7, 14480.0], [79.8, 14541.0], [79.9, 14608.0], [80.0, 14666.0], [80.1, 14710.0], [80.2, 14770.0], [80.3, 14824.0], [80.4, 14865.0], [80.5, 14903.0], [80.6, 14936.0], [80.7, 15001.0], [80.8, 15051.0], [80.9, 15096.0], [81.0, 15180.0], [81.1, 15216.0], [81.2, 15275.0], [81.3, 15305.0], [81.4, 15355.0], [81.5, 15406.0], [81.6, 15426.0], [81.7, 15492.0], [81.8, 15542.0], [81.9, 15581.0], [82.0, 15641.0], [82.1, 15685.0], [82.2, 15776.0], [82.3, 15825.0], [82.4, 15870.0], [82.5, 15904.0], [82.6, 15970.0], [82.7, 16020.0], [82.8, 16071.0], [82.9, 16129.0], [83.0, 16159.0], [83.1, 16188.0], [83.2, 16237.0], [83.3, 16300.0], [83.4, 16351.0], [83.5, 16389.0], [83.6, 16422.0], [83.7, 16488.0], [83.8, 16536.0], [83.9, 16564.0], [84.0, 16638.0], [84.1, 16680.0], [84.2, 16734.0], [84.3, 16765.0], [84.4, 16817.0], [84.5, 16887.0], [84.6, 16927.0], [84.7, 16953.0], [84.8, 17020.0], [84.9, 17072.0], [85.0, 17104.0], [85.1, 17133.0], [85.2, 17188.0], [85.3, 17220.0], [85.4, 17281.0], [85.5, 17317.0], [85.6, 17394.0], [85.7, 17465.0], [85.8, 17515.0], [85.9, 17555.0], [86.0, 17621.0], [86.1, 17673.0], [86.2, 17755.0], [86.3, 17809.0], [86.4, 17847.0], [86.5, 17906.0], [86.6, 17955.0], [86.7, 18027.0], [86.8, 18085.0], [86.9, 18151.0], [87.0, 18202.0], [87.1, 18247.0], [87.2, 18325.0], [87.3, 18386.0], [87.4, 18448.0], [87.5, 18510.0], [87.6, 18559.0], [87.7, 18604.0], [87.8, 18661.0], [87.9, 18697.0], [88.0, 18751.0], [88.1, 18812.0], [88.2, 18860.0], [88.3, 18904.0], [88.4, 18941.0], [88.5, 19022.0], [88.6, 19079.0], [88.7, 19114.0], [88.8, 19149.0], [88.9, 19200.0], [89.0, 19247.0], [89.1, 19308.0], [89.2, 19389.0], [89.3, 19450.0], [89.4, 19536.0], [89.5, 19589.0], [89.6, 19658.0], [89.7, 19703.0], [89.8, 19746.0], [89.9, 19813.0], [90.0, 19870.0], [90.1, 19936.0], [90.2, 19981.0], [90.3, 20036.0], [90.4, 20081.0], [90.5, 20187.0], [90.6, 20238.0], [90.7, 20285.0], [90.8, 20348.0], [90.9, 20407.0], [91.0, 20440.0], [91.1, 20493.0], [91.2, 20537.0], [91.3, 20631.0], [91.4, 20675.0], [91.5, 20772.0], [91.6, 20833.0], [91.7, 20926.0], [91.8, 21014.0], [91.9, 21080.0], [92.0, 21163.0], [92.1, 21203.0], [92.2, 21265.0], [92.3, 21346.0], [92.4, 21466.0], [92.5, 21554.0], [92.6, 21761.0], [92.7, 21863.0], [92.8, 22005.0], [92.9, 22111.0], [93.0, 22246.0], [93.1, 22405.0], [93.2, 22656.0], [93.3, 22884.0], [93.4, 23053.0], [93.5, 23345.0], [93.6, 23510.0], [93.7, 23752.0], [93.8, 24034.0], [93.9, 24337.0], [94.0, 24484.0], [94.1, 24791.0], [94.2, 24962.0], [94.3, 25205.0], [94.4, 25487.0], [94.5, 25773.0], [94.6, 26010.0], [94.7, 26282.0], [94.8, 26433.0], [94.9, 26616.0], [95.0, 26762.0], [95.1, 27048.0], [95.2, 27229.0], [95.3, 27501.0], [95.4, 27694.0], [95.5, 27884.0], [95.6, 28130.0], [95.7, 28370.0], [95.8, 28537.0], [95.9, 28823.0], [96.0, 28923.0], [96.1, 29243.0], [96.2, 29608.0], [96.3, 29787.0], [96.4, 30041.0], [96.5, 30218.0], [96.6, 30465.0], [96.7, 30689.0], [96.8, 30989.0], [96.9, 31172.0], [97.0, 31493.0], [97.1, 31665.0], [97.2, 31929.0], [97.3, 32086.0], [97.4, 32376.0], [97.5, 32663.0], [97.6, 33015.0], [97.7, 33350.0], [97.8, 33509.0], [97.9, 33840.0], [98.0, 34005.0], [98.1, 34357.0], [98.2, 34623.0], [98.3, 35203.0], [98.4, 35530.0], [98.5, 35762.0], [98.6, 36185.0], [98.7, 36477.0], [98.8, 36609.0], [98.9, 36814.0], [99.0, 37011.0], [99.1, 37174.0], [99.2, 37329.0], [99.3, 37572.0], [99.4, 37737.0], [99.5, 38034.0], [99.6, 38241.0], [99.7, 38361.0], [99.8, 38519.0], [99.9, 38860.0], [100.0, 40578.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2647.0, "series": [{"data": [[0.0, 2647.0], [100.0, 434.0], [32900.0, 6.0], [34500.0, 7.0], [35300.0, 4.0], [36100.0, 3.0], [36900.0, 6.0], [37700.0, 1.0], [38500.0, 6.0], [200.0, 231.0], [300.0, 309.0], [400.0, 331.0], [500.0, 261.0], [600.0, 186.0], [700.0, 229.0], [800.0, 158.0], [900.0, 162.0], [1000.0, 211.0], [1100.0, 123.0], [1200.0, 104.0], [1300.0, 95.0], [1400.0, 82.0], [1500.0, 101.0], [1600.0, 88.0], [1700.0, 117.0], [1800.0, 90.0], [1900.0, 74.0], [2000.0, 64.0], [2100.0, 59.0], [2200.0, 47.0], [2300.0, 40.0], [2400.0, 54.0], [2500.0, 74.0], [2600.0, 46.0], [2700.0, 56.0], [2800.0, 51.0], [2900.0, 45.0], [3000.0, 39.0], [3100.0, 43.0], [3200.0, 38.0], [3300.0, 28.0], [3400.0, 27.0], [3500.0, 34.0], [3600.0, 24.0], [3700.0, 41.0], [3800.0, 33.0], [3900.0, 28.0], [4000.0, 23.0], [4100.0, 37.0], [4200.0, 19.0], [4300.0, 27.0], [4400.0, 31.0], [4600.0, 28.0], [4500.0, 27.0], [4700.0, 24.0], [4800.0, 24.0], [4900.0, 29.0], [5000.0, 39.0], [5100.0, 21.0], [5200.0, 23.0], [5300.0, 34.0], [5400.0, 26.0], [5500.0, 26.0], [5600.0, 32.0], [5700.0, 18.0], [5800.0, 34.0], [6100.0, 37.0], [5900.0, 20.0], [6000.0, 27.0], [6200.0, 37.0], [6300.0, 14.0], [6400.0, 16.0], [6500.0, 27.0], [6600.0, 24.0], [6800.0, 27.0], [6700.0, 23.0], [6900.0, 24.0], [7000.0, 21.0], [7100.0, 24.0], [7200.0, 27.0], [7400.0, 31.0], [7300.0, 25.0], [7500.0, 25.0], [7600.0, 23.0], [7700.0, 18.0], [7800.0, 20.0], [7900.0, 26.0], [8000.0, 31.0], [8100.0, 23.0], [8200.0, 18.0], [8400.0, 27.0], [8600.0, 26.0], [8800.0, 28.0], [9000.0, 26.0], [9200.0, 28.0], [9400.0, 32.0], [9600.0, 33.0], [9800.0, 30.0], [10200.0, 19.0], [10000.0, 21.0], [10400.0, 20.0], [10600.0, 24.0], [11000.0, 25.0], [10800.0, 23.0], [11200.0, 32.0], [11400.0, 30.0], [11600.0, 22.0], [11800.0, 25.0], [12000.0, 22.0], [12200.0, 30.0], [12400.0, 29.0], [12600.0, 16.0], [13000.0, 27.0], [12800.0, 19.0], [13200.0, 19.0], [13400.0, 20.0], [13600.0, 29.0], [13800.0, 19.0], [14000.0, 19.0], [14200.0, 32.0], [14400.0, 24.0], [14600.0, 23.0], [14800.0, 30.0], [15000.0, 25.0], [15200.0, 29.0], [15400.0, 29.0], [15600.0, 26.0], [15800.0, 30.0], [16000.0, 25.0], [16200.0, 21.0], [17200.0, 25.0], [16400.0, 26.0], [16800.0, 20.0], [17600.0, 17.0], [18000.0, 19.0], [18400.0, 19.0], [18800.0, 25.0], [19200.0, 23.0], [19600.0, 18.0], [20000.0, 25.0], [20400.0, 29.0], [20800.0, 15.0], [21200.0, 17.0], [21600.0, 4.0], [22000.0, 12.0], [22400.0, 7.0], [22800.0, 5.0], [23200.0, 4.0], [23600.0, 6.0], [24000.0, 5.0], [24400.0, 8.0], [24800.0, 6.0], [25200.0, 5.0], [25600.0, 4.0], [26000.0, 8.0], [26400.0, 8.0], [26800.0, 5.0], [27200.0, 8.0], [27600.0, 5.0], [28000.0, 1.0], [28400.0, 3.0], [28800.0, 11.0], [29200.0, 4.0], [29600.0, 6.0], [30000.0, 4.0], [30400.0, 8.0], [30800.0, 2.0], [31200.0, 5.0], [31600.0, 12.0], [32000.0, 9.0], [32400.0, 6.0], [32800.0, 2.0], [33600.0, 6.0], [34400.0, 2.0], [35200.0, 4.0], [36000.0, 4.0], [36800.0, 7.0], [37600.0, 7.0], [38400.0, 10.0], [33100.0, 1.0], [33900.0, 6.0], [34700.0, 1.0], [35500.0, 4.0], [36300.0, 5.0], [37100.0, 5.0], [37900.0, 5.0], [38700.0, 4.0], [16500.0, 26.0], [16900.0, 30.0], [17300.0, 23.0], [17700.0, 18.0], [18100.0, 20.0], [18500.0, 25.0], [18900.0, 20.0], [19300.0, 14.0], [19700.0, 26.0], [20100.0, 12.0], [20500.0, 17.0], [20900.0, 14.0], [21300.0, 15.0], [21700.0, 10.0], [22100.0, 10.0], [22500.0, 4.0], [22900.0, 7.0], [23300.0, 8.0], [23700.0, 2.0], [24100.0, 3.0], [24500.0, 4.0], [24900.0, 9.0], [25300.0, 4.0], [25700.0, 2.0], [26100.0, 4.0], [26500.0, 5.0], [26900.0, 4.0], [27300.0, 3.0], [27700.0, 4.0], [28100.0, 6.0], [28500.0, 10.0], [28900.0, 6.0], [29300.0, 4.0], [29700.0, 7.0], [30100.0, 8.0], [30500.0, 1.0], [30900.0, 8.0], [31300.0, 2.0], [31700.0, 4.0], [32100.0, 3.0], [32500.0, 4.0], [33000.0, 5.0], [33800.0, 6.0], [34600.0, 3.0], [35400.0, 4.0], [36200.0, 5.0], [37000.0, 10.0], [37800.0, 4.0], [38600.0, 1.0], [39400.0, 1.0], [33300.0, 6.0], [34100.0, 4.0], [35700.0, 6.0], [34900.0, 3.0], [36500.0, 11.0], [37300.0, 9.0], [38100.0, 1.0], [38900.0, 3.0], [40500.0, 1.0], [8300.0, 30.0], [8500.0, 20.0], [8700.0, 28.0], [8900.0, 17.0], [9100.0, 25.0], [9300.0, 32.0], [9500.0, 24.0], [9700.0, 21.0], [9900.0, 20.0], [10100.0, 31.0], [10300.0, 31.0], [10500.0, 26.0], [10700.0, 23.0], [10900.0, 22.0], [11100.0, 30.0], [11500.0, 21.0], [11300.0, 27.0], [11700.0, 22.0], [11900.0, 19.0], [12100.0, 42.0], [12300.0, 27.0], [12500.0, 25.0], [12700.0, 13.0], [12900.0, 26.0], [13100.0, 27.0], [13300.0, 24.0], [13700.0, 28.0], [13500.0, 20.0], [13900.0, 19.0], [14100.0, 36.0], [14300.0, 24.0], [14500.0, 15.0], [14700.0, 21.0], [14900.0, 24.0], [15100.0, 17.0], [15300.0, 22.0], [15500.0, 24.0], [15700.0, 14.0], [15900.0, 21.0], [16100.0, 29.0], [16300.0, 27.0], [17000.0, 25.0], [17400.0, 14.0], [16600.0, 22.0], [18200.0, 22.0], [17800.0, 28.0], [18600.0, 28.0], [19000.0, 26.0], [19400.0, 18.0], [19800.0, 20.0], [20200.0, 23.0], [20600.0, 22.0], [21000.0, 17.0], [21400.0, 14.0], [21800.0, 9.0], [22200.0, 7.0], [22600.0, 3.0], [23000.0, 6.0], [23400.0, 6.0], [23800.0, 5.0], [24200.0, 3.0], [24600.0, 4.0], [25000.0, 5.0], [25400.0, 4.0], [25800.0, 3.0], [26200.0, 2.0], [26600.0, 7.0], [27000.0, 3.0], [27400.0, 4.0], [27800.0, 10.0], [28200.0, 2.0], [28600.0, 2.0], [29000.0, 2.0], [29400.0, 1.0], [29800.0, 6.0], [30200.0, 3.0], [30600.0, 8.0], [31000.0, 6.0], [31400.0, 2.0], [31800.0, 4.0], [32200.0, 4.0], [32600.0, 3.0], [33200.0, 7.0], [34000.0, 3.0], [35600.0, 5.0], [36400.0, 2.0], [37200.0, 6.0], [38000.0, 10.0], [38800.0, 3.0], [33500.0, 7.0], [34300.0, 5.0], [35100.0, 4.0], [35900.0, 1.0], [36700.0, 4.0], [37500.0, 8.0], [38300.0, 9.0], [39100.0, 4.0], [16700.0, 27.0], [17100.0, 30.0], [17500.0, 26.0], [17900.0, 20.0], [18300.0, 18.0], [18700.0, 20.0], [19100.0, 26.0], [19500.0, 20.0], [19900.0, 20.0], [20300.0, 19.0], [20700.0, 11.0], [21100.0, 19.0], [21500.0, 10.0], [21900.0, 6.0], [22300.0, 8.0], [22700.0, 7.0], [23100.0, 3.0], [23500.0, 5.0], [23900.0, 6.0], [24300.0, 7.0], [24700.0, 4.0], [25100.0, 2.0], [25500.0, 6.0], [25900.0, 7.0], [26300.0, 9.0], [26700.0, 9.0], [27500.0, 9.0], [27100.0, 5.0], [27900.0, 8.0], [28300.0, 7.0], [28700.0, 5.0], [29100.0, 4.0], [29500.0, 5.0], [29900.0, 5.0], [30300.0, 5.0], [30700.0, 3.0], [31100.0, 8.0], [31500.0, 2.0], [31900.0, 6.0], [32300.0, 4.0], [32700.0, 1.0], [33400.0, 5.0], [34200.0, 3.0], [35800.0, 2.0], [35000.0, 1.0], [36600.0, 6.0], [37400.0, 4.0], [38200.0, 8.0], [39000.0, 2.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 40500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1606.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 6436.0, "series": [{"data": [[0.0, 3958.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1606.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 6436.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 35.99249999999997, "minX": 1.63143408E12, "maxY": 1161.4463647199063, "series": [{"data": [[1.63143414E12, 912.0685000000005]], "isOverall": false, "label": "getOrdersAsBuyerByUserId", "isController": false}, {"data": [[1.63143408E12, 485.5285000000004]], "isOverall": false, "label": "changeOrderStatus", "isController": false}, {"data": [[1.63143414E12, 161.5527950310559], [1.63143408E12, 1161.4463647199063]], "isOverall": false, "label": "getOrdersByUserId", "isController": false}, {"data": [[1.63143408E12, 447.3085000000017]], "isOverall": false, "label": "makeOrder", "isController": false}, {"data": [[1.63143408E12, 35.99249999999997]], "isOverall": false, "label": "affirmWants", "isController": false}, {"data": [[1.63143414E12, 944.8424999999983]], "isOverall": false, "label": "getOrdersAsSellerByUserid", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63143414E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 156.06417112299465, "minX": 1.0, "maxY": 26284.0, "series": [{"data": [[2.0, 12589.857142857141], [3.0, 14319.166666666666], [4.0, 14333.166666666666], [5.0, 16935.2], [6.0, 12129.857142857143], [7.0, 16258.4], [8.0, 13402.0], [9.0, 17434.0], [10.0, 10852.25], [11.0, 13930.166666666668], [12.0, 12590.4], [13.0, 11285.0], [14.0, 20591.8], [15.0, 13117.125], [16.0, 9009.4], [17.0, 20585.833333333332], [18.0, 20253.0], [19.0, 13961.833333333332], [20.0, 20595.0], [21.0, 6786.4], [22.0, 17583.0], [23.0, 12364.714285714286], [24.0, 16367.4], [25.0, 9679.285714285714], [26.0, 17612.166666666664], [27.0, 7623.272727272727], [28.0, 2841.166666666667], [29.0, 1645.519230769231], [30.0, 1538.333333333333], [31.0, 595.3402777777778], [33.0, 156.06417112299465], [32.0, 482.5078534031414], [35.0, 405.47807017543863], [34.0, 762.4020100502514], [37.0, 540.5868263473054], [36.0, 457.7947368421052], [39.0, 1101.9489795918366], [38.0, 471.55479452054794], [41.0, 2382.822222222222], [40.0, 601.4594594594595], [43.0, 2802.5666666666666], [42.0, 2638.8125], [45.0, 2683.823529411765], [44.0, 2701.2666666666664], [46.0, 8798.785714285716], [47.0, 12048.25], [49.0, 7028.133333333333], [48.0, 7321.714285714286], [51.0, 5325.466666666667], [50.0, 5509.090909090909], [53.0, 9027.0], [52.0, 6069.533333333334], [54.0, 19940.0], [55.0, 4949.363636363636], [57.0, 9443.0], [56.0, 12751.0], [59.0, 14289.166666666666], [58.0, 20203.75], [61.0, 10833.75], [60.0, 26243.333333333332], [63.0, 11914.285714285714], [62.0, 14027.166666666666], [67.0, 4909.058823529412], [64.0, 5811.5], [65.0, 5681.785714285714], [66.0, 4394.8], [71.0, 15137.5], [69.0, 8775.0], [68.0, 1797.962962962963], [70.0, 6325.818181818182], [75.0, 11510.727272727274], [73.0, 6134.2], [74.0, 6102.7], [72.0, 4559.055555555556], [79.0, 15339.75], [78.0, 16809.166666666668], [77.0, 9432.727272727272], [76.0, 6804.833333333334], [82.0, 5786.636363636363], [80.0, 14699.571428571428], [83.0, 12849.875], [81.0, 19993.75], [87.0, 11040.888888888889], [86.0, 19657.0], [85.0, 7173.333333333333], [84.0, 15681.0], [89.0, 8610.307692307693], [88.0, 14759.25], [90.0, 8034.4], [91.0, 14819.874999999998], [95.0, 8550.8], [94.0, 8845.555555555555], [93.0, 11702.0], [92.0, 9450.0], [99.0, 6515.615384615384], [98.0, 11203.714285714286], [97.0, 9500.222222222223], [96.0, 7797.4], [101.0, 6603.2307692307695], [100.0, 11248.571428571428], [103.0, 11618.714285714284], [102.0, 10086.25], [106.0, 6871.416666666666], [104.0, 8773.0], [105.0, 13940.5], [107.0, 11564.285714285714], [110.0, 9219.888888888889], [109.0, 14473.75], [111.0, 13308.5], [108.0, 14333.333333333334], [115.0, 15740.6], [113.0, 19784.6], [112.0, 9942.333333333332], [114.0, 13832.5], [119.0, 9315.8], [118.0, 14343.142857142857], [117.0, 19858.0], [116.0, 16413.8], [123.0, 13547.833333333334], [121.0, 16045.4], [120.0, 19826.166666666664], [122.0, 20138.5], [127.0, 11413.333333333334], [124.0, 19593.0], [125.0, 19802.0], [126.0, 19827.5], [135.0, 15906.2], [134.0, 11201.0], [133.0, 9055.0], [131.0, 11296.0], [130.0, 19208.25], [129.0, 13213.833333333332], [128.0, 17040.666666666668], [132.0, 12076.000000000002], [142.0, 13659.5], [141.0, 19253.75], [140.0, 12241.857142857143], [139.0, 19577.6], [138.0, 15841.0], [143.0, 14703.25], [137.0, 14331.666666666666], [136.0, 20070.25], [151.0, 18968.0], [150.0, 13421.666666666668], [149.0, 19131.0], [148.0, 13349.5], [146.0, 12362.2], [145.0, 19249.5], [144.0, 14336.714285714286], [147.0, 19947.2], [158.0, 18752.333333333332], [157.0, 15806.2], [156.0, 15547.8], [155.0, 15877.4], [154.0, 13502.0], [153.0, 19318.75], [152.0, 13556.0], [159.0, 16595.0], [165.0, 14413.0], [164.0, 16776.428571428572], [163.0, 13187.0], [162.0, 13300.166666666666], [160.0, 13063.166666666666], [167.0, 16204.333333333334], [166.0, 19905.25], [161.0, 19427.75], [175.0, 5878.529411764706], [171.0, 4371.684210526316], [170.0, 8425.555555555557], [168.0, 5089.125], [173.0, 2595.1875], [174.0, 1236.4736842105262], [172.0, 5458.714285714285], [169.0, 7787.0], [181.0, 3973.4400000000005], [178.0, 3401.6666666666665], [182.0, 7891.9], [177.0, 6132.894736842105], [180.0, 4285.0], [179.0, 6022.615384615385], [176.0, 2928.5238095238096], [183.0, 19241.25], [191.0, 8327.111111111111], [190.0, 9006.909090909092], [185.0, 7954.9], [187.0, 5450.071428571428], [186.0, 3613.857142857143], [188.0, 3925.238095238095], [189.0, 9494.5], [184.0, 15406.8], [198.0, 10119.75], [196.0, 12528.0], [193.0, 9535.625], [192.0, 8789.555555555555], [197.0, 12335.833333333334], [199.0, 18391.0], [195.0, 18561.5], [194.0, 19167.0], [207.0, 12420.166666666666], [204.0, 12847.0], [203.0, 11754.124999999998], [202.0, 12520.375], [201.0, 9858.5], [200.0, 15165.6], [206.0, 15612.666666666668], [205.0, 19391.0], [215.0, 11074.42857142857], [214.0, 14421.0], [213.0, 10878.142857142857], [211.0, 11388.285714285716], [210.0, 10518.42857142857], [212.0, 18798.0], [208.0, 15398.8], [209.0, 24158.666666666668], [222.0, 18137.25], [221.0, 12529.166666666666], [219.0, 8605.555555555555], [216.0, 14828.8], [220.0, 12657.333333333332], [223.0, 12607.0], [218.0, 18929.0], [217.0, 18448.0], [230.0, 14571.8], [229.0, 10992.857142857141], [227.0, 18035.2], [226.0, 8253.57142857143], [224.0, 18220.25], [231.0, 18129.75], [228.0, 15423.0], [225.0, 15170.6], [239.0, 10642.0], [238.0, 11722.125], [236.0, 12682.5], [235.0, 17727.75], [234.0, 14305.25], [233.0, 10935.8], [237.0, 18037.0], [232.0, 18143.333333333332], [246.0, 17832.4], [245.0, 14023.2], [243.0, 12230.5], [241.0, 13139.25], [240.0, 17583.5], [247.0, 11260.142857142857], [242.0, 13820.142857142857], [244.0, 26284.0], [254.0, 14481.0], [253.0, 12068.833333333332], [251.0, 8126.666666666667], [252.0, 14995.4], [250.0, 18339.75], [249.0, 15401.5], [255.0, 23507.666666666668], [248.0, 26084.0], [270.0, 12138.666666666666], [269.0, 9419.625], [266.0, 12395.5], [265.0, 12384.0], [271.0, 17686.333333333336], [264.0, 13610.5], [261.0, 10543.57142857143], [260.0, 18355.2], [258.0, 7959.9], [259.0, 13553.75], [268.0, 20916.4], [263.0, 5334.299999999999], [256.0, 17954.5], [257.0, 23133.0], [262.0, 18052.5], [267.0, 11902.0], [280.0, 6661.363636363636], [282.0, 5426.928571428572], [284.0, 6485.857142857142], [283.0, 5162.636363636364], [279.0, 15008.57142857143], [272.0, 12243.666666666666], [274.0, 14238.0], [275.0, 17649.25], [273.0, 12279.888888888889], [281.0, 9065.375], [278.0, 6794.0], [277.0, 14231.4], [276.0, 12020.666666666668], [286.0, 7130.307692307692], [285.0, 25626.5], [287.0, 8106.666666666667], [290.0, 6006.846153846153], [301.0, 8818.875], [302.0, 5977.75], [300.0, 9266.5], [291.0, 10112.285714285716], [303.0, 9240.0], [296.0, 9199.2], [297.0, 13351.25], [299.0, 11250.5], [298.0, 11809.833333333334], [293.0, 4076.0555555555557], [292.0, 10071.285714285714], [288.0, 6465.272727272727], [295.0, 9171.166666666666], [294.0, 10157.714285714286], [289.0, 11600.333333333334], [317.0, 7883.727272727273], [314.0, 6765.846153846154], [315.0, 5634.7692307692305], [313.0, 3515.2941176470586], [312.0, 2503.833333333333], [318.0, 7955.571428571428], [319.0, 6769.307692307692], [310.0, 6495.875000000001], [309.0, 7037.625], [308.0, 7748.714285714285], [307.0, 8031.222222222223], [316.0, 3931.428571428571], [306.0, 4419.318181818181], [311.0, 6620.636363636364], [305.0, 10702.2], [304.0, 9873.714285714286], [332.0, 9730.909090909092], [334.0, 10058.0], [335.0, 11527.666666666668], [328.0, 17034.0], [330.0, 4110.285714285714], [331.0, 17555.5], [329.0, 10152.8], [320.0, 9964.142857142857], [323.0, 10137.428571428572], [322.0, 17312.75], [321.0, 9330.25], [333.0, 7122.9], [327.0, 7692.142857142858], [324.0, 7861.0], [325.0, 10166.285714285714], [326.0, 22132.666666666668], [339.0, 10193.571428571428], [350.0, 8945.625], [349.0, 5025.133333333333], [348.0, 11327.666666666666], [347.0, 8068.555555555556], [346.0, 8084.076923076923], [345.0, 9207.0], [351.0, 16712.25], [344.0, 12035.833333333332], [341.0, 9918.42857142857], [342.0, 11347.166666666666], [340.0, 13833.0], [338.0, 8996.5], [337.0, 12183.6], [336.0, 4130.4], [343.0, 7619.444444444444], [355.0, 5393.461538461539], [363.0, 6474.928571428571], [362.0, 5203.0], [359.0, 5266.642857142858], [358.0, 6372.818181818182], [356.0, 5136.3], [357.0, 14335.0], [361.0, 7434.6], [360.0, 16591.5], [367.0, 14243.0], [366.0, 10412.2], [365.0, 9506.857142857143], [364.0, 11207.166666666668], [353.0, 4237.058823529412], [354.0, 4361.411764705882], [352.0, 11599.833333333334], [381.0, 13947.0], [383.0, 9031.833333333334], [382.0, 13032.2], [377.0, 7591.0], [376.0, 16826.8], [370.0, 13344.8], [372.0, 15883.0], [373.0, 21147.25], [374.0, 7237.0], [369.0, 13568.8], [368.0, 9837.0], [375.0, 16635.666666666668], [371.0, 8599.875], [380.0, 12674.25], [379.0, 11518.833333333334], [378.0, 16559.25], [386.0, 6861.4], [399.0, 7869.999999999999], [396.0, 8562.9], [387.0, 10025.285714285716], [398.0, 12051.714285714286], [397.0, 10318.0], [394.0, 6876.700000000001], [395.0, 10059.8], [393.0, 12027.142857142857], [392.0, 8638.666666666668], [391.0, 6776.700000000001], [390.0, 8416.125], [388.0, 5433.400000000001], [389.0, 8604.1], [385.0, 16700.75], [384.0, 8639.4], [402.0, 6896.5], [414.0, 8125.333333333334], [412.0, 3922.6666666666665], [413.0, 16351.0], [403.0, 8365.5], [410.0, 11611.25], [411.0, 13906.333333333332], [409.0, 11928.857142857143], [408.0, 5925.444444444444], [415.0, 8474.4], [407.0, 10764.0], [406.0, 8481.375], [405.0, 12849.2], [404.0, 8233.875], [401.0, 7509.333333333333], [400.0, 16368.0], [419.0, 7447.444444444444], [430.0, 4203.083333333334], [429.0, 12750.4], [428.0, 5817.222222222223], [424.0, 6984.166666666667], [425.0, 23409.5], [426.0, 13862.666666666668], [427.0, 20762.666666666668], [431.0, 12484.125], [421.0, 9492.666666666666], [422.0, 11071.833333333332], [423.0, 9911.2], [418.0, 9633.714285714286], [417.0, 16134.25], [416.0, 6100.818181818182], [420.0, 9852.8], [435.0, 3790.0], [438.0, 12925.2], [443.0, 12404.6], [447.0, 7416.333333333333], [446.0, 16020.0], [440.0, 9468.428571428572], [441.0, 12852.2], [442.0, 10780.0], [437.0, 5349.5625], [434.0, 7504.555555555556], [436.0, 4499.666666666667], [439.0, 8234.25], [432.0, 16105.75], [433.0, 13018.0], [444.0, 8336.625], [445.0, 8139.625], [461.0, 3205.8125], [460.0, 6424.200000000001], [459.0, 10570.666666666668], [458.0, 9421.0], [457.0, 15934.6], [456.0, 5439.0], [463.0, 6431.799999999999], [462.0, 10265.75], [455.0, 6729.3], [454.0, 10460.666666666668], [453.0, 10345.333333333334], [451.0, 9382.0], [450.0, 12911.6], [449.0, 9588.0], [448.0, 12964.0], [452.0, 8116.125], [478.0, 4637.214285714285], [479.0, 7567.777777777777], [465.0, 8031.375], [464.0, 7575.777777777777], [471.0, 12658.0], [466.0, 10496.0], [467.0, 15869.8], [469.0, 8297.375], [468.0, 11125.42857142857], [470.0, 12218.6], [472.0, 6975.444444444444], [477.0, 10958.0], [476.0, 15209.0], [475.0, 12629.4], [474.0, 9562.57142857143], [473.0, 15583.25], [481.0, 6547.799999999999], [488.0, 2757.5769230769233], [489.0, 3475.157894736842], [491.0, 5470.25], [490.0, 8811.57142857143], [487.0, 4046.3125], [485.0, 3775.2222222222217], [480.0, 7975.249999999999], [484.0, 7165.846153846152], [482.0, 7174.428571428572], [483.0, 6086.0], [494.0, 8955.571428571428], [493.0, 20225.333333333332], [495.0, 19843.0], [492.0, 12316.8], [486.0, 7903.375000000001], [511.0, 3262.0], [509.0, 7872.125], [507.0, 5134.0], [506.0, 6379.5], [510.0, 3926.176470588235], [505.0, 7963.5], [504.0, 10253.833333333334], [503.0, 10468.166666666666], [502.0, 5910.545454545454], [496.0, 7364.0], [497.0, 8911.428571428572], [498.0, 5151.714285714286], [508.0, 5377.833333333333], [499.0, 18155.5], [501.0, 4950.214285714285], [500.0, 6533.916666666666], [540.0, 3395.9285714285716], [528.0, 15502.5], [530.0, 14640.5], [534.0, 12185.4], [532.0, 10063.0], [542.0, 9922.5], [538.0, 11630.8], [536.0, 12568.166666666666], [516.0, 7664.125], [518.0, 8005.125], [514.0, 4301.466666666667], [512.0, 7151.615384615385], [526.0, 8882.857142857143], [524.0, 8683.285714285714], [522.0, 5770.636363636363], [520.0, 4217.166666666666], [550.0, 3664.285714285714], [574.0, 11813.4], [560.0, 6246.9], [572.0, 4774.357142857143], [564.0, 7896.874999999999], [566.0, 21236.5], [562.0, 9941.666666666668], [558.0, 5765.875], [546.0, 10042.666666666668], [544.0, 3017.833333333333], [548.0, 2669.7692307692305], [568.0, 14557.25], [570.0, 18790.0], [556.0, 5598.5], [552.0, 4995.1], [554.0, 10161.0], [582.0, 6938.666666666667], [606.0, 6300.857142857142], [604.0, 6809.333333333333], [602.0, 6197.222222222223], [576.0, 14420.5], [578.0, 6832.777777777777], [580.0, 9737.833333333334], [600.0, 7946.142857142858], [590.0, 5925.3], [586.0, 8655.8], [588.0, 4208.611111111111], [584.0, 14652.25], [598.0, 7167.0], [596.0, 11467.6], [594.0, 10515.5], [592.0, 6909.0], [632.0, 6289.4285714285725], [638.0, 8733.800000000001], [634.0, 9958.714285714286], [636.0, 6079.8], [614.0, 3704.9411764705883], [610.0, 5201.999999999999], [612.0, 4352.384615384615], [608.0, 6571.777777777777], [618.0, 3949.0], [622.0, 10589.0], [620.0, 5021.0], [616.0, 4213.785714285714], [630.0, 7349.0], [628.0, 6381.666666666667], [624.0, 6487.888888888889], [626.0, 5834.714285714285], [668.0, 7705.555555555556], [670.0, 5024.333333333334], [664.0, 2975.75], [646.0, 6940.099999999999], [644.0, 9368.833333333332], [642.0, 11546.833333333334], [640.0, 7364.599999999999], [660.0, 4564.0], [662.0, 9269.666666666666], [658.0, 3195.714285714286], [666.0, 7070.125], [656.0, 3087.6800000000003], [652.0, 2597.583333333333], [650.0, 4936.333333333333], [648.0, 6054.250000000001], [654.0, 3628.777777777778], [672.0, 5786.5], [700.0, 8848.0], [686.0, 8286.0], [684.0, 4551.555555555556], [680.0, 3169.6], [682.0, 5550.2], [674.0, 5688.0], [678.0, 13642.75], [676.0, 6839.9], [702.0, 3994.8571428571427], [692.0, 13100.0], [690.0, 16095.75], [688.0, 17345.666666666668], [694.0, 9761.5], [698.0, 6204.0], [696.0, 8036.0], [706.0, 13181.5], [734.0, 7592.0], [718.0, 13398.2], [704.0, 17029.666666666668], [716.0, 7165.75], [714.0, 12961.75], [712.0, 11040.0], [720.0, 10493.0], [722.0, 10446.6], [726.0, 8805.666666666666], [724.0, 19490.0], [732.0, 8112.375], [730.0, 12911.25], [728.0, 13121.25], [710.0, 12847.666666666666], [708.0, 13421.2], [740.0, 10290.6], [742.0, 9639.5], [736.0, 10538.2], [738.0, 16791.333333333332], [760.0, 10285.8], [744.0, 12753.25], [746.0, 12802.0], [750.0, 6705.125], [748.0, 15387.25], [764.0, 7512.857142857142], [762.0, 16327.333333333334], [766.0, 10205.8], [758.0, 9648.25], [756.0, 10263.2], [754.0, 16369.666666666666], [752.0, 16405.666666666668], [770.0, 12510.5], [772.0, 8844.166666666666], [792.0, 17662.0], [774.0, 15280.5], [776.0, 12631.666666666666], [778.0, 12428.5], [782.0, 12169.5], [768.0, 23626.0], [780.0, 14662.8], [788.0, 8363.5], [790.0, 19330.333333333332], [786.0, 12330.0], [794.0, 2814.857142857143], [796.0, 12189.75], [798.0, 7368.714285714285], [784.0, 12178.0], [802.0, 12106.75], [826.0, 11744.666666666666], [806.0, 9891.2], [804.0, 9844.2], [824.0, 12013.5], [808.0, 11703.25], [810.0, 9672.0], [800.0, 8287.333333333334], [814.0, 9628.6], [812.0, 9963.0], [822.0, 9767.4], [820.0, 9766.6], [818.0, 9843.0], [816.0, 11884.25], [828.0, 9614.4], [830.0, 15342.0], [862.0, 11562.0], [832.0, 9754.2], [846.0, 9853.333333333332], [840.0, 11756.0], [844.0, 15211.333333333334], [842.0, 11748.5], [852.0, 7828.666666666667], [850.0, 9342.8], [848.0, 11546.333333333334], [860.0, 11716.0], [858.0, 11579.75], [856.0, 11626.8], [836.0, 9700.8], [838.0, 15233.333333333334], [834.0, 11621.333333333334], [854.0, 7777.875], [868.0, 9399.8], [866.0, 6810.0], [864.0, 9400.8], [870.0, 6860.285714285714], [872.0, 6931.857142857142], [874.0, 7988.666666666667], [876.0, 6799.285714285715], [878.0, 8689.75], [880.0, 7300.375], [884.0, 11384.5], [882.0, 14741.333333333334], [886.0, 9104.6], [892.0, 11234.0], [894.0, 7051.4], [888.0, 11227.75], [890.0, 9169.6], [902.0, 4849.099999999999], [896.0, 3311.125], [900.0, 14536.0], [898.0, 15785.5], [904.0, 9274.8], [906.0, 11049.75], [920.0, 9103.6], [924.0, 10700.5], [912.0, 11160.666666666666], [926.0, 8931.0], [922.0, 6330.714285714285], [914.0, 8810.6], [918.0, 6650.0], [916.0, 14225.333333333334], [908.0, 7579.333333333333], [910.0, 9036.8], [932.0, 10850.25], [936.0, 6988.6], [938.0, 11428.272727272726], [940.0, 7802.0], [950.0, 10595.0], [948.0, 13651.0], [954.0, 8462.2], [952.0, 10414.25], [934.0, 8285.25], [930.0, 5055.6], [928.0, 14014.333333333334], [942.0, 13850.666666666666], [956.0, 6475.428571428572], [958.0, 12643.8], [944.0, 10433.25], [946.0, 10701.0], [984.0, 8716.0], [960.0, 7269.0], [962.0, 10480.5], [966.0, 6423.142857142857], [964.0, 15097.25], [986.0, 8383.4], [988.0, 5987.428571428572], [990.0, 6807.375], [976.0, 13448.333333333334], [978.0, 7096.833333333333], [980.0, 8685.833333333334], [982.0, 13321.0], [970.0, 5131.666666666667], [968.0, 7305.666666666667], [972.0, 6366.428571428571], [974.0, 8539.4], [1018.0, 4512.2], [992.0, 4713.285714285715], [994.0, 14510.5], [996.0, 6660.2], [1016.0, 7663.8], [1020.0, 6888.833333333333], [1022.0, 4877.727272727273], [1008.0, 4167.0], [1010.0, 8092.8], [1012.0, 3973.3333333333335], [1014.0, 9874.333333333334], [1000.0, 4555.7], [998.0, 9704.5], [1004.0, 10165.2], [1002.0, 10295.333333333334], [1006.0, 12138.0], [1076.0, 12331.666666666666], [1024.0, 5368.6], [1052.0, 12638.0], [1048.0, 13912.75], [1040.0, 5971.571428571428], [1044.0, 9768.25], [1080.0, 14437.333333333334], [1072.0, 12220.666666666666], [1036.0, 12681.0], [1032.0, 12674.333333333334], [1028.0, 12737.666666666666], [1068.0, 12317.0], [1064.0, 9509.5], [1060.0, 11587.25], [1056.0, 12413.0], [1084.0, 6559.0], [1140.0, 12443.5], [1144.0, 11289.666666666666], [1148.0, 8835.5], [1136.0, 10422.0], [1100.0, 11314.25], [1096.0, 11946.666666666666], [1092.0, 11981.666666666666], [1088.0, 16254.0], [1132.0, 11382.666666666666], [1128.0, 11709.0], [1124.0, 13159.5], [1120.0, 10791.0], [1116.0, 13088.0], [1112.0, 13299.0], [1104.0, 13285.0], [1108.0, 9188.333333333334], [1208.0, 10838.0], [1212.0, 11550.5], [1204.0, 12330.0], [1200.0, 11808.75], [1196.0, 10425.0], [1192.0, 11379.0], [1188.0, 8395.0], [1184.0, 10542.333333333334], [1180.0, 10820.0], [1156.0, 11827.5], [1152.0, 11203.333333333334], [1164.0, 11167.0], [1160.0, 11055.666666666666], [1176.0, 10950.5], [1172.0, 10641.666666666666], [1168.0, 10565.333333333334], [1268.0, 9300.0], [1276.0, 9965.666666666666], [1272.0, 7703.5], [1264.0, 9890.333333333334], [1228.0, 9920.0], [1220.0, 10117.0], [1224.0, 7790.5], [1216.0, 11909.5], [1260.0, 9133.0], [1252.0, 11875.2], [1248.0, 9905.666666666666], [1244.0, 9536.333333333334], [1240.0, 9639.0], [1236.0, 10124.0], [1232.0, 5399.666666666667], [1336.0, 9153.333333333334], [1340.0, 10221.5], [1332.0, 8697.333333333334], [1328.0, 9005.333333333334], [1324.0, 8729.333333333334], [1320.0, 8691.666666666666], [1316.0, 10811.5], [1312.0, 8966.333333333334], [1308.0, 9516.0], [1284.0, 11402.5], [1280.0, 5231.166666666667], [1292.0, 9858.333333333334], [1288.0, 10839.75], [1304.0, 9354.333333333334], [1300.0, 9412.333333333334], [1296.0, 9523.0], [1404.0, 7964.0], [1400.0, 7851.5], [1384.0, 7340.0], [1396.0, 6586.0], [1392.0, 8599.666666666666], [1356.0, 8407.333333333334], [1352.0, 9938.75], [1348.0, 9149.5], [1344.0, 8472.0], [1388.0, 8280.666666666666], [1380.0, 7827.666666666667], [1376.0, 7942.0], [1372.0, 8096.75], [1368.0, 8506.333333333334], [1364.0, 9085.333333333334], [1360.0, 8544.333333333334], [1464.0, 7275.333333333333], [1440.0, 7714.0], [1444.0, 7965.666666666667], [1448.0, 8189.0], [1468.0, 7632.333333333333], [1460.0, 6428.5], [1456.0, 6288.75], [1408.0, 6327.4], [1412.0, 7191.75], [1416.0, 7376.666666666667], [1420.0, 9357.75], [1436.0, 8050.666666666667], [1432.0, 7937.666666666667], [1428.0, 6244.25], [1424.0, 6550.0], [1452.0, 8313.0], [1524.0, 6706.0], [1532.0, 6554.0], [1504.0, 7268.5], [1508.0, 5002.0], [1512.0, 6666.333333333333], [1528.0, 5887.0], [1484.0, 6439.5], [1520.0, 3195.5], [1480.0, 7275.0], [1476.0, 6769.666666666667], [1472.0, 8295.0], [1500.0, 5505.666666666667], [1496.0, 6529.0], [1492.0, 7172.0], [1488.0, 6963.666666666667], [1516.0, 6241.666666666667], [1592.0, 5790.0], [1568.0, 6047.333333333333], [1572.0, 6309.0], [1576.0, 5295.666666666667], [1596.0, 5715.666666666667], [1588.0, 6061.333333333333], [1584.0, 4606.25], [1536.0, 5032.5], [1540.0, 6539.0], [1544.0, 6294.0], [1548.0, 6288.25], [1564.0, 6374.333333333333], [1560.0, 7103.0], [1556.0, 5670.5], [1552.0, 4801.0], [1580.0, 6063.666666666667], [1656.0, 4036.25], [1648.0, 5051.0], [1632.0, 4960.75], [1640.0, 4916.0], [1636.0, 5232.5], [1660.0, 4840.666666666667], [1652.0, 4437.333333333333], [1600.0, 6817.0], [1604.0, 5470.0], [1608.0, 4558.0], [1612.0, 5228.333333333333], [1628.0, 5347.333333333333], [1624.0, 4792.0], [1620.0, 5036.5], [1616.0, 6738.666666666667], [1644.0, 3966.2], [1720.0, 3664.5], [1696.0, 3869.5], [1700.0, 3685.5], [1704.0, 3772.6666666666665], [1724.0, 3382.0], [1716.0, 3747.5], [1712.0, 3909.5], [1664.0, 4051.25], [1668.0, 5149.333333333333], [1672.0, 3725.75], [1676.0, 4998.666666666667], [1692.0, 5412.5], [1688.0, 5493.0], [1684.0, 4875.0], [1680.0, 5153.5], [1708.0, 3962.0], [1780.0, 3562.0], [1788.0, 2946.25], [1784.0, 2566.5], [1760.0, 3396.3333333333335], [1764.0, 3782.0], [1768.0, 3672.0], [1776.0, 3547.6666666666665], [1740.0, 3450.75], [1736.0, 4093.6666666666665], [1732.0, 3530.0], [1728.0, 4214.333333333333], [1756.0, 4242.5], [1752.0, 3880.0], [1748.0, 3533.6666666666665], [1744.0, 3908.0], [1772.0, 4153.0], [1848.0, 3113.0], [1824.0, 2626.5], [1828.0, 3116.0], [1832.0, 4212.0], [1852.0, 3089.0], [1844.0, 3222.5], [1840.0, 3009.5], [1792.0, 2951.75], [1796.0, 3319.6666666666665], [1800.0, 2987.3333333333335], [1804.0, 3111.6666666666665], [1820.0, 3009.6666666666665], [1816.0, 2841.3333333333335], [1812.0, 3690.0], [1808.0, 3036.6666666666665], [1836.0, 3282.0], [1912.0, 3457.0], [1916.0, 3366.0], [1888.0, 3862.0], [1892.0, 3774.0], [1896.0, 3554.0], [1908.0, 3658.0], [1904.0, 3721.0], [1868.0, 3714.0], [1864.0, 2823.5], [1860.0, 2975.5], [1856.0, 2975.5], [1884.0, 3828.0], [1880.0, 2960.0], [1876.0, 4043.0], [1872.0, 3704.0], [1900.0, 3660.0], [1924.0, 2601.0], [1976.0, 2401.0], [1920.0, 3353.0], [1928.0, 2944.0], [1932.0, 3008.0], [1948.0, 2829.0], [1944.0, 2961.0], [1940.0, 2994.0], [1936.0, 2958.5], [1952.0, 2811.0], [1956.0, 2624.0], [1960.0, 2610.0], [1964.0, 2603.0], [1980.0, 2348.0], [1972.0, 2358.0], [1968.0, 2489.0], [1996.0, 2023.0], [1992.0, 1855.0], [1988.0, 2234.0], [1984.0, 2283.0], [1033.0, 8062.2], [1029.0, 7747.2], [1049.0, 6652.333333333334], [1053.0, 12513.0], [1025.0, 4019.666666666667], [1045.0, 7864.4], [1041.0, 12656.333333333334], [1085.0, 13371.75], [1061.0, 12369.0], [1057.0, 9565.75], [1069.0, 12406.666666666666], [1065.0, 14870.666666666666], [1081.0, 9514.6], [1077.0, 13354.0], [1073.0, 12164.666666666666], [1037.0, 9742.25], [1145.0, 10927.666666666666], [1149.0, 12683.0], [1141.0, 10707.5], [1137.0, 11579.666666666666], [1133.0, 11570.333333333334], [1129.0, 11468.333333333334], [1125.0, 10831.25], [1121.0, 9093.5], [1117.0, 10975.5], [1093.0, 11934.333333333334], [1089.0, 9462.5], [1101.0, 11480.666666666666], [1097.0, 12005.666666666666], [1113.0, 10772.75], [1109.0, 12786.0], [1105.0, 11154.25], [1201.0, 11468.0], [1209.0, 12252.5], [1213.0, 11121.0], [1185.0, 8386.5], [1205.0, 11676.5], [1197.0, 10166.333333333334], [1193.0, 8100.333333333333], [1189.0, 10972.666666666666], [1181.0, 16040.0], [1157.0, 10470.25], [1153.0, 10883.666666666666], [1165.0, 8617.0], [1161.0, 10823.666666666666], [1177.0, 8484.5], [1173.0, 8625.0], [1169.0, 12026.5], [1273.0, 10601.25], [1277.0, 10504.5], [1269.0, 9797.0], [1265.0, 3608.0], [1229.0, 10337.0], [1225.0, 9928.75], [1221.0, 6087.75], [1217.0, 11709.0], [1261.0, 10298.666666666666], [1257.0, 9821.166666666668], [1253.0, 10308.333333333334], [1249.0, 9193.333333333334], [1245.0, 9863.0], [1241.0, 9988.333333333334], [1237.0, 10408.333333333334], [1233.0, 11586.5], [1337.0, 9427.666666666666], [1341.0, 7062.8], [1333.0, 8618.666666666666], [1329.0, 9320.0], [1325.0, 8542.333333333334], [1321.0, 7426.5], [1317.0, 7608.8], [1313.0, 9472.666666666666], [1309.0, 9476.5], [1285.0, 8393.0], [1281.0, 9295.0], [1293.0, 9869.333333333334], [1289.0, 7150.5], [1305.0, 9430.0], [1301.0, 9530.333333333334], [1297.0, 9622.333333333334], [1405.0, 6304.0], [1385.0, 7653.666666666667], [1397.0, 7813.0], [1401.0, 6096.5], [1393.0, 8044.333333333333], [1389.0, 8641.333333333334], [1381.0, 8562.666666666666], [1377.0, 8188.333333333333], [1373.0, 8968.0], [1349.0, 8334.25], [1345.0, 9766.0], [1357.0, 8655.333333333334], [1353.0, 8496.333333333334], [1369.0, 8535.0], [1365.0, 7589.666666666667], [1361.0, 8918.333333333334], [1465.0, 5453.5], [1441.0, 9097.5], [1445.0, 7353.666666666667], [1449.0, 6842.666666666667], [1469.0, 6686.666666666667], [1461.0, 6544.666666666667], [1457.0, 7767.0], [1409.0, 8424.666666666666], [1413.0, 8441.666666666666], [1417.0, 7864.0], [1421.0, 8271.666666666666], [1437.0, 7584.333333333333], [1429.0, 6000.5], [1433.0, 5889.0], [1425.0, 8193.8], [1453.0, 5578.4], [1529.0, 6580.0], [1505.0, 6518.0], [1509.0, 7457.0], [1513.0, 5626.5], [1533.0, 6463.333333333333], [1525.0, 6521.666666666667], [1521.0, 6231.2], [1473.0, 7624.5], [1477.0, 5500.25], [1481.0, 7537.0], [1485.0, 6662.333333333333], [1501.0, 6356.6], [1497.0, 6690.333333333333], [1493.0, 7596.0], [1489.0, 7715.0], [1517.0, 6427.666666666667], [1593.0, 6689.5], [1569.0, 6214.0], [1573.0, 6280.0], [1577.0, 6508.5], [1597.0, 5509.0], [1589.0, 5597.333333333333], [1585.0, 5930.333333333333], [1537.0, 6381.0], [1541.0, 6742.0], [1545.0, 5898.0], [1549.0, 7496.0], [1565.0, 4616.5], [1561.0, 5961.25], [1557.0, 6585.333333333333], [1553.0, 6775.75], [1581.0, 4361.75], [1657.0, 4690.333333333333], [1633.0, 5957.5], [1637.0, 5128.75], [1641.0, 5375.666666666667], [1661.0, 4815.333333333333], [1653.0, 5280.333333333333], [1649.0, 5007.0], [1605.0, 5693.0], [1601.0, 4053.6666666666665], [1609.0, 5578.666666666667], [1613.0, 5671.666666666667], [1629.0, 4442.25], [1625.0, 5252.666666666667], [1621.0, 6240.0], [1617.0, 4773.5], [1645.0, 4659.333333333333], [1721.0, 2985.4], [1697.0, 4225.333333333333], [1701.0, 4523.666666666667], [1705.0, 4010.6666666666665], [1725.0, 4034.3333333333335], [1717.0, 4457.333333333333], [1713.0, 4379.666666666667], [1665.0, 4642.666666666667], [1669.0, 5106.666666666667], [1673.0, 3791.75], [1677.0, 4722.333333333333], [1693.0, 3689.0], [1689.0, 4105.0], [1685.0, 4293.333333333333], [1681.0, 4274.25], [1709.0, 3730.6], [1781.0, 3502.0], [1789.0, 3533.0], [1785.0, 2399.0], [1761.0, 3821.6666666666665], [1765.0, 3853.5], [1769.0, 3095.0], [1773.0, 2303.75], [1777.0, 3698.6666666666665], [1741.0, 4065.3333333333335], [1737.0, 4812.5], [1733.0, 3966.6666666666665], [1729.0, 3322.5], [1757.0, 3000.6666666666665], [1753.0, 3972.6666666666665], [1749.0, 3868.6666666666665], [1745.0, 3653.0], [1849.0, 2913.0], [1829.0, 2958.6666666666665], [1833.0, 2670.5], [1853.0, 3043.5], [1825.0, 2089.5], [1845.0, 3253.0], [1841.0, 3144.5], [1793.0, 2995.0], [1797.0, 2988.25], [1801.0, 3169.6666666666665], [1805.0, 3172.0], [1821.0, 2640.0], [1817.0, 2632.0], [1813.0, 2727.0], [1809.0, 3014.3333333333335], [1837.0, 3388.0], [1861.0, 2814.5], [1913.0, 3480.0], [1885.0, 2886.5], [1877.0, 4051.0], [1857.0, 3059.0], [1865.0, 2908.5], [1869.0, 3623.0], [1889.0, 3781.0], [1893.0, 3842.0], [1897.0, 3620.0], [1901.0, 3722.0], [1917.0, 3532.0], [1909.0, 3336.0], [1905.0, 3687.0], [1977.0, 2388.0], [1953.0, 2556.0], [1957.0, 2595.0], [1961.0, 2630.0], [1981.0, 2151.0], [1973.0, 2432.0], [1969.0, 2095.0], [1921.0, 3105.0], [1925.0, 3313.0], [1929.0, 3184.0], [1933.0, 3151.0], [1949.0, 2762.0], [1945.0, 2501.0], [1941.0, 2934.0], [1937.0, 3123.0], [1965.0, 2537.0], [1997.0, 1999.0], [1993.0, 2152.0], [1989.0, 2163.0], [1985.0, 2195.0], [539.0, 6528.3], [517.0, 6789.333333333333], [543.0, 10060.333333333332], [529.0, 12498.0], [535.0, 8969.8], [533.0, 19613.666666666668], [531.0, 7024.222222222223], [541.0, 8626.444444444443], [537.0, 10040.5], [519.0, 5327.583333333333], [515.0, 4663.333333333333], [513.0, 3229.9523809523807], [527.0, 9920.833333333334], [525.0, 12000.8], [523.0, 7841.75], [521.0, 6704.5], [569.0, 8648.428571428572], [575.0, 7845.000000000001], [573.0, 14526.75], [571.0, 9986.0], [567.0, 9651.75], [565.0, 18871.333333333332], [563.0, 14363.0], [561.0, 10259.166666666666], [559.0, 12453.5], [557.0, 7971.599999999999], [545.0, 14887.333333333334], [549.0, 14554.5], [547.0, 8143.5], [551.0, 10083.666666666666], [553.0, 9768.333333333334], [555.0, 6890.666666666667], [579.0, 14577.25], [601.0, 4891.461538461539], [605.0, 7223.250000000001], [603.0, 5222.727272727273], [591.0, 3927.266666666667], [577.0, 7652.625], [581.0, 7453.25], [583.0, 9811.166666666666], [587.0, 14789.0], [589.0, 9747.666666666666], [585.0, 6655.888888888889], [597.0, 2085.1612903225805], [599.0, 7191.875], [595.0, 14598.8], [593.0, 12239.5], [607.0, 6520.818181818182], [615.0, 4887.916666666666], [613.0, 5108.636363636364], [637.0, 7238.625], [635.0, 8557.285714285714], [633.0, 5789.25], [611.0, 3097.904761904762], [609.0, 9216.833333333334], [623.0, 11440.5], [617.0, 3386.578947368421], [619.0, 6600.333333333333], [621.0, 7175.083333333333], [629.0, 4024.5714285714284], [631.0, 20365.5], [625.0, 9269.833333333334], [627.0, 7552.5], [639.0, 13819.666666666666], [647.0, 13852.0], [645.0, 2749.4444444444443], [671.0, 3190.571428571429], [669.0, 4031.2857142857138], [665.0, 3104.5789473684213], [655.0, 3937.6363636363635], [641.0, 8728.8], [643.0, 8058.714285714286], [659.0, 5618.733333333334], [661.0, 4859.555555555556], [663.0, 7801.285714285714], [667.0, 3401.4615384615386], [657.0, 2647.1176470588234], [653.0, 6541.2307692307695], [651.0, 5742.133333333333], [649.0, 3085.2666666666664], [677.0, 5497.4], [673.0, 11303.2], [687.0, 8465.125], [685.0, 8251.3], [683.0, 6143.285714285714], [681.0, 10788.699999999999], [679.0, 8230.2], [675.0, 7156.5], [703.0, 7444.272727272727], [689.0, 13436.333333333334], [691.0, 8084.857142857142], [693.0, 11042.6], [695.0, 8457.25], [701.0, 7872.857142857143], [699.0, 5102.0], [697.0, 2905.5200000000004], [707.0, 9825.5], [705.0, 7832.142857142858], [719.0, 12965.0], [717.0, 15719.75], [713.0, 13282.0], [715.0, 16796.0], [721.0, 13284.75], [723.0, 16750.0], [735.0, 16591.333333333332], [725.0, 7104.0], [727.0, 12948.75], [733.0, 9124.333333333334], [729.0, 12883.0], [731.0, 18902.0], [709.0, 13298.25], [711.0, 17453.333333333332], [739.0, 10511.6], [737.0, 12766.25], [741.0, 12781.75], [743.0, 8240.625], [745.0, 10266.4], [747.0, 19102.5], [749.0, 6995.0], [751.0, 12708.0], [761.0, 10171.4], [763.0, 16207.666666666666], [765.0, 12513.25], [767.0, 12461.0], [755.0, 10327.2], [759.0, 15479.0], [757.0, 16325.333333333334], [753.0, 12632.25], [773.0, 12296.0], [769.0, 6644.875], [771.0, 16227.333333333334], [775.0, 6961.166666666666], [793.0, 15889.666666666666], [779.0, 4779.0], [777.0, 9324.375], [781.0, 8794.666666666666], [783.0, 12345.5], [785.0, 6553.5], [787.0, 12258.25], [789.0, 8695.666666666666], [791.0, 7763.0], [795.0, 10658.75], [799.0, 12298.25], [797.0, 12002.25], [825.0, 11918.25], [801.0, 11993.666666666668], [807.0, 5296.0], [805.0, 15703.666666666666], [803.0, 4930.454545454546], [809.0, 9956.0], [813.0, 15615.0], [811.0, 15690.666666666666], [815.0, 12030.25], [821.0, 11865.5], [823.0, 12133.75], [831.0, 9770.6], [819.0, 15467.0], [817.0, 15584.0], [829.0, 13956.8], [827.0, 9508.0], [859.0, 8236.666666666666], [861.0, 11699.5], [833.0, 6357.249999999999], [847.0, 11476.25], [845.0, 9261.75], [843.0, 10227.571428571428], [841.0, 15260.0], [849.0, 11799.4], [851.0, 11565.5], [863.0, 6824.857142857143], [839.0, 6395.375], [857.0, 15108.0], [837.0, 11789.0], [835.0, 14565.5], [855.0, 9160.75], [853.0, 17057.5], [891.0, 7739.5], [865.0, 5665.0], [867.0, 9588.0], [869.0, 11291.5], [875.0, 11416.0], [873.0, 14809.333333333334], [877.0, 7869.0], [883.0, 7980.166666666667], [887.0, 11126.5], [885.0, 14717.0], [893.0, 10958.25], [895.0, 7126.0], [881.0, 11492.6], [889.0, 9133.6], [871.0, 14909.0], [879.0, 6022.166666666666], [901.0, 7859.666666666666], [911.0, 8899.2], [897.0, 7649.5], [899.0, 8302.428571428572], [905.0, 6537.285714285714], [907.0, 11094.0], [921.0, 8810.2], [903.0, 14396.333333333334], [923.0, 5148.555555555556], [927.0, 8760.6], [925.0, 14042.0], [913.0, 10920.6], [915.0, 5784.0], [917.0, 8876.4], [919.0, 13503.0], [909.0, 9056.0], [931.0, 12719.8], [943.0, 5694.125], [929.0, 14030.333333333334], [937.0, 7466.0], [941.0, 7351.5], [939.0, 6710.8], [949.0, 7550.0], [951.0, 7202.666666666666], [957.0, 3714.5714285714284], [955.0, 13828.0], [953.0, 13688.0], [933.0, 15826.0], [935.0, 11313.0], [959.0, 13710.0], [945.0, 10675.5], [947.0, 10495.25], [987.0, 5023.777777777777], [985.0, 5006.333333333333], [967.0, 13570.666666666666], [965.0, 13593.666666666666], [963.0, 10601.5], [971.0, 7238.333333333334], [961.0, 8528.0], [989.0, 3804.777777777778], [991.0, 6007.857142857143], [977.0, 7110.166666666666], [979.0, 15046.0], [981.0, 7140.333333333334], [983.0, 8143.25], [969.0, 3616.9285714285716], [975.0, 5712.375], [973.0, 13355.333333333334], [997.0, 5083.857142857142], [995.0, 8335.8], [993.0, 10289.8], [1007.0, 5963.0], [999.0, 4080.5000000000005], [1017.0, 6053.428571428572], [1019.0, 4777.777777777777], [1021.0, 5511.333333333333], [1023.0, 10053.333333333334], [1009.0, 9223.333333333334], [1013.0, 8137.4], [1015.0, 7170.142857142857], [1011.0, 5342.125], [1001.0, 5517.875], [1005.0, 5413.0], [1003.0, 9735.75], [1038.0, 6873.166666666667], [1030.0, 9621.0], [1026.0, 9928.5], [1050.0, 9432.5], [1054.0, 9704.0], [1034.0, 9829.25], [1042.0, 8043.6], [1046.0, 6737.666666666666], [1086.0, 12058.666666666666], [1082.0, 9467.5], [1062.0, 12339.0], [1058.0, 9338.25], [1070.0, 12162.0], [1066.0, 11662.0], [1078.0, 11565.25], [1074.0, 12327.666666666666], [1146.0, 10611.333333333334], [1150.0, 16504.0], [1142.0, 11082.0], [1138.0, 11075.666666666666], [1134.0, 11544.666666666666], [1130.0, 11549.0], [1126.0, 11373.333333333334], [1122.0, 13877.0], [1118.0, 11719.0], [1094.0, 11927.666666666666], [1090.0, 9098.0], [1102.0, 11581.333333333334], [1098.0, 11813.0], [1114.0, 11583.666666666666], [1110.0, 11611.333333333334], [1106.0, 11455.0], [1210.0, 8113.0], [1214.0, 10309.666666666666], [1206.0, 9349.6], [1202.0, 6686.25], [1166.0, 3346.0], [1162.0, 11324.0], [1158.0, 11713.5], [1154.0, 8347.0], [1198.0, 15943.0], [1194.0, 11765.0], [1190.0, 10731.666666666666], [1186.0, 11845.25], [1182.0, 9770.0], [1178.0, 10754.0], [1174.0, 10528.0], [1170.0, 10220.75], [1274.0, 9333.333333333334], [1278.0, 9556.0], [1270.0, 9478.666666666666], [1266.0, 10623.0], [1262.0, 9472.333333333334], [1258.0, 9812.666666666666], [1254.0, 9995.333333333334], [1250.0, 7219.0], [1246.0, 11179.0], [1218.0, 10584.0], [1226.0, 11296.0], [1230.0, 6814.5], [1222.0, 11236.5], [1242.0, 10426.666666666666], [1238.0, 10026.666666666666], [1234.0, 10467.333333333334], [1338.0, 10596.5], [1342.0, 8747.666666666666], [1334.0, 9777.5], [1330.0, 8838.25], [1326.0, 8162.333333333333], [1322.0, 10127.75], [1318.0, 8750.666666666666], [1314.0, 9147.666666666666], [1310.0, 9187.25], [1286.0, 9294.333333333334], [1282.0, 14488.0], [1294.0, 10010.0], [1290.0, 7330.75], [1306.0, 9125.333333333334], [1302.0, 9574.333333333334], [1298.0, 9252.0], [1402.0, 8603.5], [1382.0, 9959.0], [1406.0, 8451.333333333334], [1378.0, 8239.0], [1386.0, 11950.0], [1398.0, 7912.0], [1394.0, 9171.0], [1374.0, 8678.333333333334], [1350.0, 9287.666666666666], [1346.0, 7682.25], [1358.0, 8958.0], [1354.0, 8997.0], [1370.0, 8570.5], [1366.0, 9374.0], [1362.0, 8559.333333333334], [1390.0, 8945.5], [1466.0, 7054.666666666667], [1470.0, 8660.0], [1442.0, 4739.25], [1446.0, 7142.666666666667], [1450.0, 6725.5], [1462.0, 7444.333333333333], [1458.0, 7470.666666666667], [1438.0, 7385.666666666667], [1410.0, 8216.666666666666], [1414.0, 7446.666666666667], [1418.0, 7506.666666666667], [1422.0, 7156.666666666667], [1434.0, 8893.5], [1430.0, 7957.666666666667], [1426.0, 7362.666666666667], [1454.0, 6997.0], [1530.0, 7287.5], [1534.0, 6428.333333333333], [1506.0, 6563.333333333333], [1510.0, 6740.666666666667], [1526.0, 6988.666666666667], [1522.0, 6980.333333333333], [1486.0, 7457.0], [1482.0, 7278.333333333333], [1478.0, 7235.333333333333], [1474.0, 6502.666666666666], [1502.0, 7001.666666666667], [1498.0, 6648.666666666667], [1494.0, 5587.2], [1490.0, 6890.0], [1514.0, 6058.0], [1518.0, 5075.5], [1594.0, 5000.75], [1598.0, 5916.333333333333], [1570.0, 4329.5], [1574.0, 5781.666666666667], [1578.0, 5455.5], [1590.0, 4962.25], [1586.0, 4725.5], [1566.0, 5592.666666666667], [1538.0, 6647.666666666667], [1542.0, 6659.5], [1546.0, 6843.5], [1550.0, 4938.0], [1562.0, 6466.666666666667], [1558.0, 6297.666666666667], [1554.0, 6244.333333333333], [1582.0, 4562.5], [1654.0, 5076.333333333333], [1662.0, 4886.333333333333], [1634.0, 5022.5], [1638.0, 3488.5], [1658.0, 4304.333333333333], [1650.0, 5369.666666666667], [1630.0, 5561.666666666667], [1602.0, 6222.25], [1606.0, 5741.333333333333], [1610.0, 5532.0], [1614.0, 5739.666666666667], [1626.0, 3424.2], [1622.0, 4889.75], [1618.0, 5507.666666666667], [1642.0, 5465.5], [1646.0, 3106.6666666666665], [1722.0, 3469.25], [1726.0, 4934.5], [1698.0, 4516.666666666667], [1702.0, 4628.666666666667], [1706.0, 3434.0], [1718.0, 4465.0], [1714.0, 4456.333333333333], [1694.0, 4282.666666666667], [1666.0, 4835.666666666667], [1670.0, 4703.333333333333], [1674.0, 4623.0], [1678.0, 4967.0], [1690.0, 3650.5], [1686.0, 4507.333333333333], [1682.0, 3985.25], [1710.0, 4285.0], [1782.0, 3407.0], [1778.0, 3048.75], [1790.0, 3455.3333333333335], [1762.0, 4095.5], [1766.0, 3457.75], [1770.0, 2804.0], [1786.0, 3982.8333333333335], [1742.0, 3676.3333333333335], [1738.0, 3880.3333333333335], [1734.0, 4118.0], [1730.0, 3499.0], [1758.0, 3188.75], [1754.0, 4225.5], [1750.0, 4062.0], [1746.0, 3454.6666666666665], [1774.0, 4022.25], [1850.0, 3102.5], [1854.0, 4158.0], [1826.0, 3381.0], [1830.0, 3511.0], [1834.0, 2848.0], [1846.0, 2867.5], [1842.0, 2651.6666666666665], [1822.0, 2750.0], [1794.0, 3173.6666666666665], [1798.0, 3340.6666666666665], [1802.0, 3039.6666666666665], [1806.0, 3302.6666666666665], [1818.0, 2918.6666666666665], [1810.0, 3181.0], [1814.0, 1923.0], [1838.0, 3212.5], [1906.0, 3440.0], [1918.0, 3514.0], [1890.0, 3588.0], [1894.0, 3378.0], [1898.0, 3350.0], [1910.0, 3511.0], [1870.0, 4107.0], [1862.0, 3042.5], [1858.0, 3019.0], [1886.0, 3784.0], [1878.0, 3946.0], [1874.0, 3837.0], [1902.0, 3745.0], [1926.0, 3270.0], [1922.0, 3329.0], [1930.0, 2916.0], [1934.0, 3139.0], [1950.0, 2653.0], [1946.0, 2713.0], [1942.0, 2909.0], [1938.0, 2640.0], [1982.0, 2073.0], [1954.0, 2770.0], [1958.0, 2544.0], [1962.0, 2561.0], [1966.0, 2523.0], [1978.0, 2250.0], [1974.0, 2371.0], [1970.0, 2468.0], [1998.0, 1951.0], [1994.0, 2097.0], [1990.0, 1946.0], [1986.0, 2208.0], [1039.0, 9547.0], [1031.0, 9593.2], [1027.0, 9896.0], [1055.0, 13810.5], [1051.0, 12521.333333333334], [1035.0, 9864.5], [1043.0, 7764.4], [1047.0, 5177.0], [1087.0, 11992.333333333334], [1063.0, 12415.333333333334], [1059.0, 13651.5], [1071.0, 11821.666666666666], [1067.0, 5887.0], [1083.0, 13439.5], [1075.0, 12239.666666666666], [1079.0, 9369.0], [1147.0, 11209.0], [1151.0, 10155.4], [1143.0, 11537.0], [1139.0, 8506.25], [1135.0, 13102.0], [1131.0, 11375.666666666666], [1127.0, 11120.666666666666], [1123.0, 11078.0], [1119.0, 12728.5], [1095.0, 11574.666666666666], [1091.0, 13560.166666666666], [1103.0, 11867.666666666666], [1099.0, 9080.0], [1115.0, 11732.333333333334], [1111.0, 11764.0], [1107.0, 13320.5], [1207.0, 10546.0], [1211.0, 11841.0], [1203.0, 11853.25], [1167.0, 11673.8], [1163.0, 11201.666666666666], [1159.0, 10653.0], [1155.0, 11800.6], [1195.0, 10925.333333333334], [1199.0, 8223.25], [1191.0, 10581.0], [1187.0, 10678.0], [1215.0, 7698.428571428572], [1183.0, 10618.0], [1179.0, 10719.0], [1171.0, 10285.666666666666], [1275.0, 8943.0], [1279.0, 9903.333333333334], [1271.0, 9592.666666666666], [1267.0, 10127.666666666666], [1263.0, 9963.0], [1259.0, 10749.0], [1255.0, 7306.5], [1251.0, 4947.333333333333], [1247.0, 8970.0], [1223.0, 9801.4], [1219.0, 7629.0], [1231.0, 11572.25], [1227.0, 6036.75], [1243.0, 9833.0], [1239.0, 11060.0], [1235.0, 10264.0], [1339.0, 8549.5], [1343.0, 8821.0], [1335.0, 8955.5], [1331.0, 8616.0], [1327.0, 8630.666666666666], [1323.0, 9013.666666666666], [1319.0, 7104.75], [1315.0, 10452.0], [1311.0, 9668.0], [1283.0, 8538.6], [1287.0, 7347.5], [1295.0, 8901.333333333334], [1291.0, 9853.0], [1307.0, 9568.666666666666], [1303.0, 9357.333333333334], [1299.0, 9392.666666666666], [1403.0, 6747.0], [1383.0, 7535.0], [1407.0, 8888.5], [1379.0, 7981.0], [1387.0, 7442.0], [1399.0, 8699.0], [1395.0, 8052.5], [1371.0, 8524.333333333334], [1347.0, 6914.25], [1351.0, 6101.0], [1375.0, 4095.25], [1359.0, 7783.0], [1355.0, 8272.666666666666], [1367.0, 8251.0], [1363.0, 8342.0], [1391.0, 7896.5], [1467.0, 6996.666666666667], [1471.0, 7139.666666666667], [1443.0, 8599.75], [1447.0, 7311.666666666667], [1451.0, 6557.0], [1463.0, 7463.0], [1459.0, 8417.0], [1439.0, 7375.0], [1411.0, 9126.0], [1415.0, 6611.5], [1423.0, 8139.0], [1419.0, 6673.0], [1435.0, 5554.0], [1431.0, 8014.0], [1427.0, 5940.75], [1455.0, 7857.333333333333], [1531.0, 5614.25], [1535.0, 6526.333333333333], [1507.0, 6637.0], [1511.0, 5196.5], [1515.0, 6853.0], [1527.0, 6008.0], [1523.0, 6507.0], [1503.0, 6323.333333333333], [1475.0, 7224.333333333333], [1479.0, 7181.0], [1483.0, 8083.0], [1487.0, 5518.0], [1499.0, 5147.333333333333], [1495.0, 7424.0], [1491.0, 6826.333333333333], [1519.0, 7518.0], [1595.0, 5318.666666666667], [1599.0, 6055.333333333333], [1571.0, 5789.8], [1575.0, 5890.333333333333], [1579.0, 5730.666666666667], [1591.0, 4970.666666666667], [1587.0, 5973.666666666667], [1567.0, 6388.666666666667], [1539.0, 6326.666666666667], [1543.0, 7374.0], [1547.0, 6511.0], [1551.0, 6049.0], [1563.0, 5816.333333333333], [1559.0, 6272.0], [1555.0, 6613.0], [1583.0, 5996.333333333333], [1659.0, 3533.5], [1663.0, 5215.666666666667], [1635.0, 4610.333333333333], [1639.0, 5568.0], [1643.0, 4827.333333333333], [1655.0, 3613.8], [1651.0, 4099.0], [1631.0, 5536.5], [1603.0, 4496.5], [1607.0, 3806.4], [1611.0, 4779.0], [1615.0, 4414.5], [1627.0, 5513.0], [1623.0, 4658.0], [1619.0, 6203.0], [1647.0, 5707.5], [1723.0, 3872.6666666666665], [1727.0, 3515.25], [1699.0, 4572.333333333333], [1703.0, 4378.333333333333], [1719.0, 4811.5], [1715.0, 3757.0], [1695.0, 4324.666666666667], [1667.0, 4207.0], [1671.0, 4888.333333333333], [1675.0, 4348.333333333333], [1679.0, 3488.0], [1691.0, 3913.6666666666665], [1687.0, 4859.0], [1683.0, 4813.666666666667], [1707.0, 4216.666666666667], [1711.0, 3187.5], [1783.0, 2511.0], [1779.0, 3420.6666666666665], [1791.0, 2900.25], [1763.0, 3530.5], [1767.0, 3869.3333333333335], [1787.0, 4128.5], [1743.0, 3707.0], [1739.0, 4313.0], [1735.0, 4195.666666666667], [1731.0, 3905.6666666666665], [1759.0, 3707.6666666666665], [1751.0, 2657.625], [1755.0, 2630.3333333333335], [1747.0, 3365.3333333333335], [1775.0, 3652.0], [1771.0, 3387.3333333333335], [1851.0, 3007.5], [1855.0, 2705.0], [1827.0, 3282.0], [1831.0, 3422.0], [1835.0, 3249.0], [1847.0, 3060.5], [1843.0, 3300.5], [1823.0, 2897.0], [1795.0, 3334.6666666666665], [1799.0, 3089.3333333333335], [1803.0, 3051.3333333333335], [1807.0, 3106.3333333333335], [1819.0, 2889.0], [1815.0, 3201.5], [1811.0, 3026.0], [1839.0, 3059.0], [1887.0, 3910.0], [1883.0, 3837.6666666666665], [1879.0, 4071.0], [1875.0, 3984.0], [1859.0, 3043.0], [1863.0, 3078.0], [1867.0, 4141.5], [1871.0, 3587.0], [1919.0, 3093.0], [1891.0, 3850.0], [1895.0, 3748.0], [1899.0, 3727.0], [1903.0, 3711.0], [1915.0, 3200.5], [1911.0, 3597.0], [1907.0, 3344.0], [1979.0, 2391.0], [1983.0, 2269.0], [1955.0, 2653.0], [1959.0, 2570.0], [1963.0, 2439.0], [1975.0, 2388.0], [1971.0, 2492.0], [1951.0, 2860.0], [1923.0, 3273.0], [1927.0, 3262.0], [1931.0, 3013.0], [1947.0, 2887.0], [1943.0, 2574.0], [1939.0, 2983.0], [1967.0, 2568.0], [1995.0, 2116.0], [1991.0, 2186.0], [1987.0, 2199.0], [1.0, 17564.6]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[637.7010000000049, 6990.656916666677]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1998.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 35438.8, "minX": 1.63143408E12, "maxY": 171972.76666666666, "series": [{"data": [[1.63143414E12, 171972.76666666666], [1.63143408E12, 142517.53333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63143414E12, 35438.8], [1.63143408E12, 56112.683333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63143414E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 4016.853477468094, "minX": 1.63143408E12, "maxY": 12273.596020360956, "series": [{"data": [[1.63143414E12, 12273.596020360956], [1.63143408E12, 4016.853477468094]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63143414E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 4005.6099244594952, "minX": 1.63143408E12, "maxY": 12238.12424803334, "series": [{"data": [[1.63143414E12, 12238.12424803334], [1.63143408E12, 4005.6099244594952]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63143414E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 76.32313102370398, "minX": 1.63143408E12, "maxY": 255.45048588616393, "series": [{"data": [[1.63143414E12, 255.45048588616393], [1.63143408E12, 76.32313102370398]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63143414E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.63143408E12, "maxY": 40578.0, "series": [{"data": [[1.63143414E12, 40578.0], [1.63143408E12, 32152.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63143414E12, 20805.700000000004], [1.63143408E12, 17328.70000000002]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63143414E12, 38322.77], [1.63143408E12, 30675.52]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63143414E12, 34685.89999999996], [1.63143408E12, 24810.94999999997]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63143414E12, 129.0], [1.63143408E12, 20.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63143414E12, 11019.5], [1.63143408E12, 493.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63143414E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 32569.0, "series": [{"data": [[2.0, 1871.5], [567.0, 300.0], [580.0, 123.0], [955.0, 319.0], [929.0, 27.0], [1002.0, 27.0], [18.0, 379.0], [35.0, 32569.0], [38.0, 12589.0], [43.0, 21563.0], [45.0, 24808.0], [44.0, 31777.5], [47.0, 28844.0], [46.0, 30687.0], [48.0, 27169.0], [49.0, 17713.0], [50.0, 15303.5], [51.0, 19715.0], [53.0, 6098.0], [52.0, 31674.5], [54.0, 10043.5], [55.0, 12877.5], [59.0, 5275.0], [61.0, 3353.0], [66.0, 16750.0], [69.0, 27.0], [70.0, 4161.0], [71.0, 15605.0], [79.0, 11815.5], [81.0, 14087.0], [82.0, 14339.0], [83.0, 6272.0], [80.0, 9464.5], [86.0, 16409.0], [84.0, 14492.0], [87.0, 9579.0], [85.0, 15564.0], [89.0, 7697.0], [91.0, 11323.5], [90.0, 21254.0], [95.0, 11058.0], [94.0, 9202.5], [93.0, 11283.0], [97.0, 5267.0], [99.0, 7011.0], [100.0, 8347.5], [102.0, 8041.0], [104.0, 4332.0], [106.0, 9149.0], [115.0, 3506.5], [153.0, 2786.0], [1.0, 11711.5], [410.0, 751.5], [417.0, 1328.0], [433.0, 1886.0], [484.0, 676.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1002.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 27.0, "minX": 1.0, "maxY": 32556.0, "series": [{"data": [[2.0, 1871.5], [567.0, 300.0], [580.0, 123.0], [955.0, 319.0], [929.0, 27.0], [1002.0, 27.0], [18.0, 379.0], [35.0, 32556.0], [38.0, 12501.5], [43.0, 21552.0], [45.0, 24766.5], [44.0, 31682.5], [47.0, 28815.0], [46.0, 30672.5], [48.0, 27169.0], [49.0, 17672.0], [50.0, 15127.0], [51.0, 19715.0], [53.0, 5973.0], [52.0, 31674.5], [54.0, 10043.5], [55.0, 12766.0], [59.0, 5147.0], [61.0, 3332.0], [66.0, 16639.0], [69.0, 27.0], [70.0, 4144.0], [71.0, 15569.0], [79.0, 11731.0], [81.0, 14014.0], [82.0, 14288.5], [83.0, 6272.0], [80.0, 9297.5], [86.0, 16409.0], [84.0, 14478.5], [87.0, 9480.0], [85.0, 15534.5], [89.0, 7697.0], [91.0, 11273.5], [90.0, 21245.5], [95.0, 11051.5], [94.0, 9196.5], [93.0, 11062.5], [97.0, 5175.0], [99.0, 6993.0], [100.0, 8319.0], [102.0, 7994.5], [104.0, 4239.0], [106.0, 9123.0], [115.0, 3267.0], [153.0, 2786.0], [1.0, 11711.5], [410.0, 751.5], [417.0, 1328.0], [433.0, 1886.0], [484.0, 676.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1002.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 66.66666666666667, "minX": 1.63143408E12, "maxY": 133.33333333333334, "series": [{"data": [[1.63143414E12, 66.66666666666667], [1.63143408E12, 133.33333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63143414E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 72.03333333333333, "minX": 1.63143408E12, "maxY": 127.96666666666667, "series": [{"data": [[1.63143414E12, 72.03333333333333], [1.63143408E12, 127.96666666666667]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63143414E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 72.03333333333333, "minX": 1.63143408E12, "maxY": 127.96666666666667, "series": [{"data": [[1.63143414E12, 72.03333333333333], [1.63143408E12, 127.96666666666667]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63143414E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 72.03333333333333, "minX": 1.63143408E12, "maxY": 127.96666666666667, "series": [{"data": [[1.63143414E12, 72.03333333333333], [1.63143408E12, 127.96666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63143414E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

