/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 17.0, "minX": 0.0, "maxY": 112239.0, "series": [{"data": [[0.0, 17.0], [0.1, 17.0], [0.2, 18.0], [0.3, 18.0], [0.4, 18.0], [0.5, 18.0], [0.6, 18.0], [0.7, 18.0], [0.8, 18.0], [0.9, 18.0], [1.0, 18.0], [1.1, 18.0], [1.2, 18.0], [1.3, 18.0], [1.4, 18.0], [1.5, 19.0], [1.6, 19.0], [1.7, 19.0], [1.8, 19.0], [1.9, 19.0], [2.0, 19.0], [2.1, 19.0], [2.2, 19.0], [2.3, 19.0], [2.4, 19.0], [2.5, 19.0], [2.6, 19.0], [2.7, 19.0], [2.8, 19.0], [2.9, 19.0], [3.0, 19.0], [3.1, 19.0], [3.2, 19.0], [3.3, 19.0], [3.4, 19.0], [3.5, 19.0], [3.6, 19.0], [3.7, 19.0], [3.8, 19.0], [3.9, 20.0], [4.0, 20.0], [4.1, 20.0], [4.2, 20.0], [4.3, 20.0], [4.4, 20.0], [4.5, 20.0], [4.6, 20.0], [4.7, 20.0], [4.8, 20.0], [4.9, 20.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 20.0], [5.5, 20.0], [5.6, 20.0], [5.7, 20.0], [5.8, 20.0], [5.9, 20.0], [6.0, 20.0], [6.1, 20.0], [6.2, 20.0], [6.3, 20.0], [6.4, 20.0], [6.5, 21.0], [6.6, 21.0], [6.7, 21.0], [6.8, 21.0], [6.9, 21.0], [7.0, 21.0], [7.1, 21.0], [7.2, 21.0], [7.3, 21.0], [7.4, 21.0], [7.5, 21.0], [7.6, 21.0], [7.7, 21.0], [7.8, 21.0], [7.9, 21.0], [8.0, 21.0], [8.1, 21.0], [8.2, 21.0], [8.3, 21.0], [8.4, 21.0], [8.5, 22.0], [8.6, 22.0], [8.7, 22.0], [8.8, 22.0], [8.9, 22.0], [9.0, 22.0], [9.1, 22.0], [9.2, 22.0], [9.3, 23.0], [9.4, 23.0], [9.5, 23.0], [9.6, 23.0], [9.7, 23.0], [9.8, 23.0], [9.9, 24.0], [10.0, 24.0], [10.1, 24.0], [10.2, 24.0], [10.3, 25.0], [10.4, 25.0], [10.5, 26.0], [10.6, 27.0], [10.7, 28.0], [10.8, 29.0], [10.9, 29.0], [11.0, 30.0], [11.1, 30.0], [11.2, 31.0], [11.3, 31.0], [11.4, 31.0], [11.5, 31.0], [11.6, 32.0], [11.7, 33.0], [11.8, 33.0], [11.9, 34.0], [12.0, 34.0], [12.1, 35.0], [12.2, 35.0], [12.3, 35.0], [12.4, 36.0], [12.5, 36.0], [12.6, 36.0], [12.7, 36.0], [12.8, 36.0], [12.9, 37.0], [13.0, 37.0], [13.1, 37.0], [13.2, 37.0], [13.3, 37.0], [13.4, 37.0], [13.5, 37.0], [13.6, 37.0], [13.7, 38.0], [13.8, 38.0], [13.9, 38.0], [14.0, 38.0], [14.1, 38.0], [14.2, 38.0], [14.3, 38.0], [14.4, 38.0], [14.5, 38.0], [14.6, 39.0], [14.7, 39.0], [14.8, 39.0], [14.9, 39.0], [15.0, 39.0], [15.1, 39.0], [15.2, 39.0], [15.3, 39.0], [15.4, 39.0], [15.5, 39.0], [15.6, 39.0], [15.7, 40.0], [15.8, 40.0], [15.9, 40.0], [16.0, 40.0], [16.1, 40.0], [16.2, 40.0], [16.3, 40.0], [16.4, 40.0], [16.5, 40.0], [16.6, 41.0], [16.7, 41.0], [16.8, 41.0], [16.9, 41.0], [17.0, 41.0], [17.1, 41.0], [17.2, 41.0], [17.3, 41.0], [17.4, 41.0], [17.5, 41.0], [17.6, 41.0], [17.7, 41.0], [17.8, 42.0], [17.9, 42.0], [18.0, 42.0], [18.1, 42.0], [18.2, 42.0], [18.3, 42.0], [18.4, 42.0], [18.5, 42.0], [18.6, 42.0], [18.7, 43.0], [18.8, 43.0], [18.9, 43.0], [19.0, 43.0], [19.1, 43.0], [19.2, 43.0], [19.3, 43.0], [19.4, 43.0], [19.5, 43.0], [19.6, 43.0], [19.7, 44.0], [19.8, 44.0], [19.9, 44.0], [20.0, 44.0], [20.1, 44.0], [20.2, 44.0], [20.3, 45.0], [20.4, 45.0], [20.5, 45.0], [20.6, 45.0], [20.7, 45.0], [20.8, 45.0], [20.9, 46.0], [21.0, 46.0], [21.1, 46.0], [21.2, 46.0], [21.3, 46.0], [21.4, 47.0], [21.5, 47.0], [21.6, 47.0], [21.7, 47.0], [21.8, 48.0], [21.9, 48.0], [22.0, 48.0], [22.1, 48.0], [22.2, 49.0], [22.3, 49.0], [22.4, 49.0], [22.5, 49.0], [22.6, 50.0], [22.7, 50.0], [22.8, 50.0], [22.9, 50.0], [23.0, 51.0], [23.1, 51.0], [23.2, 51.0], [23.3, 52.0], [23.4, 52.0], [23.5, 52.0], [23.6, 53.0], [23.7, 53.0], [23.8, 53.0], [23.9, 53.0], [24.0, 53.0], [24.1, 54.0], [24.2, 54.0], [24.3, 54.0], [24.4, 55.0], [24.5, 55.0], [24.6, 55.0], [24.7, 56.0], [24.8, 56.0], [24.9, 56.0], [25.0, 57.0], [25.1, 57.0], [25.2, 57.0], [25.3, 58.0], [25.4, 58.0], [25.5, 59.0], [25.6, 59.0], [25.7, 59.0], [25.8, 60.0], [25.9, 60.0], [26.0, 61.0], [26.1, 61.0], [26.2, 62.0], [26.3, 63.0], [26.4, 63.0], [26.5, 64.0], [26.6, 65.0], [26.7, 66.0], [26.8, 67.0], [26.9, 69.0], [27.0, 70.0], [27.1, 70.0], [27.2, 72.0], [27.3, 73.0], [27.4, 74.0], [27.5, 76.0], [27.6, 78.0], [27.7, 80.0], [27.8, 81.0], [27.9, 84.0], [28.0, 86.0], [28.1, 89.0], [28.2, 92.0], [28.3, 96.0], [28.4, 100.0], [28.5, 107.0], [28.6, 112.0], [28.7, 117.0], [28.8, 125.0], [28.9, 133.0], [29.0, 140.0], [29.1, 148.0], [29.2, 155.0], [29.3, 166.0], [29.4, 172.0], [29.5, 188.0], [29.6, 233.0], [29.7, 262.0], [29.8, 280.0], [29.9, 291.0], [30.0, 307.0], [30.1, 319.0], [30.2, 329.0], [30.3, 335.0], [30.4, 347.0], [30.5, 363.0], [30.6, 377.0], [30.7, 392.0], [30.8, 413.0], [30.9, 427.0], [31.0, 445.0], [31.1, 460.0], [31.2, 473.0], [31.3, 493.0], [31.4, 503.0], [31.5, 510.0], [31.6, 514.0], [31.7, 519.0], [31.8, 522.0], [31.9, 526.0], [32.0, 531.0], [32.1, 538.0], [32.2, 544.0], [32.3, 553.0], [32.4, 565.0], [32.5, 578.0], [32.6, 602.0], [32.7, 616.0], [32.8, 633.0], [32.9, 650.0], [33.0, 677.0], [33.1, 703.0], [33.2, 722.0], [33.3, 734.0], [33.4, 749.0], [33.5, 760.0], [33.6, 775.0], [33.7, 789.0], [33.8, 806.0], [33.9, 820.0], [34.0, 836.0], [34.1, 851.0], [34.2, 867.0], [34.3, 881.0], [34.4, 894.0], [34.5, 909.0], [34.6, 915.0], [34.7, 926.0], [34.8, 934.0], [34.9, 940.0], [35.0, 950.0], [35.1, 958.0], [35.2, 972.0], [35.3, 980.0], [35.4, 990.0], [35.5, 1003.0], [35.6, 1016.0], [35.7, 1026.0], [35.8, 1035.0], [35.9, 1044.0], [36.0, 1055.0], [36.1, 1064.0], [36.2, 1072.0], [36.3, 1078.0], [36.4, 1084.0], [36.5, 1088.0], [36.6, 1093.0], [36.7, 1096.0], [36.8, 1101.0], [36.9, 1106.0], [37.0, 1116.0], [37.1, 1122.0], [37.2, 1128.0], [37.3, 1138.0], [37.4, 1144.0], [37.5, 1148.0], [37.6, 1154.0], [37.7, 1160.0], [37.8, 1166.0], [37.9, 1171.0], [38.0, 1182.0], [38.1, 1191.0], [38.2, 1202.0], [38.3, 1210.0], [38.4, 1215.0], [38.5, 1225.0], [38.6, 1237.0], [38.7, 1243.0], [38.8, 1254.0], [38.9, 1263.0], [39.0, 1271.0], [39.1, 1279.0], [39.2, 1289.0], [39.3, 1294.0], [39.4, 1305.0], [39.5, 1312.0], [39.6, 1321.0], [39.7, 1330.0], [39.8, 1340.0], [39.9, 1345.0], [40.0, 1352.0], [40.1, 1359.0], [40.2, 1364.0], [40.3, 1368.0], [40.4, 1373.0], [40.5, 1379.0], [40.6, 1388.0], [40.7, 1394.0], [40.8, 1402.0], [40.9, 1407.0], [41.0, 1412.0], [41.1, 1421.0], [41.2, 1428.0], [41.3, 1432.0], [41.4, 1441.0], [41.5, 1447.0], [41.6, 1452.0], [41.7, 1457.0], [41.8, 1462.0], [41.9, 1465.0], [42.0, 1469.0], [42.1, 1476.0], [42.2, 1480.0], [42.3, 1485.0], [42.4, 1492.0], [42.5, 1496.0], [42.6, 1502.0], [42.7, 1508.0], [42.8, 1514.0], [42.9, 1521.0], [43.0, 1527.0], [43.1, 1533.0], [43.2, 1541.0], [43.3, 1547.0], [43.4, 1551.0], [43.5, 1556.0], [43.6, 1560.0], [43.7, 1566.0], [43.8, 1571.0], [43.9, 1575.0], [44.0, 1582.0], [44.1, 1587.0], [44.2, 1598.0], [44.3, 1608.0], [44.4, 1615.0], [44.5, 1621.0], [44.6, 1630.0], [44.7, 1639.0], [44.8, 1645.0], [44.9, 1656.0], [45.0, 1661.0], [45.1, 1668.0], [45.2, 1677.0], [45.3, 1687.0], [45.4, 1695.0], [45.5, 1710.0], [45.6, 1718.0], [45.7, 1725.0], [45.8, 1738.0], [45.9, 1750.0], [46.0, 1756.0], [46.1, 1764.0], [46.2, 1771.0], [46.3, 1778.0], [46.4, 1786.0], [46.5, 1793.0], [46.6, 1801.0], [46.7, 1816.0], [46.8, 1830.0], [46.9, 1857.0], [47.0, 1870.0], [47.1, 1887.0], [47.2, 1913.0], [47.3, 1951.0], [47.4, 1971.0], [47.5, 1991.0], [47.6, 2012.0], [47.7, 2024.0], [47.8, 2042.0], [47.9, 2057.0], [48.0, 2072.0], [48.1, 2086.0], [48.2, 2100.0], [48.3, 2113.0], [48.4, 2130.0], [48.5, 2149.0], [48.6, 2167.0], [48.7, 2184.0], [48.8, 2208.0], [48.9, 2223.0], [49.0, 2237.0], [49.1, 2265.0], [49.2, 2289.0], [49.3, 2314.0], [49.4, 2338.0], [49.5, 2356.0], [49.6, 2387.0], [49.7, 2404.0], [49.8, 2442.0], [49.9, 2470.0], [50.0, 2488.0], [50.1, 2519.0], [50.2, 2552.0], [50.3, 2580.0], [50.4, 2599.0], [50.5, 2635.0], [50.6, 2669.0], [50.7, 2698.0], [50.8, 2724.0], [50.9, 2760.0], [51.0, 2784.0], [51.1, 2801.0], [51.2, 2811.0], [51.3, 2829.0], [51.4, 2841.0], [51.5, 2851.0], [51.6, 2864.0], [51.7, 2876.0], [51.8, 2891.0], [51.9, 2900.0], [52.0, 2910.0], [52.1, 2917.0], [52.2, 2923.0], [52.3, 2931.0], [52.4, 2938.0], [52.5, 2949.0], [52.6, 2958.0], [52.7, 2967.0], [52.8, 2985.0], [52.9, 2999.0], [53.0, 3013.0], [53.1, 3019.0], [53.2, 3035.0], [53.3, 3045.0], [53.4, 3057.0], [53.5, 3068.0], [53.6, 3085.0], [53.7, 3097.0], [53.8, 3116.0], [53.9, 3123.0], [54.0, 3138.0], [54.1, 3154.0], [54.2, 3164.0], [54.3, 3183.0], [54.4, 3196.0], [54.5, 3213.0], [54.6, 3230.0], [54.7, 3242.0], [54.8, 3257.0], [54.9, 3272.0], [55.0, 3286.0], [55.1, 3293.0], [55.2, 3304.0], [55.3, 3315.0], [55.4, 3325.0], [55.5, 3335.0], [55.6, 3351.0], [55.7, 3362.0], [55.8, 3372.0], [55.9, 3387.0], [56.0, 3404.0], [56.1, 3417.0], [56.2, 3434.0], [56.3, 3452.0], [56.4, 3475.0], [56.5, 3499.0], [56.6, 3527.0], [56.7, 3547.0], [56.8, 3575.0], [56.9, 3601.0], [57.0, 3619.0], [57.1, 3636.0], [57.2, 3664.0], [57.3, 3684.0], [57.4, 3713.0], [57.5, 3726.0], [57.6, 3735.0], [57.7, 3748.0], [57.8, 3760.0], [57.9, 3771.0], [58.0, 3783.0], [58.1, 3797.0], [58.2, 3809.0], [58.3, 3818.0], [58.4, 3840.0], [58.5, 3849.0], [58.6, 3868.0], [58.7, 3876.0], [58.8, 3888.0], [58.9, 3895.0], [59.0, 3907.0], [59.1, 3921.0], [59.2, 3935.0], [59.3, 3949.0], [59.4, 3959.0], [59.5, 3970.0], [59.6, 3982.0], [59.7, 3995.0], [59.8, 4008.0], [59.9, 4020.0], [60.0, 4034.0], [60.1, 4049.0], [60.2, 4065.0], [60.3, 4080.0], [60.4, 4097.0], [60.5, 4113.0], [60.6, 4122.0], [60.7, 4138.0], [60.8, 4157.0], [60.9, 4168.0], [61.0, 4180.0], [61.1, 4195.0], [61.2, 4207.0], [61.3, 4218.0], [61.4, 4227.0], [61.5, 4239.0], [61.6, 4254.0], [61.7, 4265.0], [61.8, 4273.0], [61.9, 4288.0], [62.0, 4302.0], [62.1, 4319.0], [62.2, 4332.0], [62.3, 4344.0], [62.4, 4357.0], [62.5, 4368.0], [62.6, 4377.0], [62.7, 4390.0], [62.8, 4403.0], [62.9, 4422.0], [63.0, 4442.0], [63.1, 4457.0], [63.2, 4467.0], [63.3, 4480.0], [63.4, 4485.0], [63.5, 4499.0], [63.6, 4504.0], [63.7, 4511.0], [63.8, 4519.0], [63.9, 4526.0], [64.0, 4531.0], [64.1, 4538.0], [64.2, 4547.0], [64.3, 4553.0], [64.4, 4563.0], [64.5, 4567.0], [64.6, 4575.0], [64.7, 4580.0], [64.8, 4586.0], [64.9, 4598.0], [65.0, 4607.0], [65.1, 4617.0], [65.2, 4623.0], [65.3, 4635.0], [65.4, 4641.0], [65.5, 4649.0], [65.6, 4660.0], [65.7, 4669.0], [65.8, 4678.0], [65.9, 4688.0], [66.0, 4695.0], [66.1, 4704.0], [66.2, 4709.0], [66.3, 4713.0], [66.4, 4720.0], [66.5, 4727.0], [66.6, 4735.0], [66.7, 4741.0], [66.8, 4748.0], [66.9, 4755.0], [67.0, 4765.0], [67.1, 4778.0], [67.2, 4785.0], [67.3, 4799.0], [67.4, 4811.0], [67.5, 4828.0], [67.6, 4837.0], [67.7, 4842.0], [67.8, 4853.0], [67.9, 4860.0], [68.0, 4879.0], [68.1, 4887.0], [68.2, 4901.0], [68.3, 4909.0], [68.4, 4924.0], [68.5, 4942.0], [68.6, 4961.0], [68.7, 4983.0], [68.8, 4998.0], [68.9, 5011.0], [69.0, 5025.0], [69.1, 5038.0], [69.2, 5050.0], [69.3, 5062.0], [69.4, 5079.0], [69.5, 5097.0], [69.6, 5122.0], [69.7, 5152.0], [69.8, 5169.0], [69.9, 5192.0], [70.0, 5207.0], [70.1, 5219.0], [70.2, 5238.0], [70.3, 5252.0], [70.4, 5267.0], [70.5, 5277.0], [70.6, 5297.0], [70.7, 5317.0], [70.8, 5348.0], [70.9, 5380.0], [71.0, 5403.0], [71.1, 5435.0], [71.2, 5465.0], [71.3, 5497.0], [71.4, 5557.0], [71.5, 5590.0], [71.6, 5660.0], [71.7, 5693.0], [71.8, 5730.0], [71.9, 5757.0], [72.0, 5806.0], [72.1, 5864.0], [72.2, 5901.0], [72.3, 5969.0], [72.4, 6032.0], [72.5, 6083.0], [72.6, 6117.0], [72.7, 6165.0], [72.8, 6225.0], [72.9, 6260.0], [73.0, 6363.0], [73.1, 6466.0], [73.2, 6531.0], [73.3, 6605.0], [73.4, 6666.0], [73.5, 6744.0], [73.6, 6910.0], [73.7, 7091.0], [73.8, 7437.0], [73.9, 7654.0], [74.0, 7896.0], [74.1, 8187.0], [74.2, 8467.0], [74.3, 8767.0], [74.4, 9029.0], [74.5, 9202.0], [74.6, 9473.0], [74.7, 9794.0], [74.8, 10116.0], [74.9, 10733.0], [75.0, 11452.0], [75.1, 11874.0], [75.2, 12343.0], [75.3, 12725.0], [75.4, 13073.0], [75.5, 13397.0], [75.6, 13582.0], [75.7, 13817.0], [75.8, 14037.0], [75.9, 14404.0], [76.0, 14677.0], [76.1, 14891.0], [76.2, 15162.0], [76.3, 15376.0], [76.4, 15652.0], [76.5, 15889.0], [76.6, 16220.0], [76.7, 16364.0], [76.8, 16655.0], [76.9, 16763.0], [77.0, 16948.0], [77.1, 17234.0], [77.2, 17536.0], [77.3, 17735.0], [77.4, 17834.0], [77.5, 17996.0], [77.6, 18117.0], [77.7, 18233.0], [77.8, 18403.0], [77.9, 18653.0], [78.0, 18769.0], [78.1, 18942.0], [78.2, 19155.0], [78.3, 19295.0], [78.4, 19538.0], [78.5, 19678.0], [78.6, 19837.0], [78.7, 20050.0], [78.8, 20247.0], [78.9, 20386.0], [79.0, 20519.0], [79.1, 20644.0], [79.2, 20778.0], [79.3, 20914.0], [79.4, 21002.0], [79.5, 21002.0], [79.6, 21002.0], [79.7, 21003.0], [79.8, 21003.0], [79.9, 21003.0], [80.0, 21004.0], [80.1, 21004.0], [80.2, 21004.0], [80.3, 21004.0], [80.4, 21005.0], [80.5, 21005.0], [80.6, 21005.0], [80.7, 21005.0], [80.8, 21005.0], [80.9, 21006.0], [81.0, 21006.0], [81.1, 21006.0], [81.2, 21006.0], [81.3, 21007.0], [81.4, 21007.0], [81.5, 21007.0], [81.6, 21008.0], [81.7, 21009.0], [81.8, 21011.0], [81.9, 21062.0], [82.0, 21174.0], [82.1, 21375.0], [82.2, 21514.0], [82.3, 21641.0], [82.4, 21846.0], [82.5, 22160.0], [82.6, 22502.0], [82.7, 22711.0], [82.8, 23022.0], [82.9, 23195.0], [83.0, 23372.0], [83.1, 23699.0], [83.2, 23993.0], [83.3, 24296.0], [83.4, 24700.0], [83.5, 25021.0], [83.6, 25307.0], [83.7, 25503.0], [83.8, 25680.0], [83.9, 25932.0], [84.0, 26086.0], [84.1, 26290.0], [84.2, 26407.0], [84.3, 26649.0], [84.4, 26832.0], [84.5, 26915.0], [84.6, 27071.0], [84.7, 27169.0], [84.8, 27336.0], [84.9, 27504.0], [85.0, 27582.0], [85.1, 27779.0], [85.2, 27842.0], [85.3, 28004.0], [85.4, 28144.0], [85.5, 28320.0], [85.6, 28457.0], [85.7, 28537.0], [85.8, 28660.0], [85.9, 28833.0], [86.0, 28973.0], [86.1, 29183.0], [86.2, 29296.0], [86.3, 29435.0], [86.4, 29585.0], [86.5, 29713.0], [86.6, 29845.0], [86.7, 30065.0], [86.8, 30293.0], [86.9, 30591.0], [87.0, 30739.0], [87.1, 30949.0], [87.2, 31402.0], [87.3, 31585.0], [87.4, 31803.0], [87.5, 32067.0], [87.6, 32387.0], [87.7, 32604.0], [87.8, 32849.0], [87.9, 33180.0], [88.0, 33575.0], [88.1, 33750.0], [88.2, 34218.0], [88.3, 34472.0], [88.4, 34564.0], [88.5, 34873.0], [88.6, 35439.0], [88.7, 36095.0], [88.8, 36670.0], [88.9, 37249.0], [89.0, 37604.0], [89.1, 38155.0], [89.2, 38428.0], [89.3, 38620.0], [89.4, 39093.0], [89.5, 39434.0], [89.6, 39664.0], [89.7, 39993.0], [89.8, 40429.0], [89.9, 40719.0], [90.0, 41055.0], [90.1, 41212.0], [90.2, 41395.0], [90.3, 41584.0], [90.4, 41830.0], [90.5, 42015.0], [90.6, 42286.0], [90.7, 42614.0], [90.8, 42862.0], [90.9, 43005.0], [91.0, 43210.0], [91.1, 43323.0], [91.2, 43434.0], [91.3, 43557.0], [91.4, 43663.0], [91.5, 43748.0], [91.6, 43808.0], [91.7, 43911.0], [91.8, 43998.0], [91.9, 44062.0], [92.0, 44150.0], [92.1, 44262.0], [92.2, 44319.0], [92.3, 44428.0], [92.4, 44523.0], [92.5, 44582.0], [92.6, 44667.0], [92.7, 44766.0], [92.8, 44873.0], [92.9, 44967.0], [93.0, 45110.0], [93.1, 45233.0], [93.2, 45366.0], [93.3, 45470.0], [93.4, 45559.0], [93.5, 45662.0], [93.6, 45882.0], [93.7, 46047.0], [93.8, 46165.0], [93.9, 46479.0], [94.0, 46890.0], [94.1, 47473.0], [94.2, 48097.0], [94.3, 48602.0], [94.4, 49055.0], [94.5, 49408.0], [94.6, 49776.0], [94.7, 50317.0], [94.8, 50698.0], [94.9, 51294.0], [95.0, 51959.0], [95.1, 54544.0], [95.2, 55775.0], [95.3, 56250.0], [95.4, 57127.0], [95.5, 57915.0], [95.6, 58474.0], [95.7, 58886.0], [95.8, 59676.0], [95.9, 60136.0], [96.0, 60683.0], [96.1, 61170.0], [96.2, 61475.0], [96.3, 62055.0], [96.4, 62335.0], [96.5, 62606.0], [96.6, 62983.0], [96.7, 63383.0], [96.8, 63718.0], [96.9, 64232.0], [97.0, 64969.0], [97.1, 66197.0], [97.2, 67211.0], [97.3, 68770.0], [97.4, 69648.0], [97.5, 71059.0], [97.6, 71895.0], [97.7, 73087.0], [97.8, 74024.0], [97.9, 74923.0], [98.0, 76039.0], [98.1, 77499.0], [98.2, 78609.0], [98.3, 79383.0], [98.4, 80384.0], [98.5, 81157.0], [98.6, 81953.0], [98.7, 83950.0], [98.8, 85187.0], [98.9, 87735.0], [99.0, 88591.0], [99.1, 89084.0], [99.2, 90650.0], [99.3, 93154.0], [99.4, 94401.0], [99.5, 95293.0], [99.6, 95463.0], [99.7, 95774.0], [99.8, 96359.0], [99.9, 97997.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4543.0, "series": [{"data": [[0.0, 4543.0], [66700.0, 4.0], [73100.0, 2.0], [76300.0, 2.0], [79500.0, 2.0], [85900.0, 2.0], [89100.0, 2.0], [95500.0, 8.0], [100.0, 182.0], [32900.0, 6.0], [34500.0, 17.0], [36100.0, 2.0], [37700.0, 1.0], [39300.0, 5.0], [40900.0, 3.0], [42500.0, 5.0], [44100.0, 17.0], [45700.0, 7.0], [48900.0, 3.0], [50500.0, 4.0], [200.0, 64.0], [55300.0, 1.0], [56900.0, 4.0], [58500.0, 3.0], [60100.0, 4.0], [61700.0, 2.0], [63300.0, 5.0], [64900.0, 4.0], [69000.0, 1.0], [75400.0, 3.0], [300.0, 128.0], [78600.0, 5.0], [81800.0, 3.0], [88200.0, 2.0], [94600.0, 3.0], [97800.0, 1.0], [400.0, 103.0], [500.0, 195.0], [600.0, 78.0], [700.0, 109.0], [800.0, 108.0], [900.0, 166.0], [1000.0, 207.0], [1100.0, 220.0], [1200.0, 193.0], [1300.0, 228.0], [1400.0, 286.0], [1500.0, 265.0], [1600.0, 195.0], [1700.0, 183.0], [1800.0, 88.0], [1900.0, 61.0], [2000.0, 109.0], [2100.0, 91.0], [2300.0, 68.0], [2200.0, 77.0], [2400.0, 59.0], [2500.0, 59.0], [2600.0, 47.0], [2700.0, 62.0], [2800.0, 129.0], [2900.0, 161.0], [3000.0, 129.0], [3100.0, 114.0], [3200.0, 118.0], [3300.0, 133.0], [3400.0, 82.0], [3500.0, 59.0], [3600.0, 78.0], [3700.0, 122.0], [3800.0, 129.0], [3900.0, 131.0], [4000.0, 107.0], [4200.0, 136.0], [68100.0, 1.0], [4400.0, 121.0], [4600.0, 179.0], [71300.0, 2.0], [4800.0, 141.0], [74500.0, 1.0], [5000.0, 113.0], [80900.0, 3.0], [5200.0, 106.0], [84100.0, 1.0], [5400.0, 49.0], [5600.0, 33.0], [87300.0, 1.0], [5800.0, 34.0], [90500.0, 1.0], [93700.0, 1.0], [6000.0, 34.0], [96900.0, 2.0], [6200.0, 27.0], [6600.0, 25.0], [6400.0, 17.0], [6800.0, 8.0], [7000.0, 6.0], [7400.0, 6.0], [7200.0, 4.0], [7600.0, 8.0], [7800.0, 2.0], [8000.0, 7.0], [8400.0, 6.0], [9200.0, 9.0], [8800.0, 5.0], [9600.0, 3.0], [10000.0, 6.0], [10400.0, 2.0], [11200.0, 1.0], [10800.0, 4.0], [11600.0, 1.0], [12000.0, 1.0], [12400.0, 4.0], [12800.0, 7.0], [13200.0, 6.0], [13600.0, 8.0], [14000.0, 6.0], [14400.0, 10.0], [14800.0, 8.0], [15200.0, 10.0], [15600.0, 3.0], [16000.0, 1.0], [16800.0, 7.0], [17600.0, 8.0], [18400.0, 6.0], [19200.0, 15.0], [20000.0, 6.0], [20800.0, 10.0], [21600.0, 10.0], [22400.0, 7.0], [23200.0, 9.0], [24000.0, 8.0], [24800.0, 3.0], [25600.0, 8.0], [26400.0, 11.0], [27200.0, 9.0], [28000.0, 12.0], [28800.0, 10.0], [29600.0, 9.0], [30400.0, 6.0], [31200.0, 1.0], [32000.0, 6.0], [33600.0, 11.0], [36800.0, 2.0], [35200.0, 1.0], [38400.0, 8.0], [40000.0, 1.0], [41600.0, 5.0], [43200.0, 13.0], [44800.0, 13.0], [46400.0, 5.0], [48000.0, 1.0], [49600.0, 6.0], [51200.0, 3.0], [52800.0, 1.0], [54400.0, 2.0], [56000.0, 4.0], [57600.0, 2.0], [59200.0, 2.0], [60800.0, 2.0], [62400.0, 9.0], [64000.0, 2.0], [67200.0, 1.0], [70400.0, 2.0], [73600.0, 1.0], [80000.0, 3.0], [83200.0, 1.0], [92800.0, 1.0], [96000.0, 2.0], [67100.0, 2.0], [70300.0, 2.0], [73500.0, 1.0], [95900.0, 4.0], [33100.0, 4.0], [34700.0, 4.0], [36300.0, 3.0], [37900.0, 4.0], [39500.0, 6.0], [41100.0, 5.0], [42700.0, 6.0], [44300.0, 18.0], [45900.0, 9.0], [47500.0, 5.0], [49100.0, 6.0], [50700.0, 1.0], [53900.0, 1.0], [55500.0, 1.0], [57100.0, 3.0], [58700.0, 6.0], [60300.0, 1.0], [61900.0, 5.0], [63500.0, 4.0], [65100.0, 1.0], [66200.0, 1.0], [69400.0, 1.0], [75800.0, 1.0], [82200.0, 1.0], [85400.0, 1.0], [88600.0, 4.0], [95000.0, 1.0], [98200.0, 4.0], [71700.0, 2.0], [74900.0, 2.0], [78100.0, 3.0], [81300.0, 2.0], [84500.0, 1.0], [87700.0, 2.0], [90900.0, 1.0], [94100.0, 1.0], [16900.0, 9.0], [17700.0, 16.0], [18500.0, 6.0], [19300.0, 6.0], [20100.0, 9.0], [20900.0, 12.0], [21700.0, 5.0], [22500.0, 11.0], [23300.0, 8.0], [24100.0, 5.0], [24900.0, 6.0], [25700.0, 4.0], [26500.0, 3.0], [27300.0, 10.0], [28100.0, 12.0], [28900.0, 12.0], [29700.0, 16.0], [30500.0, 4.0], [31300.0, 2.0], [32100.0, 3.0], [33800.0, 3.0], [35400.0, 3.0], [37000.0, 4.0], [38600.0, 4.0], [40200.0, 6.0], [41800.0, 8.0], [43400.0, 12.0], [45000.0, 11.0], [46600.0, 1.0], [48200.0, 3.0], [49800.0, 3.0], [51400.0, 1.0], [54600.0, 1.0], [56200.0, 3.0], [59400.0, 1.0], [61000.0, 2.0], [62600.0, 5.0], [64200.0, 1.0], [67600.0, 1.0], [70800.0, 1.0], [74000.0, 1.0], [80400.0, 2.0], [93200.0, 1.0], [96400.0, 2.0], [73900.0, 2.0], [77100.0, 1.0], [80300.0, 2.0], [89900.0, 4.0], [93100.0, 2.0], [96300.0, 3.0], [33300.0, 4.0], [34900.0, 2.0], [36500.0, 3.0], [38100.0, 4.0], [39700.0, 6.0], [41300.0, 11.0], [42900.0, 12.0], [44500.0, 26.0], [46100.0, 13.0], [47700.0, 2.0], [49300.0, 2.0], [52500.0, 2.0], [55700.0, 4.0], [57300.0, 2.0], [58900.0, 3.0], [60500.0, 2.0], [62100.0, 6.0], [63700.0, 4.0], [65300.0, 2.0], [66600.0, 1.0], [69800.0, 1.0], [73000.0, 4.0], [76200.0, 1.0], [82600.0, 3.0], [85800.0, 1.0], [89000.0, 6.0], [92200.0, 1.0], [95400.0, 10.0], [65700.0, 1.0], [68900.0, 2.0], [78500.0, 2.0], [81700.0, 1.0], [84900.0, 1.0], [88100.0, 4.0], [94500.0, 2.0], [97700.0, 2.0], [8500.0, 5.0], [8900.0, 7.0], [9300.0, 5.0], [9700.0, 6.0], [10100.0, 5.0], [10500.0, 1.0], [10900.0, 2.0], [11700.0, 6.0], [11300.0, 1.0], [12100.0, 3.0], [12500.0, 4.0], [13300.0, 3.0], [12900.0, 4.0], [13700.0, 5.0], [14100.0, 3.0], [14500.0, 3.0], [14900.0, 5.0], [15300.0, 8.0], [15700.0, 8.0], [16100.0, 3.0], [17000.0, 4.0], [17800.0, 11.0], [19400.0, 6.0], [18600.0, 7.0], [20200.0, 10.0], [21000.0, 411.0], [21800.0, 16.0], [22600.0, 4.0], [23400.0, 4.0], [24200.0, 4.0], [25000.0, 8.0], [25800.0, 7.0], [26600.0, 11.0], [27400.0, 9.0], [28200.0, 6.0], [29000.0, 6.0], [29800.0, 6.0], [30600.0, 13.0], [31400.0, 7.0], [32200.0, 9.0], [34000.0, 4.0], [35600.0, 2.0], [37200.0, 4.0], [38800.0, 4.0], [40400.0, 6.0], [42000.0, 8.0], [43600.0, 17.0], [45200.0, 12.0], [46800.0, 4.0], [48400.0, 2.0], [50000.0, 3.0], [51600.0, 3.0], [54800.0, 1.0], [56400.0, 2.0], [58000.0, 3.0], [59600.0, 3.0], [61200.0, 3.0], [62800.0, 3.0], [64400.0, 4.0], [71200.0, 1.0], [74400.0, 3.0], [77600.0, 2.0], [80800.0, 2.0], [84000.0, 3.0], [96800.0, 2.0], [67900.0, 1.0], [71100.0, 3.0], [74300.0, 3.0], [77500.0, 1.0], [83900.0, 3.0], [87100.0, 2.0], [90300.0, 2.0], [93500.0, 1.0], [33500.0, 6.0], [35100.0, 3.0], [36700.0, 3.0], [38300.0, 6.0], [39900.0, 6.0], [41500.0, 8.0], [43100.0, 4.0], [44700.0, 19.0], [46300.0, 5.0], [47900.0, 2.0], [49500.0, 1.0], [51100.0, 6.0], [54300.0, 2.0], [57500.0, 3.0], [59100.0, 1.0], [60700.0, 3.0], [62300.0, 5.0], [63900.0, 6.0], [65500.0, 1.0], [67000.0, 1.0], [73400.0, 4.0], [76600.0, 2.0], [86200.0, 3.0], [89400.0, 1.0], [95800.0, 2.0], [66100.0, 2.0], [69300.0, 1.0], [72500.0, 2.0], [75700.0, 1.0], [78900.0, 3.0], [88500.0, 3.0], [91700.0, 1.0], [94900.0, 1.0], [98100.0, 3.0], [101300.0, 1.0], [17100.0, 6.0], [17900.0, 12.0], [18700.0, 18.0], [19500.0, 13.0], [20300.0, 13.0], [21100.0, 17.0], [21900.0, 4.0], [23500.0, 5.0], [22700.0, 3.0], [24300.0, 4.0], [25100.0, 3.0], [25900.0, 11.0], [26700.0, 8.0], [27500.0, 18.0], [28300.0, 9.0], [29100.0, 9.0], [29900.0, 11.0], [30700.0, 5.0], [31500.0, 12.0], [32300.0, 5.0], [34200.0, 6.0], [37400.0, 2.0], [40600.0, 3.0], [39000.0, 7.0], [42200.0, 4.0], [43800.0, 16.0], [45400.0, 17.0], [47000.0, 4.0], [48600.0, 4.0], [50200.0, 4.0], [51800.0, 5.0], [55000.0, 3.0], [56600.0, 1.0], [58200.0, 3.0], [59800.0, 5.0], [61400.0, 7.0], [63000.0, 4.0], [64600.0, 2.0], [68400.0, 1.0], [71600.0, 1.0], [74800.0, 1.0], [78000.0, 1.0], [81200.0, 4.0], [84400.0, 1.0], [90800.0, 2.0], [94000.0, 1.0], [71500.0, 3.0], [74700.0, 1.0], [77900.0, 2.0], [81100.0, 5.0], [84300.0, 3.0], [90700.0, 3.0], [93900.0, 2.0], [33700.0, 3.0], [35300.0, 5.0], [36900.0, 2.0], [38500.0, 7.0], [40100.0, 3.0], [41700.0, 9.0], [43300.0, 16.0], [44900.0, 17.0], [46500.0, 9.0], [48100.0, 1.0], [49700.0, 6.0], [51300.0, 1.0], [54500.0, 1.0], [56100.0, 4.0], [57700.0, 3.0], [59300.0, 1.0], [60900.0, 1.0], [62500.0, 4.0], [64100.0, 2.0], [67400.0, 3.0], [70600.0, 2.0], [77000.0, 1.0], [80200.0, 3.0], [89800.0, 1.0], [96200.0, 2.0], [112200.0, 1.0], [4100.0, 114.0], [4300.0, 126.0], [4500.0, 225.0], [69700.0, 1.0], [72900.0, 2.0], [4700.0, 202.0], [76100.0, 2.0], [4900.0, 100.0], [5100.0, 67.0], [79300.0, 3.0], [5300.0, 63.0], [5500.0, 35.0], [88900.0, 2.0], [5700.0, 41.0], [5900.0, 22.0], [6100.0, 34.0], [95300.0, 8.0], [6300.0, 18.0], [6500.0, 23.0], [6700.0, 15.0], [6900.0, 12.0], [7100.0, 7.0], [7300.0, 4.0], [7500.0, 9.0], [7900.0, 3.0], [7700.0, 9.0], [8100.0, 7.0], [8200.0, 6.0], [8600.0, 6.0], [9000.0, 9.0], [9400.0, 3.0], [10200.0, 3.0], [9800.0, 4.0], [10600.0, 3.0], [11000.0, 1.0], [11400.0, 3.0], [11800.0, 7.0], [12200.0, 4.0], [12600.0, 2.0], [13000.0, 4.0], [13400.0, 9.0], [13800.0, 9.0], [14200.0, 4.0], [14600.0, 8.0], [15000.0, 4.0], [15800.0, 6.0], [15400.0, 5.0], [16200.0, 14.0], [16400.0, 6.0], [17200.0, 4.0], [18000.0, 12.0], [18800.0, 8.0], [19600.0, 9.0], [20400.0, 10.0], [21200.0, 5.0], [22000.0, 2.0], [22800.0, 8.0], [23600.0, 5.0], [24400.0, 5.0], [25200.0, 6.0], [26000.0, 10.0], [26800.0, 12.0], [27600.0, 8.0], [28400.0, 19.0], [29200.0, 17.0], [30000.0, 5.0], [30800.0, 9.0], [31600.0, 4.0], [32400.0, 6.0], [32800.0, 5.0], [34400.0, 10.0], [36000.0, 3.0], [37600.0, 3.0], [39200.0, 2.0], [40800.0, 2.0], [42400.0, 7.0], [44000.0, 23.0], [45600.0, 14.0], [47200.0, 5.0], [48800.0, 6.0], [50400.0, 7.0], [52000.0, 2.0], [53600.0, 1.0], [55200.0, 1.0], [58400.0, 4.0], [60000.0, 4.0], [61600.0, 1.0], [63200.0, 3.0], [64800.0, 1.0], [65600.0, 2.0], [68800.0, 1.0], [72000.0, 2.0], [78400.0, 1.0], [84800.0, 1.0], [88000.0, 2.0], [94400.0, 1.0], [68700.0, 2.0], [75100.0, 2.0], [78300.0, 1.0], [84700.0, 1.0], [87900.0, 1.0], [94300.0, 2.0], [33900.0, 3.0], [35500.0, 5.0], [37100.0, 3.0], [38700.0, 2.0], [40300.0, 4.0], [41900.0, 8.0], [43500.0, 13.0], [45100.0, 13.0], [46700.0, 2.0], [48300.0, 6.0], [49900.0, 1.0], [54700.0, 1.0], [56300.0, 1.0], [57900.0, 5.0], [59500.0, 1.0], [61100.0, 10.0], [62700.0, 5.0], [64300.0, 2.0], [71000.0, 3.0], [74200.0, 2.0], [77400.0, 4.0], [80600.0, 2.0], [83800.0, 1.0], [87000.0, 2.0], [90200.0, 1.0], [93400.0, 1.0], [96600.0, 1.0], [70100.0, 2.0], [73300.0, 2.0], [76500.0, 1.0], [79700.0, 1.0], [82900.0, 1.0], [86100.0, 1.0], [95700.0, 3.0], [16500.0, 4.0], [17300.0, 4.0], [18100.0, 13.0], [18900.0, 8.0], [19700.0, 9.0], [21300.0, 10.0], [20500.0, 13.0], [22100.0, 4.0], [22900.0, 3.0], [23700.0, 2.0], [25300.0, 10.0], [26100.0, 8.0], [26900.0, 9.0], [27700.0, 12.0], [28500.0, 14.0], [29300.0, 9.0], [30100.0, 10.0], [30900.0, 7.0], [31700.0, 10.0], [32500.0, 8.0], [33000.0, 3.0], [34600.0, 5.0], [36200.0, 3.0], [37800.0, 3.0], [39400.0, 4.0], [41000.0, 15.0], [42600.0, 4.0], [44200.0, 17.0], [45800.0, 6.0], [47400.0, 7.0], [49000.0, 5.0], [50600.0, 3.0], [55400.0, 1.0], [57000.0, 1.0], [58600.0, 4.0], [60200.0, 3.0], [61800.0, 4.0], [63400.0, 7.0], [65000.0, 1.0], [66000.0, 2.0], [69200.0, 1.0], [72400.0, 1.0], [75600.0, 1.0], [78800.0, 2.0], [82000.0, 1.0], [88400.0, 2.0], [94800.0, 1.0], [98000.0, 1.0], [65900.0, 2.0], [69100.0, 3.0], [72300.0, 2.0], [75500.0, 4.0], [81900.0, 3.0], [85100.0, 1.0], [88300.0, 1.0], [94700.0, 1.0], [97900.0, 3.0], [34100.0, 4.0], [35700.0, 3.0], [37300.0, 5.0], [38900.0, 2.0], [40500.0, 6.0], [42100.0, 6.0], [43700.0, 24.0], [45300.0, 12.0], [46900.0, 3.0], [48500.0, 3.0], [50100.0, 3.0], [51700.0, 4.0], [54900.0, 1.0], [56500.0, 2.0], [58100.0, 1.0], [59700.0, 2.0], [61300.0, 5.0], [62900.0, 8.0], [64500.0, 1.0], [68200.0, 3.0], [71400.0, 1.0], [74600.0, 2.0], [81000.0, 3.0], [84200.0, 2.0], [90600.0, 2.0], [93800.0, 2.0], [97000.0, 1.0], [67300.0, 1.0], [70500.0, 1.0], [73700.0, 1.0], [76900.0, 1.0], [80100.0, 3.0], [92900.0, 2.0], [96100.0, 3.0], [8300.0, 5.0], [8700.0, 4.0], [9100.0, 9.0], [9500.0, 7.0], [9900.0, 5.0], [10700.0, 7.0], [10300.0, 1.0], [11100.0, 1.0], [11500.0, 2.0], [11900.0, 4.0], [12300.0, 6.0], [12700.0, 3.0], [13100.0, 7.0], [13500.0, 7.0], [13900.0, 9.0], [14300.0, 2.0], [14700.0, 5.0], [15100.0, 8.0], [15500.0, 7.0], [15900.0, 9.0], [16300.0, 7.0], [16600.0, 11.0], [17400.0, 9.0], [18200.0, 9.0], [19000.0, 9.0], [19800.0, 8.0], [20600.0, 12.0], [21400.0, 10.0], [22200.0, 3.0], [23000.0, 14.0], [23800.0, 5.0], [24600.0, 5.0], [25400.0, 8.0], [26200.0, 10.0], [27000.0, 21.0], [27800.0, 16.0], [28600.0, 14.0], [29400.0, 9.0], [30200.0, 5.0], [31000.0, 5.0], [31800.0, 6.0], [32600.0, 9.0], [33200.0, 3.0], [34800.0, 3.0], [36400.0, 4.0], [38000.0, 5.0], [39600.0, 9.0], [41200.0, 9.0], [42800.0, 11.0], [44400.0, 14.0], [46000.0, 10.0], [49200.0, 4.0], [50800.0, 3.0], [52400.0, 1.0], [54000.0, 1.0], [57200.0, 2.0], [55600.0, 1.0], [58800.0, 3.0], [60400.0, 4.0], [62000.0, 5.0], [63600.0, 3.0], [65200.0, 2.0], [66400.0, 3.0], [69600.0, 4.0], [72800.0, 2.0], [76000.0, 2.0], [79200.0, 2.0], [82400.0, 1.0], [88800.0, 2.0], [92000.0, 1.0], [95200.0, 7.0], [98400.0, 1.0], [66300.0, 1.0], [69500.0, 2.0], [72700.0, 1.0], [75900.0, 1.0], [79100.0, 4.0], [82300.0, 2.0], [88700.0, 1.0], [91900.0, 1.0], [98300.0, 2.0], [101500.0, 2.0], [34300.0, 5.0], [35900.0, 2.0], [37500.0, 6.0], [39100.0, 7.0], [40700.0, 6.0], [42300.0, 2.0], [43900.0, 18.0], [45500.0, 17.0], [48700.0, 1.0], [50300.0, 3.0], [51900.0, 3.0], [56700.0, 2.0], [58300.0, 2.0], [59900.0, 4.0], [61500.0, 1.0], [64700.0, 2.0], [68600.0, 2.0], [71800.0, 2.0], [75000.0, 1.0], [78200.0, 1.0], [81400.0, 2.0], [87800.0, 1.0], [91000.0, 1.0], [94200.0, 2.0], [67700.0, 1.0], [70900.0, 1.0], [74100.0, 2.0], [80500.0, 1.0], [83700.0, 1.0], [90100.0, 2.0], [96500.0, 1.0], [16700.0, 12.0], [17500.0, 5.0], [18300.0, 11.0], [19100.0, 4.0], [19900.0, 9.0], [20700.0, 13.0], [21500.0, 12.0], [22300.0, 3.0], [23100.0, 7.0], [23900.0, 9.0], [24700.0, 4.0], [25500.0, 9.0], [26300.0, 12.0], [27100.0, 10.0], [27900.0, 10.0], [29500.0, 14.0], [28700.0, 7.0], [30300.0, 7.0], [31100.0, 3.0], [32700.0, 6.0], [31900.0, 5.0], [33400.0, 5.0], [35000.0, 3.0], [36600.0, 1.0], [38200.0, 6.0], [39800.0, 2.0], [41400.0, 8.0], [43000.0, 12.0], [44600.0, 16.0], [46200.0, 5.0], [47800.0, 3.0], [49400.0, 6.0], [51000.0, 4.0], [55800.0, 6.0], [57400.0, 1.0], [59000.0, 4.0], [60600.0, 3.0], [62200.0, 4.0], [63800.0, 3.0], [66800.0, 2.0], [70000.0, 2.0], [73200.0, 1.0], [79600.0, 1.0], [82800.0, 1.0], [86000.0, 2.0], [89200.0, 1.0], [95600.0, 4.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 112200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 399.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 8788.0, "series": [{"data": [[0.0, 5021.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1792.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 8788.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 399.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 11.0, "minX": 1.63141548E12, "maxY": 1581.5501193317446, "series": [{"data": [[1.63141578E12, 289.6401384083042], [1.63141572E12, 1274.5372714486648]], "isOverall": false, "label": "getUsersByPage", "isController": false}, {"data": [[1.63141548E12, 1242.0425531914902], [1.63141554E12, 860.391734575087]], "isOverall": false, "label": "getUserInfoByUserId", "isController": false}, {"data": [[1.6314156E12, 592.0359333917622], [1.63141566E12, 11.0], [1.63141554E12, 1581.5501193317446]], "isOverall": false, "label": "getOtherInfo", "isController": false}, {"data": [[1.63141566E12, 25.22150000000002]], "isOverall": false, "label": "getUserNameById", "isController": false}, {"data": [[1.63141572E12, 314.89599999999984]], "isOverall": false, "label": "followOther", "isController": false}, {"data": [[1.63141566E12, 739.3500000000003]], "isOverall": false, "label": "editUser", "isController": false}, {"data": [[1.63141548E12, 975.0650000000015]], "isOverall": false, "label": "getUserByUserId", "isController": false}, {"data": [[1.63141572E12, 138.4914999999996]], "isOverall": false, "label": "unFollowOther", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63141578E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 635.2916666666665, "minX": 1.0, "maxY": 54658.0, "series": [{"data": [[2.0, 43063.6], [3.0, 33639.75], [4.0, 35402.142857142855], [5.0, 28797.375], [6.0, 31318.333333333336], [7.0, 30583.333333333336], [8.0, 27343.777777777777], [9.0, 25056.07142857143], [10.0, 28963.285714285717], [11.0, 27186.333333333332], [12.0, 30251.5], [13.0, 37224.166666666664], [14.0, 22560.875], [15.0, 20030.875], [16.0, 22216.777777777777], [17.0, 15648.5], [18.0, 8691.166666666666], [19.0, 7488.03448275862], [20.0, 3364.733333333334], [21.0, 1257.367088607595], [22.0, 1293.3148936170217], [23.0, 1120.9586466165415], [24.0, 773.6818181818182], [25.0, 1566.4469273743007], [26.0, 799.4742268041246], [27.0, 1428.222891566265], [28.0, 1048.342465753425], [29.0, 2209.7659574468084], [30.0, 6302.062500000001], [31.0, 6061.142857142859], [33.0, 12870.888888888889], [32.0, 5836.787234042554], [34.0, 8762.416666666664], [35.0, 4058.106382978723], [37.0, 10675.857142857141], [36.0, 10566.375], [39.0, 23012.18181818182], [38.0, 9555.6], [40.0, 9882.20588235294], [41.0, 3598.65], [43.0, 2959.8101265822784], [42.0, 2616.373333333333], [45.0, 2872.411764705881], [44.0, 1039.4687499999995], [47.0, 4643.377777777778], [46.0, 2301.460317460318], [48.0, 2808.428571428572], [49.0, 11645.04761904762], [50.0, 7165.484848484848], [51.0, 6199.666666666665], [53.0, 8909.476190476189], [52.0, 13555.5], [54.0, 11313.043478260868], [55.0, 18176.0], [57.0, 16455.555555555555], [56.0, 29728.0], [58.0, 21021.35714285714], [59.0, 12083.92857142857], [60.0, 14713.285714285716], [61.0, 10044.583333333332], [63.0, 21653.153846153844], [62.0, 9835.909090909092], [67.0, 17583.769230769234], [66.0, 17129.333333333332], [65.0, 12387.749999999998], [64.0, 8218.444444444443], [69.0, 13641.639999999996], [68.0, 12462.3125], [71.0, 22106.5], [70.0, 23183.57142857143], [74.0, 14071.777777777781], [75.0, 11478.538461538463], [73.0, 15032.153846153848], [72.0, 11492.66666666667], [79.0, 15186.285714285714], [76.0, 16103.76923076923], [78.0, 29642.2], [77.0, 27532.42857142857], [82.0, 20597.666666666664], [81.0, 19284.0], [83.0, 13234.411764705881], [80.0, 16336.300000000003], [84.0, 23945.0], [87.0, 47646.66666666667], [85.0, 29193.4], [86.0, 2369.0], [91.0, 24559.833333333332], [90.0, 29484.4], [89.0, 19260.100000000002], [88.0, 20302.8], [95.0, 12122.785714285714], [93.0, 12711.0], [94.0, 11488.384615384615], [92.0, 12424.75], [99.0, 19179.181818181816], [98.0, 13298.937499999998], [97.0, 15224.399999999998], [96.0, 16155.941176470587], [101.0, 16582.06666666667], [103.0, 14803.000000000004], [102.0, 19789.92857142857], [100.0, 16782.4], [107.0, 11337.25], [104.0, 16893.4375], [106.0, 15993.250000000002], [105.0, 10352.899999999998], [111.0, 7741.703703703703], [108.0, 12695.166666666668], [110.0, 14608.846153846152], [109.0, 10384.3], [112.0, 14110.833333333334], [115.0, 8617.81818181818], [113.0, 8686.045454545456], [114.0, 6981.428571428572], [117.0, 15001.444444444443], [119.0, 23297.375000000004], [116.0, 16521.0], [118.0, 10407.357142857143], [122.0, 23012.55555555556], [123.0, 17941.5], [121.0, 19043.5], [120.0, 11992.500000000002], [126.0, 14633.750000000002], [125.0, 20241.222222222223], [127.0, 15634.777777777777], [124.0, 13442.999999999998], [135.0, 29630.0], [134.0, 20430.75], [128.0, 17649.153846153844], [133.0, 15158.083333333336], [129.0, 22725.666666666668], [132.0, 11344.529411764706], [131.0, 16403.166666666668], [130.0, 11191.23076923077], [141.0, 20910.416666666664], [138.0, 17863.266666666666], [137.0, 11673.625], [139.0, 18534.636363636364], [136.0, 28922.42857142857], [143.0, 22805.0], [142.0, 14518.7], [140.0, 16391.166666666668], [150.0, 20162.499999999996], [151.0, 12918.166666666668], [149.0, 15695.333333333334], [148.0, 15843.888888888887], [147.0, 17554.625], [146.0, 20877.333333333332], [145.0, 23693.5], [144.0, 29121.4], [153.0, 9485.782608695652], [152.0, 16818.05882352941], [157.0, 3717.3333333333326], [156.0, 1351.340909090909], [155.0, 2509.909090909091], [154.0, 5244.9433962264175], [159.0, 2113.55223880597], [158.0, 1959.6533333333334], [167.0, 7393.928571428571], [161.0, 7454.947368421052], [160.0, 2398.573529411766], [166.0, 7762.130434782608], [165.0, 8007.774193548388], [164.0, 10846.095238095237], [162.0, 8788.588235294117], [163.0, 2356.565217391304], [175.0, 18437.0], [174.0, 15993.473684210525], [172.0, 11658.692307692309], [171.0, 15095.384615384613], [170.0, 5778.444444444443], [169.0, 4436.394736842105], [168.0, 10887.0], [173.0, 10261.133333333335], [182.0, 15225.75], [181.0, 16910.222222222223], [178.0, 17832.0], [177.0, 17725.222222222223], [176.0, 13020.153846153848], [183.0, 14986.3], [180.0, 35006.5], [179.0, 15539.000000000002], [191.0, 8569.777777777776], [190.0, 14993.71428571429], [189.0, 7919.947368421055], [188.0, 15004.818181818182], [186.0, 9524.75], [184.0, 16259.400000000001], [185.0, 17981.625], [187.0, 20282.222222222223], [199.0, 12891.375], [197.0, 10225.157894736843], [196.0, 6823.833333333334], [193.0, 16852.888888888887], [192.0, 12154.25], [198.0, 9287.8], [195.0, 10743.214285714286], [194.0, 12238.0], [207.0, 12171.692307692309], [206.0, 16485.777777777777], [204.0, 18626.923076923074], [203.0, 7074.999999999999], [202.0, 8863.416666666666], [201.0, 13522.545454545452], [200.0, 12854.75], [205.0, 12838.63636363636], [215.0, 5424.22222222222], [214.0, 5703.615384615384], [213.0, 13463.727272727274], [212.0, 7099.57142857143], [211.0, 8062.2631578947385], [210.0, 8825.8125], [209.0, 12037.615384615385], [208.0, 11709.0], [222.0, 17503.125], [221.0, 18562.25], [220.0, 19897.125], [218.0, 10035.2], [217.0, 10748.384615384615], [216.0, 10596.928571428572], [223.0, 19845.0], [219.0, 22445.666666666668], [231.0, 13673.545454545456], [229.0, 21511.14285714286], [227.0, 18406.1], [226.0, 16872.5], [225.0, 15087.900000000001], [224.0, 13798.90909090909], [230.0, 26486.4], [228.0, 14414.300000000001], [239.0, 3710.8], [238.0, 15698.0], [236.0, 17187.818181818184], [235.0, 8477.0], [234.0, 8688.222222222223], [232.0, 8852.181818181818], [237.0, 13305.8], [233.0, 23966.375], [247.0, 15551.777777777777], [246.0, 22385.666666666668], [244.0, 15663.76923076923], [241.0, 15843.599999999999], [245.0, 17942.4], [243.0, 18554.2], [242.0, 27270.6], [240.0, 36538.571428571435], [255.0, 10672.357142857141], [254.0, 13031.214285714286], [253.0, 17872.375], [252.0, 5426.1], [250.0, 9004.38095238095], [249.0, 11951.583333333334], [248.0, 10707.300000000001], [251.0, 13558.2], [270.0, 12650.333333333336], [271.0, 14096.3], [268.0, 21002.11111111111], [269.0, 13801.0], [259.0, 8720.823529411766], [258.0, 8097.750000000001], [257.0, 10910.25], [256.0, 12500.909090909092], [263.0, 17072.375], [267.0, 11477.499999999998], [266.0, 15345.444444444445], [265.0, 7773.421052631578], [264.0, 14290.9], [262.0, 14598.23076923077], [260.0, 9371.0], [261.0, 23998.5], [274.0, 13889.400000000001], [287.0, 6440.227272727273], [286.0, 8292.333333333332], [285.0, 15098.235294117647], [284.0, 635.2916666666665], [275.0, 9150.625], [283.0, 3815.692307692308], [282.0, 6212.479999999999], [280.0, 6763.999999999998], [281.0, 5095.8076923076915], [278.0, 12886.500000000002], [276.0, 9836.866666666665], [277.0, 10885.833333333332], [272.0, 17631.0], [279.0, 5081.961538461538], [273.0, 22439.0], [291.0, 5465.37037037037], [301.0, 8165.833333333332], [302.0, 8817.8125], [296.0, 7448.63157894737], [303.0, 7778.909090909091], [300.0, 9907.785714285716], [290.0, 6414.047619047619], [289.0, 12033.4375], [288.0, 4210.727272727274], [298.0, 7374.9047619047615], [299.0, 10036.61111111111], [297.0, 2794.4545454545455], [295.0, 8948.666666666666], [294.0, 7517.894736842106], [293.0, 7784.291666666666], [292.0, 9517.6], [316.0, 14251.5], [318.0, 8178.416666666667], [319.0, 15085.166666666668], [312.0, 17794.857142857145], [317.0, 13841.5], [314.0, 18767.5], [315.0, 20992.333333333332], [313.0, 8376.176470588234], [311.0, 10458.571428571428], [310.0, 8089.722222222222], [305.0, 9730.266666666666], [304.0, 15747.545454545454], [307.0, 7893.444444444445], [306.0, 9199.117647058822], [309.0, 13580.4], [308.0, 11188.083333333332], [335.0, 15188.5], [334.0, 20131.88888888889], [333.0, 7408.916666666667], [332.0, 13696.307692307691], [323.0, 10292.0], [322.0, 8505.0], [320.0, 13658.7], [321.0, 9234.428571428572], [331.0, 7994.818181818182], [330.0, 13724.099999999999], [329.0, 17208.375], [328.0, 7673.105263157894], [327.0, 11056.153846153846], [325.0, 10455.642857142855], [326.0, 9060.285714285714], [324.0, 10029.785714285716], [339.0, 7741.055555555555], [350.0, 15534.666666666666], [351.0, 19138.299999999996], [344.0, 25823.6], [348.0, 22590.666666666664], [349.0, 24921.4], [346.0, 32229.5], [347.0, 19883.714285714286], [345.0, 18126.375], [342.0, 20013.714285714286], [340.0, 10676.384615384617], [341.0, 24898.0], [338.0, 13976.1], [337.0, 10605.769230769229], [336.0, 21774.0], [343.0, 25863.2], [365.0, 26171.0], [366.0, 14129.285714285714], [367.0, 33387.2], [364.0, 21290.666666666668], [363.0, 21609.0], [362.0, 17879.0], [361.0, 17990.75], [360.0, 19181.85714285714], [357.0, 17605.25], [356.0, 22194.333333333332], [355.0, 29486.14285714286], [354.0, 12880.25], [353.0, 26127.2], [352.0, 25520.4], [359.0, 26098.0], [358.0, 25516.0], [371.0, 22017.833333333332], [382.0, 19575.571428571428], [383.0, 26342.8], [380.0, 18237.625], [381.0, 25449.6], [377.0, 17371.6], [379.0, 25331.4], [378.0, 24967.42857142857], [376.0, 17577.0], [375.0, 22373.0], [373.0, 22010.166666666668], [374.0, 30344.25], [372.0, 19576.0], [370.0, 20175.285714285714], [368.0, 19290.57142857143], [369.0, 31293.25], [398.0, 14612.2], [399.0, 25005.6], [396.0, 21601.333333333332], [397.0, 24377.8], [394.0, 19214.142857142855], [393.0, 25618.2], [395.0, 24729.2], [392.0, 19028.428571428572], [391.0, 25310.2], [389.0, 17121.125], [390.0, 25085.8], [388.0, 21573.333333333336], [386.0, 19829.428571428572], [385.0, 24894.85714285714], [384.0, 16221.4], [387.0, 25833.0], [412.0, 18469.500000000004], [414.0, 18963.0], [415.0, 20934.5], [413.0, 25374.0], [411.0, 16514.666666666664], [410.0, 30358.0], [409.0, 21235.5], [408.0, 21429.833333333336], [407.0, 30955.0], [406.0, 17472.75], [405.0, 17512.375], [404.0, 24540.2], [403.0, 17121.625], [402.0, 29812.0], [401.0, 25904.8], [400.0, 25406.2], [430.0, 15125.0], [431.0, 29932.75], [429.0, 20926.333333333336], [428.0, 29945.25], [427.0, 21307.666666666668], [426.0, 20535.166666666668], [425.0, 17149.25], [424.0, 18583.428571428572], [422.0, 19087.85714285714], [423.0, 37795.333333333336], [417.0, 30453.25], [416.0, 21328.666666666664], [419.0, 20040.5], [418.0, 17100.0], [421.0, 25372.6], [420.0, 21523.375], [435.0, 20972.666666666664], [446.0, 18262.0], [445.0, 18681.142857142855], [444.0, 11281.833333333334], [443.0, 16678.0], [442.0, 27115.428571428572], [441.0, 17102.333333333336], [440.0, 24761.4], [447.0, 28878.75], [438.0, 21569.0], [437.0, 29799.0], [436.0, 24923.8], [434.0, 21203.833333333332], [433.0, 21797.333333333336], [432.0, 18279.428571428572], [439.0, 54658.0], [451.0, 21092.166666666668], [463.0, 26061.75], [461.0, 15016.166666666668], [460.0, 28405.25], [462.0, 13671.0], [459.0, 23857.6], [458.0, 20779.833333333332], [457.0, 16718.625], [456.0, 23713.8], [455.0, 18248.142857142855], [453.0, 24011.999999999996], [452.0, 13788.0], [454.0, 24418.0], [449.0, 29578.0], [450.0, 16073.125], [448.0, 18167.0], [478.0, 20394.166666666668], [474.0, 20107.5], [475.0, 19872.333333333332], [473.0, 15003.666666666666], [472.0, 29215.5], [470.0, 20705.625], [465.0, 29468.5], [464.0, 36622.0], [471.0, 28409.25], [469.0, 11967.625], [468.0, 23640.6], [466.0, 13123.57142857143], [477.0, 24096.4], [476.0, 23861.4], [467.0, 20747.25], [479.0, 23038.8], [483.0, 14684.777777777777], [494.0, 14273.444444444445], [495.0, 16031.857142857145], [489.0, 13443.777777777777], [488.0, 15966.142857142857], [492.0, 10316.666666666668], [493.0, 13651.111111111113], [491.0, 10595.166666666666], [490.0, 19329.666666666664], [487.0, 14511.333333333334], [486.0, 20173.5], [485.0, 15344.625], [484.0, 27713.75], [482.0, 14180.555555555558], [481.0, 16294.375], [480.0, 23526.8], [510.0, 9338.357142857141], [508.0, 7418.058823529412], [509.0, 8731.692307692307], [506.0, 13143.285714285714], [507.0, 15514.416666666666], [505.0, 6496.0], [504.0, 14290.0], [511.0, 16459.14285714286], [503.0, 7723.124999999999], [502.0, 8330.25], [501.0, 7113.235294117646], [500.0, 17470.222222222223], [499.0, 12929.615384615383], [498.0, 15374.5], [497.0, 12876.0], [496.0, 7472.636363636364], [538.0, 19078.333333333336], [542.0, 19863.0], [528.0, 7451.111111111111], [540.0, 11509.599999999999], [526.0, 10949.749999999998], [514.0, 8966.214285714286], [512.0, 9138.615384615385], [516.0, 13091.111111111111], [518.0, 13298.0], [536.0, 11730.300000000003], [524.0, 15314.625], [522.0, 16010.285714285716], [520.0, 12822.444444444445], [534.0, 13150.111111111111], [532.0, 21774.8], [530.0, 7455.882352941177], [572.0, 18891.5], [574.0, 26931.75], [560.0, 19551.875], [562.0, 16169.714285714284], [570.0, 15422.875], [568.0, 21934.2], [548.0, 19896.833333333332], [550.0, 14833.333333333334], [546.0, 17650.14285714286], [544.0, 11290.166666666668], [558.0, 29136.0], [556.0, 23182.0], [554.0, 8026.625], [552.0, 26985.5], [564.0, 16004.428571428572], [566.0, 34825.666666666664], [602.0, 8829.333333333332], [606.0, 13198.777777777777], [594.0, 21217.0], [592.0, 16845.285714285714], [604.0, 16197.285714285714], [600.0, 20901.428571428572], [582.0, 21166.4], [580.0, 18919.5], [578.0, 17207.571428571428], [576.0, 26034.25], [590.0, 18740.333333333332], [588.0, 14866.0], [586.0, 25435.25], [584.0, 16375.285714285714], [598.0, 18498.166666666668], [596.0, 14971.2], [632.0, 21213.6], [636.0, 20575.142857142855], [638.0, 21466.6], [626.0, 21290.6], [624.0, 9865.0], [634.0, 13330.777777777777], [622.0, 25771.25], [608.0, 25550.25], [620.0, 33088.0], [612.0, 20218.0], [610.0, 10233.5], [614.0, 22003.249999999996], [618.0, 18180.833333333332], [616.0, 15913.714285714286], [630.0, 8102.833333333334], [628.0, 16170.714285714286], [646.0, 13396.777777777777], [668.0, 20634.4], [670.0, 17573.75], [666.0, 14846.4], [664.0, 12326.249999999998], [642.0, 20583.000000000004], [644.0, 14219.6], [640.0, 15417.0], [654.0, 16043.285714285714], [652.0, 14157.875], [650.0, 18363.5], [648.0, 18334.833333333336], [662.0, 20121.0], [660.0, 21230.6], [658.0, 17424.666666666668], [656.0, 18085.0], [698.0, 14196.625], [690.0, 20386.4], [702.0, 17477.5], [700.0, 7591.714285714286], [686.0, 20219.2], [674.0, 19496.800000000003], [672.0, 13087.0], [676.0, 15335.571428571428], [678.0, 14061.624999999998], [696.0, 31472.0], [682.0, 20305.8], [684.0, 14038.249999999998], [680.0, 20541.4], [694.0, 24521.75], [692.0, 17671.833333333332], [688.0, 27199.666666666664], [732.0, 17079.5], [734.0, 17032.5], [720.0, 12993.25], [722.0, 15776.857142857141], [730.0, 20386.6], [728.0, 19670.2], [710.0, 12542.777777777777], [708.0, 11479.8], [706.0, 14311.125], [704.0, 13847.875], [718.0, 20024.6], [716.0, 16879.25], [714.0, 17473.166666666668], [712.0, 23696.5], [726.0, 17525.5], [724.0, 12386.888888888889], [762.0, 14977.285714285714], [760.0, 14934.0], [766.0, 14063.888888888889], [752.0, 16739.333333333336], [764.0, 13489.625], [750.0, 16282.666666666668], [738.0, 15051.571428571428], [736.0, 19548.8], [740.0, 16760.25], [742.0, 19327.0], [748.0, 11249.000000000002], [746.0, 16810.666666666668], [744.0, 16913.5], [758.0, 13326.399999999998], [756.0, 8792.8], [754.0, 23625.25], [794.0, 18280.2], [786.0, 20206.85714285714], [784.0, 21741.75], [798.0, 12314.875], [796.0, 16134.166666666666], [792.0, 15473.0], [774.0, 15232.0], [772.0, 12974.600000000002], [770.0, 13181.0], [768.0, 17744.142857142855], [782.0, 18475.2], [778.0, 9830.9], [780.0, 21654.5], [776.0, 10568.6], [790.0, 22027.5], [788.0, 12975.0], [828.0, 10601.0], [830.0, 8590.25], [824.0, 20291.571428571428], [826.0, 16600.4], [806.0, 7170.666666666667], [804.0, 18004.2], [802.0, 18443.875], [800.0, 9836.7], [822.0, 15019.666666666668], [820.0, 15058.666666666666], [818.0, 18234.0], [816.0, 17578.714285714286], [814.0, 11003.083333333332], [812.0, 11159.333333333334], [810.0, 15153.333333333332], [808.0, 10754.555555555555], [856.0, 11814.5], [862.0, 13548.857142857143], [848.0, 7662.5], [858.0, 21148.75], [860.0, 14623.0], [838.0, 21368.75], [836.0, 15804.25], [834.0, 15519.166666666668], [832.0, 23767.0], [846.0, 13339.57142857143], [844.0, 3332.25], [842.0, 14489.666666666668], [840.0, 15606.333333333334], [850.0, 13142.857142857143], [852.0, 17702.2], [854.0, 35881.666666666664], [888.0, 11532.000000000002], [894.0, 16580.57142857143], [892.0, 13182.857142857143], [890.0, 14958.500000000002], [866.0, 13359.857142857143], [864.0, 10609.666666666666], [868.0, 12157.875], [870.0, 17398.0], [878.0, 11986.625], [876.0, 15163.833333333332], [874.0, 15061.499999999998], [872.0, 13318.285714285714], [886.0, 13081.142857142857], [884.0, 13536.714285714286], [880.0, 17339.8], [882.0, 20328.0], [924.0, 7793.0], [926.0, 10636.75], [920.0, 18226.0], [922.0, 26039.333333333332], [900.0, 8098.307692307693], [902.0, 19972.5], [896.0, 13194.142857142857], [898.0, 26824.0], [914.0, 20512.5], [916.0, 26241.333333333332], [918.0, 26084.0], [912.0, 21028.75], [910.0, 10395.666666666666], [908.0, 15261.166666666666], [906.0, 14298.5], [904.0, 38037.5], [954.0, 9067.75], [956.0, 14302.666666666666], [952.0, 8788.363636363636], [950.0, 13865.333333333334], [948.0, 11503.285714285714], [944.0, 16909.8], [946.0, 19938.0], [958.0, 25347.666666666668], [928.0, 12242.2], [930.0, 19845.5], [934.0, 12179.714285714286], [932.0, 9070.454545454544], [942.0, 9119.9], [938.0, 13240.857142857143], [936.0, 12307.857142857143], [940.0, 16315.0], [988.0, 19649.85714285714], [964.0, 11907.25], [966.0, 25417.0], [986.0, 23937.5], [984.0, 24069.5], [990.0, 10471.333333333332], [976.0, 19074.75], [978.0, 19810.0], [982.0, 19800.25], [980.0, 12992.0], [962.0, 18553.666666666664], [960.0, 11817.625], [974.0, 12801.857142857145], [972.0, 11868.125], [968.0, 16601.6], [970.0, 14484.833333333332], [1018.0, 13911.333333333332], [1016.0, 14164.166666666666], [1022.0, 10129.222222222223], [1010.0, 20651.4], [1008.0, 24123.333333333332], [1020.0, 17623.666666666664], [994.0, 16192.0], [992.0, 23232.0], [996.0, 24693.2], [998.0, 13230.5], [1006.0, 16207.600000000002], [1004.0, 12072.571428571428], [1000.0, 14110.166666666666], [1002.0, 18897.875], [1014.0, 15922.2], [1012.0, 25279.333333333332], [1084.0, 15529.399999999998], [1060.0, 18554.0], [1064.0, 15721.0], [1068.0, 12226.857142857143], [1056.0, 19002.25], [1080.0, 18323.25], [1076.0, 18384.25], [1072.0, 13124.500000000002], [1052.0, 18762.25], [1028.0, 24414.666666666668], [1024.0, 9948.375], [1032.0, 13719.666666666668], [1036.0, 25069.25], [1048.0, 13714.166666666668], [1044.0, 9057.142857142857], [1040.0, 19341.25], [1148.0, 12137.333333333334], [1124.0, 14686.2], [1128.0, 15024.666666666668], [1120.0, 14358.2], [1132.0, 12891.5], [1144.0, 22119.666666666668], [1140.0, 21440.333333333332], [1136.0, 17836.75], [1100.0, 15446.4], [1096.0, 15113.2], [1092.0, 10623.0], [1088.0, 18559.0], [1116.0, 15129.2], [1112.0, 22348.0], [1108.0, 9905.4], [1104.0, 12772.0], [1212.0, 12924.6], [1184.0, 12636.0], [1188.0, 16040.75], [1192.0, 13316.8], [1196.0, 9730.375], [1204.0, 11546.166666666666], [1208.0, 11272.0], [1200.0, 11978.833333333334], [1156.0, 10144.625], [1152.0, 16101.0], [1160.0, 14291.333333333332], [1164.0, 21514.0], [1180.0, 11124.42857142857], [1176.0, 14297.4], [1168.0, 15943.25], [1172.0, 21548.666666666668], [1272.0, 16440.166666666668], [1268.0, 8483.75], [1252.0, 10846.833333333334], [1256.0, 9671.111111111111], [1260.0, 4946.499999999999], [1276.0, 18926.0], [1248.0, 10011.333333333332], [1264.0, 5338.666666666666], [1216.0, 7314.699999999999], [1220.0, 11609.333333333334], [1228.0, 13096.6], [1224.0, 11589.0], [1244.0, 19323.4], [1236.0, 14089.5], [1240.0, 18750.333333333332], [1232.0, 15446.714285714286], [1336.0, 11896.0], [1340.0, 6551.545454545455], [1312.0, 12037.8], [1316.0, 8355.875], [1320.0, 6943.888888888889], [1324.0, 9397.5], [1332.0, 12071.6], [1328.0, 9839.0], [1280.0, 6911.5], [1284.0, 9215.142857142857], [1288.0, 14880.0], [1292.0, 15301.0], [1308.0, 9979.25], [1300.0, 9164.714285714286], [1296.0, 18519.2], [1304.0, 18599.0], [1392.0, 11372.5], [1364.0, 10143.625], [1400.0, 13148.5], [1404.0, 9382.285714285714], [1376.0, 9837.555555555555], [1380.0, 7824.142857142857], [1384.0, 20385.25], [1388.0, 3134.0], [1396.0, 13106.25], [1356.0, 7066.222222222223], [1352.0, 7825.727272727273], [1344.0, 10484.375], [1348.0, 9062.25], [1368.0, 8375.4], [1372.0, 12934.5], [1360.0, 9019.0], [1408.0, 20041.5], [1420.0, 10930.4], [1468.0, 12859.75], [1432.0, 12620.5], [1436.0, 23377.0], [1428.0, 15865.5], [1424.0, 7518.0], [1412.0, 13713.5], [1416.0, 16614.0], [1440.0, 10490.2], [1444.0, 6196.0], [1448.0, 5078.5], [1452.0, 11308.333333333334], [1464.0, 12423.75], [1460.0, 13432.4], [1456.0, 14049.6], [1520.0, 12575.25], [1484.0, 6847.333333333334], [1480.0, 10244.4], [1500.0, 18713.25], [1496.0, 17613.0], [1476.0, 22411.0], [1472.0, 20998.333333333332], [1492.0, 9385.666666666666], [1488.0, 12518.0], [1524.0, 10139.666666666668], [1508.0, 15557.0], [1512.0, 9973.2], [1516.0, 11868.75], [1532.0, 12076.5], [1504.0, 12025.25], [1528.0, 15454.666666666666], [1596.0, 8793.4], [1592.0, 6266.125], [1572.0, 15273.0], [1580.0, 14410.666666666666], [1576.0, 20893.0], [1568.0, 14521.0], [1588.0, 6389.875], [1584.0, 7572.571428571428], [1548.0, 20878.5], [1536.0, 10252.333333333332], [1564.0, 9657.333333333332], [1560.0, 14375.333333333334], [1540.0, 9850.285714285714], [1544.0, 12178.75], [1556.0, 9815.6], [1552.0, 9983.5], [1600.0, 6965.285714285714], [1604.0, 7159.5714285714275], [1628.0, 10338.25], [1624.0, 5575.888888888889], [1616.0, 5734.666666666667], [1620.0, 8732.0], [1644.0, 8330.8], [1612.0, 8784.0], [1608.0, 6812.0], [1660.0, 9775.0], [1636.0, 13161.666666666666], [1640.0, 12928.0], [1632.0, 12726.666666666666], [1652.0, 6159.375], [1648.0, 21878.0], [1656.0, 17898.5], [1672.0, 11999.0], [1688.0, 7580.2], [1680.0, 7911.2], [1676.0, 9888.75], [1668.0, 6578.333333333334], [1664.0, 12805.25], [1692.0, 9248.75], [1712.0, 5244.75], [1716.0, 11096.0], [1720.0, 8650.25], [1684.0, 5514.375], [1700.0, 1856.2], [1704.0, 5493.5], [1708.0, 11411.666666666666], [1696.0, 11576.0], [1724.0, 15304.0], [1736.0, 8167.0], [1748.0, 6243.6], [1744.0, 14509.0], [1752.0, 10016.333333333334], [1728.0, 10452.666666666666], [1732.0, 15165.5], [1740.0, 7030.25], [1776.0, 12550.5], [1756.0, 9147.333333333334], [1768.0, 9244.0], [1772.0, 10669.5], [1764.0, 5930.2], [1760.0, 13400.5], [1788.0, 5931.0], [1784.0, 8695.0], [1780.0, 7085.25], [1820.0, 1320.0], [1812.0, 6748.0], [1808.0, 5745.5], [1792.0, 8469.0], [1796.0, 8796.0], [1804.0, 10739.5], [1800.0, 9025.0], [1816.0, 4338.833333333333], [1852.0, 7450.5], [1828.0, 8048.666666666667], [1824.0, 9509.0], [1836.0, 8809.0], [1832.0, 9184.5], [1848.0, 8217.5], [1844.0, 8453.0], [1840.0, 11878.0], [1868.0, 7080.5], [1912.0, 5876.5], [1916.0, 5819.5], [1888.0, 4034.0], [1908.0, 5973.0], [1904.0, 3566.5], [1864.0, 5369.0], [1860.0, 7386.0], [1856.0, 7440.0], [1900.0, 6363.0], [1896.0, 3815.0], [1892.0, 6474.0], [1884.0, 5839.0], [1880.0, 6816.5], [1876.0, 6993.0], [1872.0, 7074.0], [1976.0, 5757.0], [1980.0, 5519.0], [1972.0, 6083.0], [1968.0, 6237.0], [1964.0, 5279.0], [1960.0, 6905.0], [1956.0, 4542.5], [1952.0, 3692.3333333333335], [1948.0, 4617.0], [1920.0, 5581.5], [1932.0, 5238.0], [1928.0, 2714.0], [1924.0, 5543.0], [1944.0, 7396.0], [1940.0, 5025.0], [1936.0, 5139.5], [2000.0, 3053.0], [1996.0, 3848.0], [1992.0, 4275.0], [1988.0, 4901.0], [1984.0, 5288.0], [1085.0, 15121.8], [1081.0, 15739.000000000002], [1057.0, 6077.0], [1061.0, 13558.166666666666], [1065.0, 15469.000000000002], [1069.0, 13142.166666666668], [1077.0, 19038.0], [1073.0, 15297.000000000002], [1029.0, 11177.25], [1025.0, 24511.0], [1053.0, 18586.25], [1033.0, 18633.25], [1037.0, 15537.2], [1049.0, 15801.199999999999], [1045.0, 18679.857142857145], [1041.0, 10753.999999999998], [1145.0, 12111.0], [1137.0, 12412.5], [1121.0, 22417.0], [1149.0, 16957.25], [1125.0, 12356.0], [1129.0, 12558.625], [1133.0, 17284.5], [1141.0, 11258.42857142857], [1101.0, 22959.0], [1097.0, 18458.75], [1093.0, 18025.25], [1089.0, 15044.999999999998], [1117.0, 17884.5], [1113.0, 15234.545454545454], [1105.0, 14272.4], [1109.0, 23087.333333333332], [1185.0, 6474.0], [1193.0, 13354.8], [1197.0, 16565.75], [1213.0, 6472.583333333335], [1189.0, 14742.666666666668], [1209.0, 14051.8], [1205.0, 14330.0], [1201.0, 15816.75], [1161.0, 11831.333333333334], [1165.0, 21521.0], [1157.0, 16514.0], [1181.0, 20320.0], [1153.0, 21148.0], [1177.0, 9423.125], [1173.0, 10571.142857142857], [1169.0, 13805.0], [1273.0, 15548.0], [1249.0, 8650.125], [1277.0, 2101.75], [1257.0, 6683.545454545454], [1253.0, 12474.8], [1261.0, 7261.666666666667], [1269.0, 19804.666666666668], [1265.0, 10528.7], [1217.0, 10095.0], [1221.0, 15083.75], [1225.0, 8946.23076923077], [1229.0, 11144.666666666666], [1245.0, 6897.0], [1237.0, 11839.0], [1233.0, 20200.0], [1241.0, 12825.333333333332], [1333.0, 8121.875], [1337.0, 7170.222222222223], [1341.0, 5333.75], [1317.0, 5486.692307692308], [1313.0, 14649.0], [1321.0, 6798.2], [1325.0, 11985.142857142857], [1329.0, 15260.2], [1285.0, 7789.5], [1281.0, 7764.666666666667], [1289.0, 9279.57142857143], [1293.0, 19268.0], [1309.0, 15986.2], [1305.0, 12574.8], [1301.0, 10024.714285714286], [1297.0, 9641.0], [1393.0, 14020.666666666668], [1357.0, 8976.666666666666], [1365.0, 8793.0], [1361.0, 6499.8], [1401.0, 13429.5], [1381.0, 13934.5], [1377.0, 4562.312500000001], [1385.0, 10376.0], [1389.0, 12658.333333333334], [1405.0, 9746.333333333332], [1397.0, 8291.857142857143], [1353.0, 11475.4], [1349.0, 10221.833333333334], [1345.0, 11807.6], [1369.0, 13939.75], [1373.0, 7266.777777777777], [1413.0, 13158.0], [1421.0, 10646.8], [1433.0, 2227.0], [1429.0, 10841.714285714286], [1425.0, 19979.0], [1409.0, 9928.666666666666], [1417.0, 14449.8], [1437.0, 7830.6], [1449.0, 19302.5], [1445.0, 15837.8], [1441.0, 23815.5], [1453.0, 16748.75], [1469.0, 13014.0], [1465.0, 16362.333333333334], [1457.0, 12874.0], [1461.0, 23486.5], [1473.0, 12094.0], [1477.0, 12834.0], [1501.0, 12824.75], [1497.0, 15140.8], [1493.0, 12721.0], [1489.0, 15685.666666666666], [1521.0, 12208.5], [1485.0, 10203.8], [1481.0, 10477.0], [1533.0, 14585.666666666666], [1505.0, 9203.333333333332], [1509.0, 15582.333333333334], [1513.0, 15436.333333333334], [1517.0, 15865.0], [1529.0, 7512.750000000001], [1525.0, 9013.125], [1589.0, 7785.5], [1593.0, 6270.125], [1597.0, 7741.333333333334], [1569.0, 11317.75], [1573.0, 9585.0], [1577.0, 6866.6], [1581.0, 20246.0], [1585.0, 4922.8], [1549.0, 11694.25], [1565.0, 10870.333333333334], [1537.0, 15623.5], [1545.0, 9831.0], [1541.0, 13227.0], [1557.0, 11857.75], [1553.0, 22468.333333333332], [1561.0, 20508.5], [1601.0, 9036.4], [1649.0, 4818.071428571428], [1613.0, 2810.75], [1609.0, 8546.4], [1605.0, 20019.0], [1629.0, 8721.6], [1625.0, 6720.714285714285], [1621.0, 6756.454545454546], [1617.0, 7575.833333333334], [1645.0, 6992.0], [1661.0, 9949.0], [1633.0, 8069.4], [1641.0, 7681.166666666667], [1637.0, 7590.833333333333], [1657.0, 10181.25], [1653.0, 9953.0], [1669.0, 12058.333333333334], [1685.0, 7578.0], [1681.0, 7953.0], [1713.0, 11177.333333333334], [1717.0, 11215.666666666666], [1677.0, 5803.875], [1673.0, 17225.5], [1665.0, 4300.142857142857], [1693.0, 4766.8], [1689.0, 9248.0], [1721.0, 6031.0], [1697.0, 9308.0], [1709.0, 18799.0], [1705.0, 16233.5], [1701.0, 16887.0], [1725.0, 15506.5], [1729.0, 5691.142857142857], [1753.0, 4723.625], [1757.0, 13429.0], [1749.0, 10014.333333333334], [1745.0, 10128.333333333334], [1733.0, 5736.25], [1737.0, 15162.5], [1777.0, 12935.0], [1741.0, 15642.0], [1769.0, 4681.75], [1765.0, 13511.5], [1773.0, 15696.0], [1761.0, 5608.0], [1785.0, 5973.2], [1789.0, 12416.5], [1781.0, 3974.5555555555557], [1845.0, 8373.0], [1809.0, 7043.333333333333], [1813.0, 9592.5], [1793.0, 5470.4], [1821.0, 9136.5], [1817.0, 6801.0], [1849.0, 8296.0], [1853.0, 4858.0], [1841.0, 7292.666666666667], [1805.0, 10645.5], [1801.0, 10820.5], [1797.0, 12339.333333333334], [1837.0, 8429.5], [1833.0, 8893.0], [1829.0, 9084.0], [1825.0, 9511.0], [1913.0, 5909.5], [1917.0, 5841.5], [1909.0, 5917.5], [1905.0, 7054.333333333333], [1901.0, 6120.0], [1897.0, 7330.0], [1893.0, 6547.5], [1889.0, 7517.0], [1885.0, 6732.0], [1861.0, 9172.0], [1857.0, 7297.0], [1869.0, 5180.333333333333], [1865.0, 6906.0], [1881.0, 6640.5], [1877.0, 6969.5], [1873.0, 6702.5], [1977.0, 5713.0], [1981.0, 5485.0], [1973.0, 5843.0], [1969.0, 5890.0], [1965.0, 6505.0], [1961.0, 6744.0], [1957.0, 4454.5], [1953.0, 4504.0], [1949.0, 4561.5], [1925.0, 5575.5], [1921.0, 5062.0], [1933.0, 5318.5], [1929.0, 6380.333333333333], [1945.0, 3900.0], [1941.0, 4736.5], [1937.0, 7463.0], [1997.0, 3624.0], [1993.0, 4276.0], [1989.0, 5040.0], [1985.0, 5064.0], [537.0, 8457.357142857143], [543.0, 21894.8], [541.0, 16522.714285714286], [539.0, 14593.555555555555], [513.0, 13838.222222222223], [527.0, 26643.428571428572], [515.0, 8768.928571428572], [517.0, 8676.266666666666], [519.0, 27334.5], [525.0, 9657.111111111111], [521.0, 13120.1], [523.0, 18970.5], [535.0, 9652.0], [533.0, 16808.428571428572], [531.0, 13801.111111111111], [529.0, 13895.375], [571.0, 22167.8], [573.0, 16692.714285714286], [563.0, 13037.222222222223], [575.0, 15352.625000000002], [561.0, 27426.75], [569.0, 19119.833333333332], [551.0, 12283.499999999998], [547.0, 16812.285714285714], [549.0, 19445.833333333332], [545.0, 21722.0], [559.0, 12209.285714285716], [557.0, 9163.166666666666], [555.0, 22584.875], [553.0, 27523.5], [567.0, 13786.111111111111], [565.0, 14366.222222222224], [605.0, 15380.57142857143], [595.0, 14918.375], [607.0, 12198.5], [593.0, 22195.4], [603.0, 24094.85714285714], [601.0, 21591.6], [583.0, 18215.833333333336], [581.0, 18388.666666666668], [579.0, 15380.375], [591.0, 18415.5], [577.0, 21010.2], [587.0, 19483.166666666664], [589.0, 18453.666666666668], [585.0, 16563.571428571428], [599.0, 13999.5], [597.0, 23903.0], [635.0, 18363.0], [637.0, 25799.5], [639.0, 24777.75], [625.0, 27621.833333333336], [633.0, 18332.333333333332], [621.0, 11836.090909090908], [619.0, 20954.8], [623.0, 17906.5], [609.0, 18139.666666666668], [611.0, 18979.75], [615.0, 21489.8], [613.0, 10685.6], [617.0, 21938.6], [631.0, 28624.0], [629.0, 9790.4], [627.0, 17588.5], [665.0, 14660.0], [659.0, 16004.42857142857], [671.0, 12735.846153846152], [669.0, 17500.333333333332], [667.0, 23318.14285714286], [647.0, 17081.5], [643.0, 16025.714285714286], [645.0, 17784.375], [641.0, 16083.571428571428], [653.0, 17850.5], [655.0, 19951.0], [651.0, 22998.0], [649.0, 13909.0], [663.0, 12610.777777777777], [661.0, 12824.5], [657.0, 16029.285714285714], [677.0, 20940.8], [697.0, 15496.857142857143], [699.0, 23688.0], [701.0, 23271.714285714283], [703.0, 24310.5], [687.0, 7641.0], [673.0, 11863.866666666667], [675.0, 15404.714285714284], [679.0, 15307.571428571428], [685.0, 16024.857142857145], [683.0, 20076.6], [681.0, 20393.8], [695.0, 20765.2], [693.0, 15444.857142857143], [691.0, 17177.5], [689.0, 12798.222222222223], [731.0, 11145.454545454546], [723.0, 19730.2], [735.0, 13597.875], [733.0, 23294.5], [721.0, 17129.333333333336], [711.0, 13068.5], [709.0, 10988.888888888889], [729.0, 23393.25], [707.0, 13923.285714285714], [705.0, 19853.4], [719.0, 23558.75], [717.0, 14473.875], [715.0, 17119.75], [713.0, 16563.0], [727.0, 19094.857142857145], [725.0, 17195.0], [763.0, 11623.125], [767.0, 9916.142857142857], [753.0, 13349.375], [765.0, 6501.846153846154], [761.0, 22487.85714285714], [737.0, 16288.833333333332], [751.0, 16479.5], [739.0, 14323.0], [743.0, 16754.166666666668], [741.0, 15016.0], [749.0, 18231.85714285714], [747.0, 19017.6], [745.0, 16773.833333333332], [759.0, 15513.5], [757.0, 19420.625], [755.0, 16752.833333333332], [795.0, 10495.81818181818], [799.0, 17474.8], [785.0, 8972.8], [797.0, 15215.833333333332], [793.0, 18141.8], [775.0, 15607.833333333334], [773.0, 11555.333333333334], [771.0, 9441.727272727272], [769.0, 8855.333333333332], [783.0, 12854.375], [781.0, 11856.555555555555], [779.0, 15866.333333333334], [777.0, 13934.857142857143], [789.0, 15178.0], [791.0, 15659.000000000002], [787.0, 10983.555555555558], [827.0, 12553.75], [807.0, 16923.444444444445], [817.0, 11861.625], [819.0, 17313.0], [825.0, 15634.833333333334], [805.0, 15715.500000000002], [803.0, 18564.4], [801.0, 7964.2], [823.0, 7701.285714285715], [821.0, 17726.2], [831.0, 7317.833333333333], [829.0, 22526.2], [815.0, 19235.666666666668], [813.0, 14691.499999999998], [811.0, 18327.800000000003], [809.0, 18388.399999999998], [839.0, 11100.000000000002], [857.0, 21468.5], [849.0, 20217.857142857145], [851.0, 20830.0], [859.0, 17766.6], [861.0, 17379.0], [863.0, 17338.2], [835.0, 11709.4], [837.0, 20729.25], [833.0, 12052.875], [847.0, 14706.833333333334], [845.0, 27272.833333333332], [843.0, 13571.42857142857], [841.0, 10226.9], [855.0, 12377.125], [853.0, 9236.0], [869.0, 17196.2], [895.0, 15293.333333333334], [893.0, 17436.0], [891.0, 13128.428571428572], [889.0, 12897.699999999999], [879.0, 15132.833333333334], [865.0, 10355.777777777777], [867.0, 17261.0], [871.0, 11520.875], [877.0, 14574.000000000002], [875.0, 17197.4], [873.0, 14792.333333333334], [885.0, 15039.0], [887.0, 8394.9], [881.0, 14836.166666666666], [883.0, 14912.0], [923.0, 22034.666666666664], [921.0, 9503.0], [913.0, 17163.199999999997], [925.0, 11934.285714285714], [903.0, 14926.999999999998], [901.0, 17255.2], [899.0, 17144.8], [919.0, 17295.4], [917.0, 12182.625], [915.0, 15164.833333333332], [927.0, 8166.363636363636], [911.0, 11812.249999999998], [897.0, 19595.75], [909.0, 37890.5], [907.0, 11248.666666666666], [905.0, 12106.0], [957.0, 16898.4], [955.0, 21821.166666666664], [959.0, 20115.0], [953.0, 14676.0], [951.0, 25700.0], [949.0, 9093.181818181818], [945.0, 14549.666666666666], [947.0, 24833.666666666668], [943.0, 16794.4], [931.0, 10242.875], [929.0, 12776.6], [935.0, 7853.916666666667], [933.0, 10278.875], [941.0, 17370.4], [937.0, 11552.571428571428], [939.0, 20137.0], [989.0, 16304.0], [991.0, 15490.4], [987.0, 11713.8], [985.0, 16182.714285714286], [983.0, 14259.666666666668], [981.0, 19967.0], [979.0, 10629.833333333332], [977.0, 15603.6], [975.0, 14432.5], [961.0, 13808.000000000002], [967.0, 14803.833333333334], [965.0, 19803.0], [963.0, 25362.333333333332], [973.0, 25245.666666666668], [969.0, 19834.5], [971.0, 25532.333333333332], [1017.0, 19113.5], [1023.0, 15879.400000000001], [1009.0, 8439.25], [1021.0, 18845.25], [1019.0, 22770.0], [1007.0, 11964.285714285716], [1005.0, 35906.5], [995.0, 8064.8], [993.0, 14681.75], [999.0, 13898.833333333334], [997.0, 18769.0], [1003.0, 14773.333333333332], [1001.0, 4028.5], [1015.0, 15954.400000000001], [1013.0, 11973.857142857143], [1011.0, 13793.166666666666], [1082.0, 13061.5], [1078.0, 10886.5], [1062.0, 15357.600000000002], [1058.0, 23340.6], [1066.0, 15733.2], [1070.0, 16040.6], [1086.0, 7014.333333333333], [1074.0, 15939.2], [1054.0, 10923.625], [1026.0, 11121.625], [1030.0, 15667.4], [1034.0, 11756.57142857143], [1038.0, 15646.000000000002], [1050.0, 15922.8], [1046.0, 11629.57142857143], [1042.0, 20299.0], [1146.0, 12656.0], [1142.0, 12159.0], [1122.0, 14825.4], [1126.0, 10206.699999999999], [1150.0, 10245.6], [1130.0, 14423.0], [1134.0, 10889.0], [1138.0, 13874.2], [1102.0, 12528.166666666666], [1098.0, 12417.833333333334], [1094.0, 15527.8], [1090.0, 11718.571428571428], [1118.0, 14571.6], [1114.0, 17530.5], [1110.0, 11940.0], [1106.0, 12840.666666666666], [1214.0, 7996.000000000001], [1202.0, 13677.0], [1186.0, 14200.75], [1190.0, 10390.8], [1194.0, 10903.5], [1198.0, 16305.0], [1206.0, 16892.0], [1210.0, 11001.166666666666], [1154.0, 11308.428571428572], [1182.0, 16079.5], [1162.0, 10511.142857142857], [1158.0, 21178.0], [1166.0, 10424.0], [1178.0, 21362.333333333332], [1174.0, 7018.0], [1170.0, 9625.625], [1270.0, 10712.833333333334], [1266.0, 10551.166666666666], [1274.0, 12539.0], [1254.0, 6004.0], [1258.0, 6107.545454545454], [1262.0, 12178.0], [1278.0, 15407.25], [1250.0, 19163.333333333332], [1218.0, 9814.857142857143], [1222.0, 10462.142857142857], [1230.0, 14231.666666666666], [1226.0, 8369.8], [1246.0, 11222.5], [1242.0, 11468.875], [1238.0, 12750.6], [1234.0, 10074.57142857143], [1342.0, 13918.5], [1330.0, 11712.8], [1314.0, 10894.166666666666], [1318.0, 6098.333333333332], [1322.0, 6545.9], [1326.0, 11986.0], [1338.0, 17843.666666666668], [1334.0, 17683.0], [1294.0, 14890.5], [1310.0, 8837.0], [1282.0, 16264.857142857141], [1286.0, 11907.6], [1290.0, 6902.500000000001], [1298.0, 12163.4], [1302.0, 26837.5], [1306.0, 12544.333333333332], [1398.0, 12445.0], [1362.0, 4799.555555555555], [1358.0, 8638.714285714284], [1394.0, 7774.875], [1402.0, 13599.25], [1406.0, 8996.5], [1378.0, 9594.666666666668], [1382.0, 7858.125], [1386.0, 17330.0], [1390.0, 16984.0], [1354.0, 13755.75], [1346.0, 2552.0], [1350.0, 10513.75], [1366.0, 10504.5], [1370.0, 9316.0], [1374.0, 9239.333333333334], [1438.0, 17114.0], [1434.0, 16979.166666666664], [1430.0, 13223.0], [1426.0, 13049.25], [1414.0, 9750.333333333334], [1410.0, 23680.5], [1418.0, 13361.0], [1442.0, 7359.0], [1450.0, 12695.75], [1446.0, 16041.0], [1454.0, 10398.4], [1470.0, 12453.5], [1466.0, 12618.75], [1462.0, 8973.5], [1422.0, 16601.333333333332], [1458.0, 16436.0], [1474.0, 12644.75], [1530.0, 15042.333333333334], [1502.0, 10300.0], [1478.0, 15938.333333333334], [1498.0, 5872.2], [1494.0, 9416.333333333334], [1490.0, 10567.5], [1482.0, 16244.333333333334], [1522.0, 15832.0], [1486.0, 21277.333333333332], [1506.0, 12399.75], [1534.0, 22011.5], [1510.0, 8978.5], [1514.0, 10042.2], [1518.0, 10499.6], [1526.0, 12189.25], [1594.0, 7929.333333333333], [1586.0, 11476.833333333334], [1570.0, 8310.833333333334], [1574.0, 11513.5], [1578.0, 10583.5], [1582.0, 11433.25], [1598.0, 4865.75], [1590.0, 6206.625], [1538.0, 12157.75], [1566.0, 14898.666666666666], [1562.0, 11817.25], [1542.0, 9167.0], [1550.0, 11459.0], [1546.0, 25932.0], [1558.0, 11674.75], [1554.0, 8528.333333333334], [1650.0, 9633.25], [1658.0, 9887.0], [1654.0, 17805.0], [1662.0, 17465.0], [1642.0, 10022.25], [1646.0, 6835.5], [1602.0, 6299.125], [1626.0, 7540.166666666666], [1622.0, 5897.375], [1618.0, 19494.0], [1630.0, 6142.25], [1614.0, 8622.5], [1610.0, 6299.0], [1606.0, 7710.666666666667], [1634.0, 10333.5], [1638.0, 12909.333333333334], [1678.0, 12026.333333333334], [1722.0, 6960.4], [1686.0, 6522.875], [1682.0, 6824.666666666666], [1670.0, 7759.2], [1674.0, 17473.0], [1666.0, 6913.5], [1690.0, 11820.0], [1694.0, 17188.0], [1718.0, 11225.333333333334], [1714.0, 15916.5], [1702.0, 7688.8], [1710.0, 8419.833333333334], [1706.0, 16338.5], [1726.0, 8439.5], [1698.0, 16431.0], [1742.0, 5058.714285714286], [1782.0, 3999.4444444444443], [1778.0, 13126.0], [1750.0, 6451.8], [1746.0, 10176.0], [1730.0, 10438.0], [1758.0, 16725.0], [1754.0, 13677.5], [1738.0, 10192.666666666666], [1734.0, 14361.0], [1766.0, 7132.75], [1770.0, 7261.75], [1774.0, 6228.0], [1762.0, 6192.0], [1790.0, 4417.142857142857], [1786.0, 3366.8181818181815], [1806.0, 5052.2], [1798.0, 8009.333333333333], [1810.0, 6989.666666666667], [1814.0, 10071.5], [1826.0, 4109.166666666667], [1830.0, 9228.5], [1838.0, 8747.0], [1834.0, 8933.5], [1802.0, 5120.8], [1822.0, 5304.0], [1794.0, 11799.0], [1818.0, 9677.5], [1854.0, 8139.0], [1850.0, 7624.5], [1846.0, 8178.0], [1842.0, 7899.0], [1914.0, 5879.5], [1918.0, 5813.5], [1910.0, 5833.5], [1906.0, 6274.0], [1902.0, 6304.5], [1898.0, 6259.5], [1894.0, 6545.5], [1890.0, 6359.5], [1886.0, 6618.0], [1858.0, 7429.5], [1862.0, 4704.0], [1870.0, 5263.333333333333], [1866.0, 7218.5], [1882.0, 5036.666666666667], [1874.0, 6979.0], [1878.0, 4481.0], [1978.0, 5747.0], [1982.0, 5492.0], [1974.0, 5774.0], [1970.0, 6134.0], [1966.0, 6210.0], [1962.0, 6737.0], [1958.0, 4477.0], [1954.0, 4311.0], [1950.0, 4533.0], [1926.0, 5578.5], [1922.0, 5675.5], [1934.0, 7605.0], [1930.0, 5421.0], [1946.0, 4826.0], [1942.0, 3973.3333333333335], [1938.0, 4175.333333333333], [1998.0, 3338.0], [1994.0, 3963.0], [1990.0, 5012.0], [1986.0, 5264.0], [1079.0, 15466.800000000001], [1083.0, 15327.599999999999], [1087.0, 22989.8], [1059.0, 13403.333333333332], [1063.0, 18285.0], [1071.0, 18241.25], [1067.0, 23622.333333333332], [1055.0, 24199.0], [1027.0, 18508.25], [1031.0, 15828.000000000002], [1035.0, 13865.0], [1039.0, 10420.749999999998], [1075.0, 17681.75], [1051.0, 10429.625], [1047.0, 18587.75], [1043.0, 16028.333333333332], [1143.0, 12612.666666666668], [1151.0, 18570.4], [1147.0, 17696.4], [1123.0, 22806.333333333332], [1127.0, 15332.6], [1135.0, 14449.2], [1131.0, 31853.0], [1139.0, 13994.0], [1103.0, 13454.166666666668], [1095.0, 12855.833333333334], [1091.0, 33120.0], [1099.0, 22523.0], [1119.0, 10221.0], [1107.0, 22856.333333333332], [1111.0, 9559.333333333332], [1115.0, 22034.333333333332], [1215.0, 6783.8], [1211.0, 10129.142857142857], [1191.0, 21189.666666666668], [1195.0, 16739.8], [1199.0, 16007.75], [1187.0, 20958.666666666668], [1207.0, 10515.428571428572], [1203.0, 13565.0], [1183.0, 11915.666666666668], [1179.0, 13130.2], [1155.0, 11970.666666666666], [1163.0, 15955.25], [1159.0, 11666.166666666666], [1167.0, 11063.714285714284], [1171.0, 13303.2], [1175.0, 25318.0], [1275.0, 10932.0], [1267.0, 9938.857142857143], [1279.0, 19631.0], [1251.0, 8368.222222222223], [1263.0, 9567.571428571428], [1259.0, 4896.363636363637], [1255.0, 7646.6], [1271.0, 7626.5], [1247.0, 10609.833333333334], [1227.0, 10080.0], [1223.0, 8382.375], [1219.0, 9480.0], [1231.0, 10826.75], [1243.0, 5984.166666666667], [1235.0, 8011.833333333333], [1239.0, 28730.5], [1331.0, 11695.8], [1335.0, 11832.4], [1339.0, 17643.333333333332], [1343.0, 7181.2], [1315.0, 8569.0], [1319.0, 7077.444444444444], [1327.0, 9188.0], [1323.0, 9635.0], [1283.0, 15908.0], [1311.0, 17739.666666666668], [1287.0, 6261.923076923076], [1291.0, 10055.333333333334], [1295.0, 6900.6], [1307.0, 12009.857142857143], [1303.0, 7990.111111111111], [1299.0, 18448.666666666668], [1395.0, 9759.5], [1363.0, 8142.285714285714], [1355.0, 4363.0], [1359.0, 13263.25], [1399.0, 11630.8], [1403.0, 10798.2], [1379.0, 6178.363636363638], [1383.0, 7957.333333333333], [1387.0, 17720.0], [1391.0, 11698.0], [1407.0, 7713.333333333333], [1375.0, 5881.0], [1351.0, 4624.333333333333], [1347.0, 13553.625], [1367.0, 13411.8], [1371.0, 13824.25], [1439.0, 10989.0], [1435.0, 10754.2], [1431.0, 13295.25], [1427.0, 13550.75], [1411.0, 13172.75], [1415.0, 11088.2], [1419.0, 13503.0], [1471.0, 8527.0], [1443.0, 14420.4], [1447.0, 16375.0], [1451.0, 10943.6], [1455.0, 10562.666666666666], [1467.0, 10544.4], [1463.0, 13854.2], [1459.0, 7553.6], [1423.0, 9459.5], [1483.0, 12602.5], [1487.0, 10485.4], [1475.0, 9267.333333333332], [1503.0, 12335.5], [1499.0, 12429.5], [1491.0, 18384.0], [1495.0, 22652.5], [1479.0, 16150.666666666666], [1523.0, 11841.75], [1535.0, 8023.428571428572], [1507.0, 9941.599999999999], [1515.0, 15814.666666666666], [1511.0, 22407.0], [1519.0, 15754.0], [1531.0, 14722.333333333334], [1527.0, 12407.25], [1599.0, 4617.615384615385], [1595.0, 8893.8], [1575.0, 11445.5], [1571.0, 10113.333333333332], [1583.0, 11148.0], [1579.0, 11295.75], [1591.0, 4870.636363636364], [1587.0, 7714.166666666667], [1551.0, 11850.25], [1567.0, 14558.0], [1539.0, 10289.666666666668], [1547.0, 8823.375], [1543.0, 21130.5], [1563.0, 6534.125], [1559.0, 15023.333333333334], [1555.0, 8334.666666666666], [1607.0, 6397.625], [1611.0, 6703.75], [1651.0, 12852.666666666666], [1615.0, 7755.0], [1603.0, 7581.166666666667], [1631.0, 7411.666666666667], [1627.0, 7596.166666666667], [1623.0, 8318.4], [1619.0, 5532.4], [1647.0, 12628.666666666666], [1643.0, 6330.857142857143], [1635.0, 7391.666666666666], [1663.0, 11549.5], [1639.0, 10115.75], [1659.0, 8062.4], [1655.0, 9627.75], [1671.0, 8050.8], [1683.0, 11843.333333333334], [1679.0, 6696.666666666667], [1715.0, 8984.75], [1675.0, 7536.4], [1695.0, 11861.0], [1667.0, 17338.5], [1691.0, 11883.0], [1719.0, 4772.0], [1723.0, 6056.333333333333], [1687.0, 5786.285714285714], [1727.0, 4207.2], [1703.0, 9348.0], [1699.0, 8776.75], [1711.0, 7659.4], [1707.0, 7861.2], [1759.0, 9778.25], [1751.0, 5437.833333333333], [1747.0, 5787.166666666666], [1755.0, 8007.5], [1763.0, 7570.25], [1791.0, 11880.0], [1767.0, 7631.5], [1775.0, 9383.666666666666], [1771.0, 10796.0], [1787.0, 4191.25], [1743.0, 7017.4], [1739.0, 17704.0], [1735.0, 15017.5], [1731.0, 15389.5], [1783.0, 12340.5], [1779.0, 12901.0], [1803.0, 7143.333333333333], [1819.0, 5525.25], [1795.0, 5001.833333333334], [1823.0, 9552.5], [1811.0, 3902.4285714285716], [1815.0, 7117.0], [1807.0, 7017.0], [1847.0, 7801.5], [1843.0, 8423.5], [1855.0, 7332.5], [1831.0, 9314.5], [1827.0, 12396.0], [1839.0, 8311.0], [1835.0, 8741.0], [1851.0, 7514.5], [1799.0, 4717.5], [1915.0, 5929.0], [1919.0, 5588.0], [1911.0, 6050.0], [1907.0, 6093.5], [1903.0, 9009.0], [1899.0, 6380.0], [1895.0, 6490.5], [1891.0, 6650.0], [1887.0, 6614.5], [1863.0, 7916.0], [1859.0, 7401.5], [1871.0, 6868.0], [1867.0, 5332.666666666667], [1883.0, 9377.0], [1879.0, 7631.0], [1875.0, 6817.0], [1979.0, 5640.0], [1983.0, 5459.0], [1975.0, 5581.0], [1971.0, 5964.0], [1967.0, 6464.0], [1963.0, 6771.0], [1959.0, 6930.0], [1955.0, 4271.0], [1951.0, 4596.0], [1927.0, 5236.0], [1923.0, 4752.0], [1935.0, 4264.0], [1931.0, 5436.5], [1947.0, 4448.0], [1943.0, 4826.5], [1939.0, 5005.5], [1999.0, 3040.0], [1995.0, 3919.0], [1991.0, 4891.0], [1987.0, 5156.0], [1.0, 38044.375]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[637.2085624999974, 11009.866750000005]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.63141548E12, "maxY": 5119890.366666666, "series": [{"data": [[1.6314156E12, 5119890.366666666], [1.63141578E12, 1293695.6166666667], [1.63141548E12, 635252.0], [1.63141566E12, 115718.8], [1.63141554E12, 4220066.95], [1.63141572E12, 3205312.7333333334]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6314156E12, 0.0], [1.63141578E12, 0.0], [1.63141548E12, 0.0], [1.63141566E12, 0.0], [1.63141554E12, 0.0], [1.63141572E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63141578E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 1904.1382740611768, "minX": 1.63141548E12, "maxY": 63912.62489044703, "series": [{"data": [[1.6314156E12, 63912.62489044703], [1.63141578E12, 43769.65570934254], [1.63141548E12, 4716.467134092901], [1.63141566E12, 1904.1382740611768], [1.63141554E12, 11125.965571205017], [1.63141572E12, 5731.688675765405]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63141578E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 1804.309624471523, "minX": 1.63141548E12, "maxY": 60602.89395267306, "series": [{"data": [[1.6314156E12, 60602.89395267306], [1.63141578E12, 35506.2093425606], [1.63141548E12, 2266.9544259421536], [1.63141566E12, 1804.309624471523], [1.63141554E12, 6676.061424100149], [1.63141572E12, 4302.979712283289]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63141578E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.63141548E12, "maxY": 4.9E-324, "series": [{"data": [[1.6314156E12, 0.0], [1.63141578E12, 0.0], [1.63141548E12, 0.0], [1.63141566E12, 0.0], [1.63141554E12, 0.0], [1.63141572E12, 0.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63141578E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 17.0, "minX": 1.63141548E12, "maxY": 112239.0, "series": [{"data": [[1.6314156E12, 97047.0], [1.63141578E12, 87019.0], [1.63141548E12, 10200.0], [1.63141566E12, 112239.0], [1.63141554E12, 38620.0], [1.63141572E12, 35714.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6314156E12, 89960.4], [1.63141578E12, 45795.700000000004], [1.63141548E12, 5715.000000000001], [1.63141566E12, 4678.6], [1.63141554E12, 29480.799999999996], [1.63141572E12, 23349.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6314156E12, 96351.02], [1.63141578E12, 60440.23], [1.63141548E12, 7997.340000000002], [1.63141566E12, 6112.360000000003], [1.63141554E12, 38064.6], [1.63141572E12, 33072.60000000002]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6314156E12, 95331.1], [1.63141578E12, 47018.75], [1.63141548E12, 6270.4], [1.63141566E12, 4970.0999999999985], [1.63141554E12, 34084.39999999999], [1.63141572E12, 28603.800000000003]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6314156E12, 38896.0], [1.63141578E12, 35320.0], [1.63141548E12, 551.0], [1.63141566E12, 17.0], [1.63141554E12, 663.0], [1.63141572E12, 31.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6314156E12, 61952.0], [1.63141578E12, 43949.5], [1.63141548E12, 3585.0], [1.63141566E12, 269.0], [1.63141554E12, 4322.0], [1.63141572E12, 152.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63141578E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 20.0, "minX": 1.0, "maxY": 95522.0, "series": [{"data": [[2.0, 52722.0], [604.0, 4011.5], [731.0, 48.0], [725.0, 45.0], [3.0, 46753.0], [892.0, 52.0], [940.0, 20.0], [1017.0, 21.0], [4.0, 22148.5], [5.0, 10136.0], [6.0, 8781.5], [7.0, 9885.0], [8.0, 62267.0], [9.0, 62287.0], [10.0, 61802.0], [11.0, 32742.5], [12.0, 79218.0], [13.0, 74184.0], [14.0, 60777.5], [15.0, 66512.5], [16.0, 29082.0], [18.0, 70323.0], [19.0, 7727.5], [20.0, 6834.5], [21.0, 28477.0], [22.0, 44065.5], [23.0, 21968.0], [24.0, 80416.0], [26.0, 20375.0], [28.0, 34125.0], [29.0, 3753.0], [30.0, 35173.0], [31.0, 46835.0], [33.0, 23959.0], [32.0, 41074.0], [35.0, 16601.0], [34.0, 49216.5], [36.0, 7845.0], [37.0, 39450.0], [38.0, 21108.0], [39.0, 29658.0], [40.0, 95522.0], [43.0, 18019.5], [42.0, 4577.5], [44.0, 29917.5], [46.0, 29021.5], [48.0, 42124.5], [50.0, 42914.0], [53.0, 17144.0], [54.0, 25917.5], [57.0, 32581.0], [60.0, 1153.0], [66.0, 16132.0], [69.0, 6029.0], [68.0, 26925.5], [75.0, 27835.0], [78.0, 18160.5], [76.0, 20703.0], [77.0, 28706.0], [81.0, 43436.0], [87.0, 19051.0], [89.0, 5270.0], [115.0, 2053.0], [113.0, 45367.0], [117.0, 4897.0], [129.0, 684.5], [158.0, 44273.0], [191.0, 2961.0], [203.0, 2250.0], [222.0, 1519.5], [245.0, 3242.0], [246.0, 4859.5], [264.0, 3955.5], [1.0, 54455.0], [293.0, 1508.0], [295.0, 2832.0], [318.0, 3326.5], [313.0, 1017.0], [327.0, 5458.0], [330.0, 514.0], [355.0, 1661.0], [367.0, 1571.0], [377.0, 4659.0], [378.0, 63.0], [401.0, 4544.0], [432.0, 44.0], [475.0, 1370.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[129.0, 21005.0], [4.0, 21005.5], [169.0, 21005.0], [100.0, 21005.0], [432.0, 21005.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1017.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 92358.0, "series": [{"data": [[2.0, 22643.0], [604.0, 3170.0], [731.0, 48.0], [725.0, 45.0], [3.0, 37975.0], [892.0, 52.0], [940.0, 20.0], [1017.0, 21.0], [4.0, 14249.0], [5.0, 3485.0], [6.0, 6198.0], [7.0, 7845.0], [8.0, 58282.0], [9.0, 59753.0], [10.0, 55818.0], [11.0, 21755.5], [12.0, 77389.0], [13.0, 73145.0], [14.0, 59131.0], [15.0, 65713.0], [16.0, 25697.5], [18.0, 69567.5], [19.0, 2400.0], [20.0, 1208.0], [21.0, 18792.0], [22.0, 38615.5], [23.0, 12126.0], [24.0, 78863.0], [26.0, 11623.0], [28.0, 28976.5], [29.0, 3352.0], [30.0, 32388.5], [31.0, 42268.5], [33.0, 12422.0], [32.0, 35912.5], [35.0, 7819.0], [34.0, 36566.5], [36.0, 248.5], [37.0, 32496.0], [38.0, 11581.0], [39.0, 24624.5], [40.0, 92358.0], [43.0, 8429.0], [42.0, 4154.0], [44.0, 22278.5], [46.0, 14445.5], [48.0, 35730.5], [50.0, 39009.5], [53.0, 11107.0], [54.0, 22468.0], [57.0, 29295.0], [60.0, 1068.5], [66.0, 5904.0], [69.0, 3458.0], [68.0, 22900.5], [75.0, 23001.0], [78.0, 11884.0], [76.0, 14594.5], [77.0, 24777.0], [81.0, 37269.0], [87.0, 12689.0], [89.0, 5270.0], [115.0, 1575.0], [113.0, 36748.0], [117.0, 4175.0], [129.0, 658.0], [158.0, 38064.5], [191.0, 2961.0], [203.0, 1774.0], [222.0, 1171.5], [245.0, 2185.0], [246.0, 4859.5], [264.0, 2987.5], [1.0, 23100.0], [293.0, 1314.0], [295.0, 2127.0], [318.0, 2564.5], [313.0, 1017.0], [327.0, 3702.0], [330.0, 514.0], [355.0, 1661.0], [367.0, 1571.0], [377.0, 3734.0], [378.0, 63.0], [401.0, 4544.0], [432.0, 44.0], [475.0, 1370.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[129.0, 0.0], [4.0, 0.0], [169.0, 0.0], [100.0, 0.0], [432.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1017.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.983333333333334, "minX": 1.63141548E12, "maxY": 99.78333333333333, "series": [{"data": [[1.63141548E12, 66.01666666666667], [1.63141566E12, 66.88333333333334], [1.63141554E12, 33.983333333333334], [1.63141572E12, 99.78333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63141572E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.63141548E12, "maxY": 89.55, "series": [{"data": [[1.6314156E12, 19.016666666666666], [1.63141578E12, 9.633333333333333], [1.63141548E12, 35.21666666666667], [1.63141566E12, 66.88333333333334], [1.63141554E12, 39.71666666666667], [1.63141572E12, 89.55]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63141548E12, 2.816666666666667], [1.63141566E12, 0.13333333333333333], [1.63141554E12, 2.8833333333333333], [1.63141572E12, 0.8166666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.ConnectException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63141578E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.63141548E12, "maxY": 89.55, "series": [{"data": [[1.63141548E12, 2.816666666666667], [1.63141566E12, 0.13333333333333333], [1.63141554E12, 2.8833333333333333], [1.63141572E12, 0.8166666666666667]], "isOverall": false, "label": "HTTP请求-failure", "isController": false}, {"data": [[1.6314156E12, 19.016666666666666], [1.63141578E12, 9.633333333333333], [1.63141548E12, 35.21666666666667], [1.63141566E12, 66.88333333333334], [1.63141554E12, 39.71666666666667], [1.63141572E12, 89.55]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63141578E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.63141548E12, "maxY": 89.55, "series": [{"data": [[1.6314156E12, 19.016666666666666], [1.63141578E12, 9.633333333333333], [1.63141548E12, 35.21666666666667], [1.63141566E12, 66.88333333333334], [1.63141554E12, 39.71666666666667], [1.63141572E12, 89.55]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63141548E12, 2.816666666666667], [1.63141566E12, 0.13333333333333333], [1.63141554E12, 2.8833333333333333], [1.63141572E12, 0.8166666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63141578E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

