/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 51.0, "minX": 0.0, "maxY": 122345.0, "series": [{"data": [[0.0, 51.0], [0.1, 78.0], [0.2, 140.0], [0.3, 153.0], [0.4, 165.0], [0.5, 195.0], [0.6, 222.0], [0.7, 250.0], [0.8, 305.0], [0.9, 311.0], [1.0, 324.0], [1.1, 351.0], [1.2, 376.0], [1.3, 382.0], [1.4, 386.0], [1.5, 424.0], [1.6, 490.0], [1.7, 556.0], [1.8, 583.0], [1.9, 799.0], [2.0, 930.0], [2.1, 5441.0], [2.2, 5484.0], [2.3, 5533.0], [2.4, 5595.0], [2.5, 5628.0], [2.6, 5656.0], [2.7, 5676.0], [2.8, 5687.0], [2.9, 5744.0], [3.0, 5748.0], [3.1, 5768.0], [3.2, 5787.0], [3.3, 5816.0], [3.4, 5861.0], [3.5, 5871.0], [3.6, 5889.0], [3.7, 5938.0], [3.8, 5959.0], [3.9, 5984.0], [4.0, 6024.0], [4.1, 6066.0], [4.2, 6274.0], [4.3, 9529.0], [4.4, 9672.0], [4.5, 9803.0], [4.6, 9863.0], [4.7, 9931.0], [4.8, 9944.0], [4.9, 9975.0], [5.0, 10009.0], [5.1, 10109.0], [5.2, 10177.0], [5.3, 10344.0], [5.4, 10602.0], [5.5, 12673.0], [5.6, 12815.0], [5.7, 13845.0], [5.8, 13915.0], [5.9, 13972.0], [6.0, 13977.0], [6.1, 14102.0], [6.2, 14157.0], [6.3, 14229.0], [6.4, 14262.0], [6.5, 14293.0], [6.6, 14318.0], [6.7, 14342.0], [6.8, 14354.0], [6.9, 14396.0], [7.0, 14430.0], [7.1, 14458.0], [7.2, 14496.0], [7.3, 14536.0], [7.4, 14546.0], [7.5, 14623.0], [7.6, 14633.0], [7.7, 14764.0], [7.8, 14796.0], [7.9, 14821.0], [8.0, 14867.0], [8.1, 17064.0], [8.2, 17405.0], [8.3, 17711.0], [8.4, 17791.0], [8.5, 17897.0], [8.6, 17973.0], [8.7, 18039.0], [8.8, 18078.0], [8.9, 18121.0], [9.0, 18212.0], [9.1, 18247.0], [9.2, 18354.0], [9.3, 18413.0], [9.4, 18483.0], [9.5, 18614.0], [9.6, 18748.0], [9.7, 18870.0], [9.8, 20362.0], [9.9, 20743.0], [10.0, 21070.0], [10.1, 21550.0], [10.2, 21803.0], [10.3, 21883.0], [10.4, 21966.0], [10.5, 21978.0], [10.6, 22021.0], [10.7, 22208.0], [10.8, 22331.0], [10.9, 22402.0], [11.0, 22710.0], [11.1, 23949.0], [11.2, 24459.0], [11.3, 24725.0], [11.4, 25129.0], [11.5, 25199.0], [11.6, 25272.0], [11.7, 25320.0], [11.8, 25376.0], [11.9, 25386.0], [12.0, 25443.0], [12.1, 25485.0], [12.2, 25507.0], [12.3, 25551.0], [12.4, 25604.0], [12.5, 25616.0], [12.6, 25694.0], [12.7, 25699.0], [12.8, 25756.0], [12.9, 25774.0], [13.0, 25832.0], [13.1, 25962.0], [13.2, 28231.0], [13.3, 28281.0], [13.4, 28366.0], [13.5, 28515.0], [13.6, 29029.0], [13.7, 29206.0], [13.8, 29294.0], [13.9, 29393.0], [14.0, 29453.0], [14.1, 29465.0], [14.2, 29509.0], [14.3, 29577.0], [14.4, 29650.0], [14.5, 29723.0], [14.6, 29781.0], [14.7, 29921.0], [14.8, 29964.0], [14.9, 29994.0], [15.0, 30089.0], [15.1, 30105.0], [15.2, 30225.0], [15.3, 30256.0], [15.4, 30724.0], [15.5, 32108.0], [15.6, 32470.0], [15.7, 32561.0], [15.8, 32707.0], [15.9, 32928.0], [16.0, 33046.0], [16.1, 33077.0], [16.2, 33145.0], [16.3, 33192.0], [16.4, 33255.0], [16.5, 33421.0], [16.6, 33556.0], [16.7, 33650.0], [16.8, 33804.0], [16.9, 34065.0], [17.0, 34426.0], [17.1, 34454.0], [17.2, 35003.0], [17.3, 35494.0], [17.4, 35642.0], [17.5, 35739.0], [17.6, 35866.0], [17.7, 35940.0], [17.8, 36008.0], [17.9, 36082.0], [18.0, 36351.0], [18.1, 36489.0], [18.2, 36685.0], [18.3, 36749.0], [18.4, 36918.0], [18.5, 37066.0], [18.6, 37267.0], [18.7, 37353.0], [18.8, 37411.0], [18.9, 37556.0], [19.0, 37684.0], [19.1, 37838.0], [19.2, 37931.0], [19.3, 37993.0], [19.4, 38216.0], [19.5, 38258.0], [19.6, 38557.0], [19.7, 38689.0], [19.8, 38848.0], [19.9, 38873.0], [20.0, 38969.0], [20.1, 39102.0], [20.2, 39256.0], [20.3, 39290.0], [20.4, 39355.0], [20.5, 39407.0], [20.6, 39629.0], [20.7, 39633.0], [20.8, 39718.0], [20.9, 39871.0], [21.0, 40018.0], [21.1, 40090.0], [21.2, 40160.0], [21.3, 40233.0], [21.4, 40342.0], [21.5, 40444.0], [21.6, 40584.0], [21.7, 40647.0], [21.8, 40825.0], [21.9, 40835.0], [22.0, 40952.0], [22.1, 41010.0], [22.2, 41111.0], [22.3, 41240.0], [22.4, 41705.0], [22.5, 41812.0], [22.6, 42217.0], [22.7, 42529.0], [22.8, 42645.0], [22.9, 42666.0], [23.0, 42867.0], [23.1, 42883.0], [23.2, 42949.0], [23.3, 43246.0], [23.4, 43553.0], [23.5, 43716.0], [23.6, 43807.0], [23.7, 43818.0], [23.8, 43920.0], [23.9, 43979.0], [24.0, 44105.0], [24.1, 44318.0], [24.2, 44375.0], [24.3, 44380.0], [24.4, 44512.0], [24.5, 44687.0], [24.6, 44776.0], [24.7, 45094.0], [24.8, 45203.0], [24.9, 45325.0], [25.0, 45398.0], [25.1, 45555.0], [25.2, 45696.0], [25.3, 45775.0], [25.4, 45874.0], [25.5, 46065.0], [25.6, 46291.0], [25.7, 46422.0], [25.8, 46489.0], [25.9, 46543.0], [26.0, 46559.0], [26.1, 46717.0], [26.2, 47019.0], [26.3, 47131.0], [26.4, 47229.0], [26.5, 47282.0], [26.6, 47330.0], [26.7, 47344.0], [26.8, 47490.0], [26.9, 47583.0], [27.0, 47678.0], [27.1, 47742.0], [27.2, 48048.0], [27.3, 48103.0], [27.4, 48163.0], [27.5, 48248.0], [27.6, 48417.0], [27.7, 48426.0], [27.8, 48557.0], [27.9, 48581.0], [28.0, 48634.0], [28.1, 48733.0], [28.2, 48790.0], [28.3, 48901.0], [28.4, 49035.0], [28.5, 49070.0], [28.6, 49149.0], [28.7, 49227.0], [28.8, 49394.0], [28.9, 49456.0], [29.0, 49547.0], [29.1, 49630.0], [29.2, 49656.0], [29.3, 49676.0], [29.4, 49828.0], [29.5, 49864.0], [29.6, 49913.0], [29.7, 49967.0], [29.8, 50060.0], [29.9, 50159.0], [30.0, 50209.0], [30.1, 50228.0], [30.2, 50268.0], [30.3, 50455.0], [30.4, 50545.0], [30.5, 50623.0], [30.6, 50709.0], [30.7, 50744.0], [30.8, 50805.0], [30.9, 50856.0], [31.0, 50929.0], [31.1, 51011.0], [31.2, 51155.0], [31.3, 51199.0], [31.4, 51251.0], [31.5, 51298.0], [31.6, 51397.0], [31.7, 51405.0], [31.8, 51425.0], [31.9, 51444.0], [32.0, 51464.0], [32.1, 51530.0], [32.2, 51556.0], [32.3, 51568.0], [32.4, 51725.0], [32.5, 51805.0], [32.6, 51875.0], [32.7, 51904.0], [32.8, 51965.0], [32.9, 52009.0], [33.0, 52089.0], [33.1, 52125.0], [33.2, 52154.0], [33.3, 52178.0], [33.4, 52228.0], [33.5, 52240.0], [33.6, 52299.0], [33.7, 52311.0], [33.8, 52475.0], [33.9, 52491.0], [34.0, 52515.0], [34.1, 52570.0], [34.2, 52705.0], [34.3, 52878.0], [34.4, 53003.0], [34.5, 53050.0], [34.6, 53261.0], [34.7, 53561.0], [34.8, 53631.0], [34.9, 53788.0], [35.0, 53930.0], [35.1, 54100.0], [35.2, 54321.0], [35.3, 54606.0], [35.4, 55002.0], [35.5, 55215.0], [35.6, 55345.0], [35.7, 55508.0], [35.8, 55546.0], [35.9, 55697.0], [36.0, 55829.0], [36.1, 55912.0], [36.2, 55945.0], [36.3, 56078.0], [36.4, 56327.0], [36.5, 56421.0], [36.6, 56462.0], [36.7, 56506.0], [36.8, 56559.0], [36.9, 56581.0], [37.0, 56687.0], [37.1, 56814.0], [37.2, 56851.0], [37.3, 56869.0], [37.4, 56963.0], [37.5, 57004.0], [37.6, 57120.0], [37.7, 57154.0], [37.8, 57323.0], [37.9, 57418.0], [38.0, 57505.0], [38.1, 57600.0], [38.2, 57695.0], [38.3, 57737.0], [38.4, 57814.0], [38.5, 57896.0], [38.6, 58101.0], [38.7, 58312.0], [38.8, 58409.0], [38.9, 58433.0], [39.0, 58538.0], [39.1, 58634.0], [39.2, 58936.0], [39.3, 58966.0], [39.4, 59129.0], [39.5, 59193.0], [39.6, 59312.0], [39.7, 59492.0], [39.8, 59601.0], [39.9, 59679.0], [40.0, 59766.0], [40.1, 59791.0], [40.2, 59837.0], [40.3, 59877.0], [40.4, 59949.0], [40.5, 59963.0], [40.6, 59991.0], [40.7, 60039.0], [40.8, 60210.0], [40.9, 60270.0], [41.0, 60340.0], [41.1, 60426.0], [41.2, 60471.0], [41.3, 60499.0], [41.4, 60621.0], [41.5, 60723.0], [41.6, 60761.0], [41.7, 60823.0], [41.8, 60977.0], [41.9, 61063.0], [42.0, 61371.0], [42.1, 61516.0], [42.2, 61570.0], [42.3, 61614.0], [42.4, 62051.0], [42.5, 62408.0], [42.6, 62737.0], [42.7, 62885.0], [42.8, 62980.0], [42.9, 63048.0], [43.0, 63311.0], [43.1, 63322.0], [43.2, 63386.0], [43.3, 63521.0], [43.4, 63565.0], [43.5, 63580.0], [43.6, 63630.0], [43.7, 63661.0], [43.8, 63776.0], [43.9, 63944.0], [44.0, 64115.0], [44.1, 64201.0], [44.2, 64309.0], [44.3, 64390.0], [44.4, 64552.0], [44.5, 64686.0], [44.6, 64805.0], [44.7, 64830.0], [44.8, 64895.0], [44.9, 64921.0], [45.0, 64986.0], [45.1, 65124.0], [45.2, 65179.0], [45.3, 65222.0], [45.4, 65397.0], [45.5, 65528.0], [45.6, 65604.0], [45.7, 65661.0], [45.8, 65804.0], [45.9, 65822.0], [46.0, 66096.0], [46.1, 66217.0], [46.2, 66331.0], [46.3, 66483.0], [46.4, 66577.0], [46.5, 66606.0], [46.6, 67272.0], [46.7, 67364.0], [46.8, 67517.0], [46.9, 67578.0], [47.0, 67792.0], [47.1, 67964.0], [47.2, 68047.0], [47.3, 68085.0], [47.4, 68182.0], [47.5, 68212.0], [47.6, 68431.0], [47.7, 68476.0], [47.8, 68668.0], [47.9, 68716.0], [48.0, 68960.0], [48.1, 69112.0], [48.2, 69267.0], [48.3, 69308.0], [48.4, 69545.0], [48.5, 69670.0], [48.6, 69792.0], [48.7, 70038.0], [48.8, 70702.0], [48.9, 70714.0], [49.0, 71040.0], [49.1, 71296.0], [49.2, 71568.0], [49.3, 71766.0], [49.4, 71926.0], [49.5, 72005.0], [49.6, 72116.0], [49.7, 72267.0], [49.8, 72372.0], [49.9, 72404.0], [50.0, 72511.0], [50.1, 72543.0], [50.2, 73016.0], [50.3, 73305.0], [50.4, 73398.0], [50.5, 73425.0], [50.6, 73552.0], [50.7, 73583.0], [50.8, 73704.0], [50.9, 73822.0], [51.0, 73876.0], [51.1, 74002.0], [51.2, 74025.0], [51.3, 74057.0], [51.4, 74155.0], [51.5, 74167.0], [51.6, 74249.0], [51.7, 74303.0], [51.8, 74382.0], [51.9, 74439.0], [52.0, 74528.0], [52.1, 74673.0], [52.2, 74816.0], [52.3, 75003.0], [52.4, 75268.0], [52.5, 75651.0], [52.6, 75753.0], [52.7, 75916.0], [52.8, 76449.0], [52.9, 76467.0], [53.0, 76582.0], [53.1, 76819.0], [53.2, 76952.0], [53.3, 77018.0], [53.4, 77263.0], [53.5, 77319.0], [53.6, 77616.0], [53.7, 77717.0], [53.8, 77740.0], [53.9, 77795.0], [54.0, 77936.0], [54.1, 78014.0], [54.2, 78207.0], [54.3, 78351.0], [54.4, 78568.0], [54.5, 78714.0], [54.6, 78736.0], [54.7, 78966.0], [54.8, 79022.0], [54.9, 79078.0], [55.0, 79185.0], [55.1, 79320.0], [55.2, 79386.0], [55.3, 79578.0], [55.4, 79728.0], [55.5, 79770.0], [55.6, 80040.0], [55.7, 80248.0], [55.8, 80305.0], [55.9, 80348.0], [56.0, 80360.0], [56.1, 80391.0], [56.2, 80500.0], [56.3, 80517.0], [56.4, 80600.0], [56.5, 80610.0], [56.6, 80664.0], [56.7, 80720.0], [56.8, 80925.0], [56.9, 80929.0], [57.0, 81014.0], [57.1, 81048.0], [57.2, 81281.0], [57.3, 81397.0], [57.4, 81632.0], [57.5, 81698.0], [57.6, 82018.0], [57.7, 82062.0], [57.8, 82157.0], [57.9, 82208.0], [58.0, 82257.0], [58.1, 82314.0], [58.2, 82381.0], [58.3, 82437.0], [58.4, 82511.0], [58.5, 82605.0], [58.6, 82803.0], [58.7, 82810.0], [58.8, 82949.0], [58.9, 82964.0], [59.0, 83093.0], [59.1, 83139.0], [59.2, 83269.0], [59.3, 83394.0], [59.4, 83443.0], [59.5, 83451.0], [59.6, 83490.0], [59.7, 83641.0], [59.8, 83752.0], [59.9, 83821.0], [60.0, 83909.0], [60.1, 83942.0], [60.2, 84123.0], [60.3, 84206.0], [60.4, 84277.0], [60.5, 84304.0], [60.6, 84533.0], [60.7, 84640.0], [60.8, 84690.0], [60.9, 84852.0], [61.0, 84997.0], [61.1, 85186.0], [61.2, 85813.0], [61.3, 85863.0], [61.4, 86068.0], [61.5, 86310.0], [61.6, 86611.0], [61.7, 86789.0], [61.8, 86991.0], [61.9, 87045.0], [62.0, 87185.0], [62.1, 87280.0], [62.2, 87422.0], [62.3, 87477.0], [62.4, 87594.0], [62.5, 87642.0], [62.6, 87707.0], [62.7, 87780.0], [62.8, 87813.0], [62.9, 87843.0], [63.0, 87862.0], [63.1, 87888.0], [63.2, 87930.0], [63.3, 88004.0], [63.4, 88073.0], [63.5, 88133.0], [63.6, 88224.0], [63.7, 88333.0], [63.8, 88413.0], [63.9, 88519.0], [64.0, 88562.0], [64.1, 88676.0], [64.2, 88740.0], [64.3, 88804.0], [64.4, 89130.0], [64.5, 89177.0], [64.6, 89296.0], [64.7, 89359.0], [64.8, 89546.0], [64.9, 89580.0], [65.0, 89814.0], [65.1, 89943.0], [65.2, 90045.0], [65.3, 90082.0], [65.4, 90184.0], [65.5, 90231.0], [65.6, 90289.0], [65.7, 90537.0], [65.8, 90577.0], [65.9, 90588.0], [66.0, 90709.0], [66.1, 90808.0], [66.2, 90850.0], [66.3, 90867.0], [66.4, 91002.0], [66.5, 91122.0], [66.6, 91288.0], [66.7, 91515.0], [66.8, 91587.0], [66.9, 92008.0], [67.0, 92679.0], [67.1, 92890.0], [67.2, 92979.0], [67.3, 93072.0], [67.4, 93148.0], [67.5, 93208.0], [67.6, 93354.0], [67.7, 93447.0], [67.8, 93578.0], [67.9, 93721.0], [68.0, 93790.0], [68.1, 93806.0], [68.2, 93868.0], [68.3, 93879.0], [68.4, 93950.0], [68.5, 93965.0], [68.6, 94093.0], [68.7, 94105.0], [68.8, 94140.0], [68.9, 94188.0], [69.0, 94323.0], [69.1, 94405.0], [69.2, 94540.0], [69.3, 94543.0], [69.4, 94582.0], [69.5, 94605.0], [69.6, 94647.0], [69.7, 94686.0], [69.8, 94762.0], [69.9, 94814.0], [70.0, 94939.0], [70.1, 95006.0], [70.2, 95071.0], [70.3, 95113.0], [70.4, 95278.0], [70.5, 95355.0], [70.6, 95395.0], [70.7, 95400.0], [70.8, 95539.0], [70.9, 95545.0], [71.0, 95593.0], [71.1, 95699.0], [71.2, 95739.0], [71.3, 95758.0], [71.4, 95792.0], [71.5, 95874.0], [71.6, 95930.0], [71.7, 95983.0], [71.8, 96006.0], [71.9, 96038.0], [72.0, 96084.0], [72.1, 96123.0], [72.2, 96165.0], [72.3, 96232.0], [72.4, 96252.0], [72.5, 96329.0], [72.6, 96367.0], [72.7, 96395.0], [72.8, 96426.0], [72.9, 96436.0], [73.0, 96510.0], [73.1, 96578.0], [73.2, 96594.0], [73.3, 96623.0], [73.4, 96661.0], [73.5, 96686.0], [73.6, 96800.0], [73.7, 96880.0], [73.8, 96941.0], [73.9, 97115.0], [74.0, 97136.0], [74.1, 97182.0], [74.2, 97200.0], [74.3, 97272.0], [74.4, 97329.0], [74.5, 97386.0], [74.6, 97503.0], [74.7, 97650.0], [74.8, 97671.0], [74.9, 97917.0], [75.0, 98064.0], [75.1, 98272.0], [75.2, 98373.0], [75.3, 98574.0], [75.4, 98575.0], [75.5, 98744.0], [75.6, 99115.0], [75.7, 99226.0], [75.8, 99306.0], [75.9, 99650.0], [76.0, 99687.0], [76.1, 100065.0], [76.2, 100099.0], [76.3, 100148.0], [76.4, 100191.0], [76.5, 100283.0], [76.6, 100315.0], [76.7, 100415.0], [76.8, 100530.0], [76.9, 100765.0], [77.0, 100926.0], [77.1, 101037.0], [77.2, 101085.0], [77.3, 101107.0], [77.4, 101161.0], [77.5, 101314.0], [77.6, 101328.0], [77.7, 101370.0], [77.8, 101433.0], [77.9, 101555.0], [78.0, 101635.0], [78.1, 101805.0], [78.2, 101816.0], [78.3, 102043.0], [78.4, 102072.0], [78.5, 102161.0], [78.6, 102998.0], [78.7, 103188.0], [78.8, 103308.0], [78.9, 103573.0], [79.0, 103643.0], [79.1, 103701.0], [79.2, 103729.0], [79.3, 103795.0], [79.4, 103865.0], [79.5, 103911.0], [79.6, 103984.0], [79.7, 104034.0], [79.8, 104037.0], [79.9, 104127.0], [80.0, 104221.0], [80.1, 104345.0], [80.2, 104370.0], [80.3, 104528.0], [80.4, 104556.0], [80.5, 104579.0], [80.6, 104613.0], [80.7, 104641.0], [80.8, 104646.0], [80.9, 104685.0], [81.0, 104709.0], [81.1, 104726.0], [81.2, 104731.0], [81.3, 104812.0], [81.4, 104815.0], [81.5, 104829.0], [81.6, 104844.0], [81.7, 104884.0], [81.8, 104909.0], [81.9, 104940.0], [82.0, 104945.0], [82.1, 104970.0], [82.2, 104979.0], [82.3, 105005.0], [82.4, 105014.0], [82.5, 105029.0], [82.6, 105080.0], [82.7, 105086.0], [82.8, 105094.0], [82.9, 105157.0], [83.0, 105162.0], [83.1, 105192.0], [83.2, 105232.0], [83.3, 105303.0], [83.4, 105324.0], [83.5, 105386.0], [83.6, 105429.0], [83.7, 105471.0], [83.8, 105488.0], [83.9, 105551.0], [84.0, 105623.0], [84.1, 105716.0], [84.2, 105755.0], [84.3, 105789.0], [84.4, 105821.0], [84.5, 106379.0], [84.6, 106463.0], [84.7, 106691.0], [84.8, 106849.0], [84.9, 106994.0], [85.0, 107044.0], [85.1, 107310.0], [85.2, 107367.0], [85.3, 107449.0], [85.4, 107578.0], [85.5, 107778.0], [85.6, 107857.0], [85.7, 107981.0], [85.8, 108043.0], [85.9, 108121.0], [86.0, 108159.0], [86.1, 108226.0], [86.2, 108299.0], [86.3, 108371.0], [86.4, 108397.0], [86.5, 108496.0], [86.6, 108517.0], [86.7, 108610.0], [86.8, 108686.0], [86.9, 108784.0], [87.0, 108987.0], [87.1, 109050.0], [87.2, 109059.0], [87.3, 109268.0], [87.4, 109378.0], [87.5, 109487.0], [87.6, 109526.0], [87.7, 109885.0], [87.8, 109936.0], [87.9, 110150.0], [88.0, 110178.0], [88.1, 110277.0], [88.2, 110554.0], [88.3, 110923.0], [88.4, 110972.0], [88.5, 111108.0], [88.6, 111240.0], [88.7, 111540.0], [88.8, 111554.0], [88.9, 111736.0], [89.0, 111765.0], [89.1, 111790.0], [89.2, 111820.0], [89.3, 111897.0], [89.4, 111934.0], [89.5, 112006.0], [89.6, 112045.0], [89.7, 112284.0], [89.8, 112381.0], [89.9, 112522.0], [90.0, 112575.0], [90.1, 112679.0], [90.2, 113100.0], [90.3, 113169.0], [90.4, 113271.0], [90.5, 113720.0], [90.6, 113846.0], [90.7, 114147.0], [90.8, 114250.0], [90.9, 114400.0], [91.0, 114634.0], [91.1, 114762.0], [91.2, 114804.0], [91.3, 114887.0], [91.4, 114906.0], [91.5, 114959.0], [91.6, 114986.0], [91.7, 115061.0], [91.8, 115125.0], [91.9, 115176.0], [92.0, 115222.0], [92.1, 115281.0], [92.2, 115301.0], [92.3, 115316.0], [92.4, 115360.0], [92.5, 115378.0], [92.6, 115411.0], [92.7, 115473.0], [92.8, 115496.0], [92.9, 115501.0], [93.0, 115504.0], [93.1, 115513.0], [93.2, 115518.0], [93.3, 115560.0], [93.4, 115577.0], [93.5, 115652.0], [93.6, 115697.0], [93.7, 115732.0], [93.8, 115759.0], [93.9, 115804.0], [94.0, 115811.0], [94.1, 115858.0], [94.2, 115923.0], [94.3, 116015.0], [94.4, 116083.0], [94.5, 116092.0], [94.6, 116146.0], [94.7, 116359.0], [94.8, 116401.0], [94.9, 116495.0], [95.0, 116576.0], [95.1, 116950.0], [95.2, 117222.0], [95.3, 117615.0], [95.4, 118044.0], [95.5, 118105.0], [95.6, 118225.0], [95.7, 118279.0], [95.8, 118292.0], [95.9, 118428.0], [96.0, 118506.0], [96.1, 118563.0], [96.2, 118600.0], [96.3, 118813.0], [96.4, 118840.0], [96.5, 118924.0], [96.6, 118943.0], [96.7, 119049.0], [96.8, 119173.0], [96.9, 119321.0], [97.0, 119420.0], [97.1, 119610.0], [97.2, 119665.0], [97.3, 119827.0], [97.4, 119830.0], [97.5, 119885.0], [97.6, 119944.0], [97.7, 120013.0], [97.8, 120085.0], [97.9, 120188.0], [98.0, 120328.0], [98.1, 120423.0], [98.2, 120545.0], [98.3, 120630.0], [98.4, 120671.0], [98.5, 120728.0], [98.6, 120743.0], [98.7, 120809.0], [98.8, 120831.0], [98.9, 120869.0], [99.0, 120983.0], [99.1, 121027.0], [99.2, 121076.0], [99.3, 121114.0], [99.4, 121296.0], [99.5, 121429.0], [99.6, 121485.0], [99.7, 121585.0], [99.8, 121632.0], [99.9, 122061.0], [100.0, 122345.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 17.0, "series": [{"data": [[0.0, 4.0], [69900.0, 1.0], [76300.0, 1.0], [79500.0, 2.0], [82700.0, 1.0], [89100.0, 4.0], [95500.0, 7.0], [98700.0, 1.0], [101900.0, 2.0], [105100.0, 9.0], [108300.0, 5.0], [111500.0, 3.0], [114700.0, 3.0], [121100.0, 3.0], [100.0, 10.0], [32900.0, 3.0], [36100.0, 1.0], [37700.0, 1.0], [39300.0, 4.0], [40900.0, 3.0], [42500.0, 2.0], [44100.0, 1.0], [45700.0, 2.0], [47300.0, 5.0], [48900.0, 3.0], [50500.0, 4.0], [200.0, 5.0], [52100.0, 9.0], [53700.0, 1.0], [55300.0, 2.0], [56900.0, 3.0], [58500.0, 2.0], [60100.0, 2.0], [63300.0, 6.0], [64900.0, 5.0], [65800.0, 4.0], [69000.0, 1.0], [72200.0, 2.0], [300.0, 17.0], [78600.0, 1.0], [81800.0, 1.0], [85000.0, 1.0], [88200.0, 3.0], [94600.0, 7.0], [97800.0, 1.0], [101000.0, 4.0], [400.0, 4.0], [104200.0, 2.0], [107400.0, 3.0], [110600.0, 2.0], [113800.0, 2.0], [120200.0, 1.0], [500.0, 5.0], [600.0, 2.0], [700.0, 1.0], [900.0, 2.0], [68100.0, 3.0], [71300.0, 1.0], [74500.0, 3.0], [77700.0, 7.0], [80900.0, 5.0], [84100.0, 2.0], [5400.0, 4.0], [5600.0, 10.0], [87300.0, 2.0], [5800.0, 9.0], [90500.0, 6.0], [93700.0, 4.0], [6000.0, 4.0], [96900.0, 4.0], [6200.0, 1.0], [100100.0, 5.0], [103300.0, 1.0], [109700.0, 1.0], [116100.0, 2.0], [119300.0, 2.0], [9600.0, 1.0], [10000.0, 4.0], [12800.0, 1.0], [14000.0, 1.0], [14400.0, 7.0], [14800.0, 5.0], [17600.0, 2.0], [18400.0, 5.0], [20800.0, 1.0], [21600.0, 1.0], [22400.0, 3.0], [23200.0, 1.0], [24000.0, 1.0], [25600.0, 8.0], [28800.0, 1.0], [29600.0, 4.0], [33600.0, 3.0], [36800.0, 2.0], [40000.0, 5.0], [43200.0, 2.0], [46400.0, 5.0], [48000.0, 2.0], [49600.0, 6.0], [51200.0, 5.0], [52800.0, 1.0], [56000.0, 1.0], [57600.0, 4.0], [59200.0, 2.0], [60800.0, 3.0], [62400.0, 1.0], [67200.0, 2.0], [70400.0, 1.0], [73600.0, 2.0], [76800.0, 1.0], [80000.0, 1.0], [83200.0, 4.0], [86400.0, 1.0], [89600.0, 1.0], [92800.0, 2.0], [96000.0, 7.0], [99200.0, 3.0], [105600.0, 3.0], [112000.0, 5.0], [115200.0, 6.0], [118400.0, 2.0], [121600.0, 3.0], [73500.0, 4.0], [76700.0, 1.0], [79900.0, 2.0], [83100.0, 2.0], [86300.0, 2.0], [89500.0, 3.0], [95900.0, 6.0], [99100.0, 2.0], [105500.0, 4.0], [108700.0, 2.0], [111900.0, 4.0], [115100.0, 4.0], [118300.0, 2.0], [121500.0, 2.0], [33100.0, 5.0], [36300.0, 2.0], [37900.0, 4.0], [39500.0, 1.0], [41100.0, 2.0], [42700.0, 2.0], [44300.0, 6.0], [45900.0, 1.0], [47500.0, 2.0], [49100.0, 4.0], [50700.0, 5.0], [52300.0, 3.0], [53900.0, 1.0], [55500.0, 5.0], [57100.0, 3.0], [58700.0, 1.0], [60300.0, 3.0], [61900.0, 1.0], [63500.0, 9.0], [65100.0, 6.0], [66200.0, 3.0], [69400.0, 1.0], [72600.0, 2.0], [75800.0, 1.0], [79000.0, 6.0], [82200.0, 5.0], [88600.0, 3.0], [95000.0, 6.0], [98200.0, 2.0], [101400.0, 2.0], [104600.0, 10.0], [107800.0, 2.0], [111000.0, 2.0], [114200.0, 1.0], [117400.0, 1.0], [120600.0, 4.0], [68500.0, 1.0], [71700.0, 1.0], [78100.0, 1.0], [81300.0, 2.0], [84500.0, 1.0], [87700.0, 4.0], [90900.0, 2.0], [94100.0, 6.0], [97300.0, 5.0], [100500.0, 1.0], [103700.0, 6.0], [106900.0, 3.0], [110100.0, 3.0], [113300.0, 1.0], [116500.0, 2.0], [119700.0, 2.0], [17700.0, 4.0], [18500.0, 1.0], [21700.0, 1.0], [25700.0, 6.0], [29700.0, 4.0], [32100.0, 2.0], [33800.0, 1.0], [35400.0, 2.0], [37000.0, 1.0], [38600.0, 2.0], [40200.0, 2.0], [41800.0, 2.0], [45000.0, 2.0], [48200.0, 2.0], [49800.0, 5.0], [51400.0, 10.0], [53000.0, 4.0], [54600.0, 2.0], [56200.0, 2.0], [57800.0, 3.0], [59400.0, 2.0], [61000.0, 3.0], [64200.0, 3.0], [74000.0, 7.0], [77200.0, 3.0], [80400.0, 2.0], [83600.0, 1.0], [86800.0, 2.0], [90000.0, 4.0], [93200.0, 2.0], [96400.0, 5.0], [99600.0, 4.0], [106000.0, 1.0], [109200.0, 2.0], [112400.0, 2.0], [115600.0, 5.0], [118800.0, 4.0], [122000.0, 1.0], [67500.0, 3.0], [70700.0, 4.0], [80300.0, 8.0], [83500.0, 1.0], [86700.0, 2.0], [89900.0, 2.0], [93100.0, 4.0], [96300.0, 7.0], [109100.0, 1.0], [112300.0, 2.0], [115500.0, 14.0], [36500.0, 1.0], [38100.0, 1.0], [39700.0, 2.0], [42900.0, 3.0], [44500.0, 2.0], [47700.0, 2.0], [49300.0, 2.0], [50900.0, 3.0], [52500.0, 4.0], [54100.0, 2.0], [55700.0, 2.0], [57300.0, 2.0], [58900.0, 5.0], [62100.0, 1.0], [63700.0, 3.0], [65300.0, 2.0], [66600.0, 3.0], [73000.0, 1.0], [79400.0, 1.0], [82600.0, 2.0], [85800.0, 5.0], [95400.0, 2.0], [98600.0, 2.0], [101800.0, 3.0], [105000.0, 14.0], [108200.0, 3.0], [111400.0, 1.0], [114600.0, 2.0], [117800.0, 1.0], [121000.0, 4.0], [65700.0, 2.0], [68900.0, 1.0], [72100.0, 2.0], [78500.0, 2.0], [84900.0, 3.0], [88100.0, 3.0], [91300.0, 1.0], [94500.0, 7.0], [97700.0, 1.0], [100900.0, 3.0], [104100.0, 3.0], [107300.0, 4.0], [110500.0, 1.0], [113700.0, 2.0], [116900.0, 1.0], [120100.0, 3.0], [9700.0, 2.0], [10100.0, 3.0], [10500.0, 1.0], [14100.0, 5.0], [14500.0, 7.0], [17000.0, 1.0], [17800.0, 2.0], [18600.0, 3.0], [21000.0, 2.0], [21800.0, 3.0], [25000.0, 2.0], [25800.0, 3.0], [28200.0, 3.0], [29000.0, 2.0], [29800.0, 1.0], [30600.0, 1.0], [32200.0, 1.0], [34000.0, 1.0], [35600.0, 2.0], [37200.0, 2.0], [38800.0, 4.0], [40400.0, 3.0], [42000.0, 1.0], [45200.0, 2.0], [48400.0, 5.0], [50000.0, 3.0], [53200.0, 1.0], [56400.0, 5.0], [58000.0, 1.0], [59600.0, 3.0], [61200.0, 1.0], [62800.0, 1.0], [64400.0, 1.0], [68000.0, 3.0], [71200.0, 1.0], [74400.0, 3.0], [77600.0, 1.0], [80800.0, 2.0], [84000.0, 1.0], [87200.0, 1.0], [93600.0, 1.0], [96800.0, 4.0], [100000.0, 3.0], [103200.0, 1.0], [106400.0, 3.0], [116000.0, 8.0], [119200.0, 2.0], [67900.0, 3.0], [71100.0, 1.0], [74300.0, 4.0], [77500.0, 1.0], [80700.0, 1.0], [83900.0, 4.0], [87100.0, 3.0], [93500.0, 1.0], [96700.0, 1.0], [99900.0, 1.0], [103100.0, 1.0], [106300.0, 1.0], [109500.0, 2.0], [115900.0, 3.0], [119100.0, 1.0], [122300.0, 2.0], [33500.0, 1.0], [36700.0, 2.0], [38300.0, 1.0], [39900.0, 1.0], [41500.0, 1.0], [43100.0, 1.0], [44700.0, 3.0], [46300.0, 1.0], [47900.0, 1.0], [49500.0, 3.0], [51100.0, 3.0], [52700.0, 2.0], [54300.0, 1.0], [55900.0, 5.0], [57500.0, 2.0], [59100.0, 3.0], [60700.0, 4.0], [63900.0, 3.0], [65500.0, 3.0], [73400.0, 2.0], [83000.0, 2.0], [86200.0, 1.0], [89400.0, 2.0], [92600.0, 1.0], [95800.0, 2.0], [99000.0, 1.0], [105400.0, 7.0], [108600.0, 4.0], [111800.0, 5.0], [115000.0, 4.0], [118200.0, 6.0], [121400.0, 5.0], [66100.0, 1.0], [69300.0, 1.0], [72500.0, 3.0], [75700.0, 1.0], [78900.0, 1.0], [82100.0, 2.0], [85300.0, 1.0], [88500.0, 4.0], [91700.0, 1.0], [94900.0, 1.0], [98100.0, 1.0], [101300.0, 7.0], [104500.0, 7.0], [107700.0, 3.0], [110900.0, 3.0], [114100.0, 2.0], [120500.0, 3.0], [17900.0, 3.0], [18700.0, 1.0], [20300.0, 2.0], [21900.0, 6.0], [22700.0, 1.0], [25100.0, 3.0], [25900.0, 2.0], [28300.0, 3.0], [29900.0, 7.0], [30700.0, 1.0], [35800.0, 2.0], [37400.0, 1.0], [39000.0, 1.0], [40600.0, 2.0], [42200.0, 1.0], [43800.0, 5.0], [45400.0, 1.0], [47000.0, 2.0], [48600.0, 4.0], [50200.0, 6.0], [51800.0, 5.0], [55000.0, 2.0], [56600.0, 3.0], [58200.0, 1.0], [59800.0, 4.0], [61400.0, 1.0], [63000.0, 2.0], [64600.0, 2.0], [68400.0, 3.0], [71600.0, 1.0], [74800.0, 2.0], [78000.0, 3.0], [81200.0, 1.0], [84400.0, 1.0], [87600.0, 4.0], [90800.0, 6.0], [94000.0, 3.0], [97200.0, 4.0], [100400.0, 2.0], [103600.0, 3.0], [106800.0, 2.0], [110000.0, 1.0], [113200.0, 2.0], [116400.0, 4.0], [119600.0, 3.0], [68300.0, 1.0], [71500.0, 2.0], [74700.0, 2.0], [77900.0, 1.0], [81100.0, 2.0], [84300.0, 2.0], [87500.0, 2.0], [90700.0, 2.0], [93900.0, 6.0], [97100.0, 7.0], [100300.0, 3.0], [103500.0, 3.0], [106700.0, 1.0], [109900.0, 3.0], [113100.0, 4.0], [116300.0, 2.0], [119500.0, 1.0], [33700.0, 1.0], [36900.0, 2.0], [38500.0, 2.0], [40100.0, 2.0], [41700.0, 2.0], [43300.0, 1.0], [46500.0, 5.0], [48100.0, 5.0], [49700.0, 2.0], [51300.0, 3.0], [52900.0, 2.0], [54500.0, 1.0], [57700.0, 4.0], [59300.0, 1.0], [60900.0, 2.0], [62500.0, 2.0], [64100.0, 2.0], [67400.0, 2.0], [73800.0, 5.0], [77000.0, 2.0], [80200.0, 4.0], [83400.0, 8.0], [86600.0, 1.0], [89800.0, 2.0], [93000.0, 1.0], [96200.0, 5.0], [105800.0, 3.0], [109000.0, 5.0], [112200.0, 1.0], [115400.0, 7.0], [118600.0, 3.0], [121800.0, 1.0], [66500.0, 3.0], [69700.0, 3.0], [76100.0, 1.0], [79300.0, 4.0], [5300.0, 2.0], [82500.0, 2.0], [5500.0, 4.0], [5700.0, 11.0], [5900.0, 9.0], [6100.0, 1.0], [95300.0, 6.0], [6300.0, 1.0], [98500.0, 5.0], [101700.0, 1.0], [104900.0, 12.0], [108100.0, 7.0], [111300.0, 1.0], [120900.0, 2.0], [9800.0, 4.0], [10200.0, 1.0], [10600.0, 2.0], [12600.0, 1.0], [13000.0, 1.0], [13800.0, 2.0], [14200.0, 6.0], [14600.0, 5.0], [17200.0, 1.0], [18000.0, 6.0], [18800.0, 2.0], [22000.0, 2.0], [24400.0, 1.0], [25200.0, 4.0], [28400.0, 1.0], [29200.0, 4.0], [30000.0, 2.0], [31600.0, 1.0], [32400.0, 1.0], [32800.0, 1.0], [34400.0, 4.0], [36000.0, 3.0], [37600.0, 3.0], [39200.0, 3.0], [40800.0, 4.0], [42400.0, 1.0], [44000.0, 2.0], [45600.0, 3.0], [47200.0, 6.0], [48800.0, 1.0], [50400.0, 2.0], [52000.0, 4.0], [53600.0, 3.0], [55200.0, 2.0], [56800.0, 7.0], [58400.0, 4.0], [60000.0, 2.0], [61600.0, 2.0], [64800.0, 6.0], [65600.0, 3.0], [68800.0, 2.0], [72000.0, 4.0], [75200.0, 1.0], [81600.0, 3.0], [84800.0, 2.0], [88000.0, 4.0], [91200.0, 2.0], [94400.0, 3.0], [97600.0, 3.0], [100800.0, 1.0], [104000.0, 6.0], [110400.0, 1.0], [120000.0, 3.0], [68700.0, 2.0], [71900.0, 2.0], [78300.0, 3.0], [81500.0, 2.0], [87900.0, 3.0], [91100.0, 2.0], [94300.0, 2.0], [97500.0, 3.0], [100700.0, 2.0], [103900.0, 4.0], [107100.0, 2.0], [113500.0, 1.0], [119900.0, 4.0], [33900.0, 1.0], [35500.0, 1.0], [37100.0, 1.0], [38700.0, 1.0], [40300.0, 2.0], [43500.0, 2.0], [45100.0, 2.0], [46700.0, 2.0], [48300.0, 1.0], [49900.0, 4.0], [51500.0, 8.0], [53100.0, 1.0], [56300.0, 2.0], [57900.0, 1.0], [59500.0, 2.0], [62700.0, 2.0], [64300.0, 3.0], [67800.0, 1.0], [71000.0, 1.0], [74200.0, 2.0], [77400.0, 1.0], [80600.0, 7.0], [83800.0, 3.0], [87000.0, 3.0], [90200.0, 5.0], [93400.0, 3.0], [96600.0, 8.0], [103000.0, 2.0], [109400.0, 4.0], [112600.0, 3.0], [115800.0, 6.0], [119000.0, 2.0], [73300.0, 6.0], [76500.0, 3.0], [79700.0, 3.0], [82900.0, 4.0], [89300.0, 2.0], [95700.0, 8.0], [102100.0, 4.0], [105300.0, 6.0], [108500.0, 4.0], [111700.0, 8.0], [114900.0, 6.0], [118100.0, 2.0], [121300.0, 1.0], [18100.0, 3.0], [18900.0, 1.0], [22100.0, 1.0], [25300.0, 7.0], [28500.0, 1.0], [29300.0, 2.0], [30100.0, 3.0], [32500.0, 3.0], [33000.0, 3.0], [34600.0, 1.0], [36200.0, 1.0], [37800.0, 2.0], [39400.0, 2.0], [41000.0, 3.0], [42600.0, 4.0], [44200.0, 1.0], [45800.0, 3.0], [47400.0, 2.0], [49000.0, 3.0], [50600.0, 3.0], [52200.0, 6.0], [53800.0, 2.0], [55400.0, 1.0], [57000.0, 3.0], [58600.0, 2.0], [60200.0, 4.0], [66000.0, 2.0], [69200.0, 3.0], [72400.0, 3.0], [75600.0, 3.0], [82000.0, 4.0], [88400.0, 2.0], [94800.0, 3.0], [98000.0, 2.0], [101200.0, 2.0], [104400.0, 2.0], [117200.0, 2.0], [120400.0, 2.0], [69100.0, 2.0], [72300.0, 3.0], [75500.0, 1.0], [78700.0, 5.0], [81900.0, 1.0], [85100.0, 1.0], [88300.0, 3.0], [91500.0, 4.0], [94700.0, 3.0], [97900.0, 1.0], [101100.0, 4.0], [104300.0, 4.0], [107500.0, 2.0], [113900.0, 1.0], [120300.0, 3.0], [34100.0, 1.0], [35700.0, 3.0], [37300.0, 4.0], [38900.0, 3.0], [40500.0, 2.0], [43700.0, 3.0], [45300.0, 4.0], [46900.0, 1.0], [48500.0, 3.0], [50100.0, 3.0], [51700.0, 3.0], [53300.0, 1.0], [54900.0, 1.0], [56500.0, 6.0], [58100.0, 1.0], [59700.0, 6.0], [61300.0, 1.0], [62900.0, 3.0], [64500.0, 2.0], [68200.0, 3.0], [74600.0, 1.0], [77800.0, 2.0], [81000.0, 3.0], [84200.0, 5.0], [87400.0, 4.0], [90600.0, 2.0], [93800.0, 7.0], [100200.0, 4.0], [103400.0, 1.0], [106600.0, 2.0], [109800.0, 1.0], [113000.0, 1.0], [116200.0, 1.0], [119400.0, 2.0], [67300.0, 1.0], [73700.0, 2.0], [76900.0, 4.0], [83300.0, 1.0], [89700.0, 1.0], [92900.0, 4.0], [96100.0, 6.0], [99300.0, 2.0], [105700.0, 6.0], [108900.0, 2.0], [115300.0, 10.0], [118500.0, 5.0], [9500.0, 3.0], [9900.0, 7.0], [10300.0, 2.0], [10700.0, 1.0], [12700.0, 1.0], [13500.0, 1.0], [13900.0, 7.0], [14300.0, 10.0], [14700.0, 3.0], [17400.0, 1.0], [18200.0, 4.0], [21400.0, 1.0], [22200.0, 2.0], [24600.0, 1.0], [25400.0, 6.0], [27800.0, 1.0], [29400.0, 7.0], [30200.0, 5.0], [33200.0, 4.0], [36400.0, 1.0], [39600.0, 4.0], [41200.0, 2.0], [42800.0, 3.0], [44400.0, 1.0], [46000.0, 1.0], [47600.0, 3.0], [49200.0, 2.0], [50800.0, 4.0], [52400.0, 5.0], [54000.0, 1.0], [55600.0, 1.0], [57200.0, 2.0], [60400.0, 6.0], [62000.0, 1.0], [63600.0, 3.0], [65200.0, 2.0], [66400.0, 1.0], [69600.0, 2.0], [79200.0, 1.0], [82400.0, 4.0], [88800.0, 3.0], [92000.0, 2.0], [95200.0, 3.0], [101600.0, 2.0], [104800.0, 13.0], [108000.0, 2.0], [111200.0, 1.0], [114400.0, 2.0], [117600.0, 1.0], [120800.0, 7.0], [66300.0, 2.0], [69500.0, 2.0], [75900.0, 1.0], [79100.0, 2.0], [82300.0, 5.0], [85500.0, 1.0], [88700.0, 3.0], [95100.0, 1.0], [98300.0, 2.0], [101500.0, 3.0], [104700.0, 7.0], [107900.0, 2.0], [111100.0, 2.0], [114300.0, 2.0], [117500.0, 1.0], [120700.0, 6.0], [34300.0, 1.0], [35900.0, 4.0], [37500.0, 2.0], [39100.0, 3.0], [40700.0, 2.0], [43900.0, 3.0], [45500.0, 1.0], [47100.0, 1.0], [48700.0, 4.0], [51900.0, 5.0], [53500.0, 2.0], [56700.0, 1.0], [58300.0, 3.0], [59900.0, 8.0], [61500.0, 5.0], [63100.0, 2.0], [64700.0, 2.0], [68600.0, 2.0], [71800.0, 1.0], [75000.0, 3.0], [78200.0, 1.0], [84600.0, 5.0], [87800.0, 10.0], [91000.0, 2.0], [94200.0, 2.0], [97400.0, 1.0], [100600.0, 1.0], [103800.0, 3.0], [107000.0, 1.0], [110200.0, 3.0], [116600.0, 2.0], [119800.0, 6.0], [67700.0, 3.0], [70900.0, 1.0], [74100.0, 6.0], [77300.0, 1.0], [80500.0, 5.0], [83700.0, 4.0], [86900.0, 1.0], [90100.0, 4.0], [93300.0, 3.0], [96500.0, 6.0], [99700.0, 1.0], [102900.0, 1.0], [109300.0, 2.0], [112500.0, 3.0], [115700.0, 7.0], [118900.0, 6.0], [16700.0, 2.0], [18300.0, 2.0], [20700.0, 2.0], [21500.0, 1.0], [22300.0, 3.0], [23900.0, 2.0], [24700.0, 1.0], [25500.0, 5.0], [28700.0, 1.0], [29500.0, 3.0], [32700.0, 2.0], [33400.0, 3.0], [35000.0, 1.0], [36600.0, 2.0], [38200.0, 4.0], [39800.0, 3.0], [44600.0, 2.0], [46200.0, 3.0], [47800.0, 1.0], [49400.0, 3.0], [51000.0, 3.0], [52600.0, 2.0], [54200.0, 1.0], [55800.0, 2.0], [57400.0, 3.0], [59000.0, 1.0], [60600.0, 4.0], [63800.0, 1.0], [65400.0, 1.0], [66800.0, 1.0], [70000.0, 2.0], [76400.0, 3.0], [79600.0, 1.0], [82800.0, 5.0], [86000.0, 1.0], [89200.0, 2.0], [92400.0, 1.0], [95600.0, 2.0], [102000.0, 3.0], [105200.0, 3.0], [108400.0, 3.0], [114800.0, 5.0], [118000.0, 3.0], [121200.0, 2.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 122300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 10.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2402.0, "series": [{"data": [[0.0, 40.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 10.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2402.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 48.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 19.552631578947373, "minX": 1.63068102E12, "maxY": 422.0382165605096, "series": [{"data": [[1.63068102E12, 412.66463414634165], [1.63068114E12, 34.02985074626866], [1.63068108E12, 202.02602230483276]], "isOverall": false, "label": "addFavorite", "isController": false}, {"data": [[1.63068102E12, 395.2525252525255], [1.63068114E12, 23.543478260869573], [1.63068108E12, 174.53515625000009]], "isOverall": false, "label": "listFavoriteByPage", "isController": false}, {"data": [[1.63068102E12, 407.4425287356322], [1.63068114E12, 19.552631578947373], [1.63068108E12, 182.51388888888894]], "isOverall": false, "label": "deleteFavorite", "isController": false}, {"data": [[1.63068102E12, 422.0382165605096], [1.63068114E12, 26.53846153846154], [1.63068108E12, 198.01374570446742]], "isOverall": false, "label": "deleteAllFavorite", "isController": false}, {"data": [[1.63068102E12, 404.84971098265913], [1.63068114E12, 22.209302325581397], [1.63068108E12, 185.52112676056336]], "isOverall": false, "label": "checkFavorite", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068114E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 60.0, "minX": 1.0, "maxY": 122345.0, "series": [{"data": [[2.0, 122319.0], [3.0, 121829.0], [4.0, 122061.0], [5.0, 121429.0], [6.0, 122345.0], [7.0, 121111.0], [8.0, 121632.0], [12.0, 120838.0], [14.0, 121115.2], [15.0, 121585.0], [17.0, 121007.0], [18.0, 121284.0], [19.0, 120983.0], [20.0, 120811.0], [21.0, 121644.0], [22.0, 120728.0], [23.0, 121108.0], [24.0, 120741.0], [25.0, 121534.0], [26.0, 120681.0], [29.0, 120698.33333333333], [30.0, 120869.0], [31.0, 121066.0], [33.0, 120632.0], [32.0, 121468.0], [35.0, 121296.0], [34.0, 120883.0], [37.0, 121485.0], [36.0, 121493.0], [39.0, 120841.0], [38.0, 120024.0], [41.0, 120328.0], [40.0, 120013.0], [43.0, 120487.0], [42.0, 120630.0], [45.0, 119997.0], [44.0, 120709.0], [47.0, 120423.0], [46.0, 121329.0], [49.0, 120545.0], [48.0, 120809.0], [51.0, 120140.0], [50.0, 119944.0], [53.0, 120346.0], [52.0, 119828.0], [55.0, 120085.0], [54.0, 119885.0], [57.0, 120354.0], [56.0, 120743.0], [59.0, 120102.0], [58.0, 120759.0], [61.0, 119837.0], [60.0, 119720.0], [63.0, 119245.0], [62.0, 120547.0], [66.0, 120188.0], [65.0, 119578.0], [64.0, 120220.0], [71.0, 119902.0], [70.0, 119610.0], [69.0, 119471.0], [68.0, 119400.0], [75.0, 118970.0], [74.0, 119827.0], [73.0, 119975.0], [72.0, 119709.0], [79.0, 119840.0], [78.0, 119420.0], [77.0, 118571.0], [76.0, 119830.0], [83.0, 118917.0], [82.0, 118487.0], [81.0, 119242.0], [80.0, 118621.0], [87.0, 118955.0], [85.0, 119321.0], [84.0, 119368.0], [91.0, 118882.0], [90.0, 118094.0], [89.0, 119067.0], [88.0, 118506.0], [94.0, 118563.0], [93.0, 118105.0], [92.0, 118225.0], [99.0, 118644.0], [98.0, 119049.0], [97.0, 118384.0], [96.0, 118406.5], [103.0, 118941.0], [102.0, 118162.0], [101.0, 118943.0], [100.0, 118813.0], [110.0, 118466.0], [108.0, 118661.8], [115.0, 118292.0], [114.0, 118835.0], [113.0, 118558.0], [112.0, 118161.5], [119.0, 117222.0], [118.0, 117528.0], [117.0, 117615.0], [116.0, 118266.0], [123.0, 116950.0], [122.0, 117474.0], [121.0, 117200.0], [120.0, 117813.0], [127.0, 116060.0], [126.0, 116696.0], [125.0, 116393.0], [124.0, 116359.0], [131.0, 116495.0], [130.0, 115560.0], [129.0, 116015.0], [128.0, 116576.0], [140.0, 115951.5], [138.0, 115804.0], [137.0, 115697.0], [136.0, 115640.6], [151.0, 116401.0], [150.0, 115529.0], [149.0, 115765.0], [148.0, 115918.0], [147.0, 115653.0], [145.0, 116181.0], [144.0, 115740.5], [159.0, 115785.0], [157.0, 116083.0], [156.0, 115695.5], [154.0, 115927.0], [152.0, 115504.0], [167.0, 115176.0], [166.0, 115306.0], [165.0, 115560.0], [164.0, 115732.0], [163.0, 115836.0], [162.0, 115577.0], [161.0, 115293.0], [160.0, 115700.0], [175.0, 115759.0], [174.0, 115923.0], [173.0, 116146.0], [172.0, 116649.0], [171.0, 115353.0], [170.0, 116087.0], [169.0, 115891.5], [181.0, 115643.0], [180.0, 115330.5], [178.0, 116092.0], [177.0, 115953.0], [176.0, 115411.0], [191.0, 115378.0], [190.0, 115489.0], [189.0, 115374.0], [188.0, 116008.0], [187.0, 116513.0], [186.0, 115007.0], [185.0, 115501.0], [184.0, 115372.66666666667], [199.0, 114906.0], [198.0, 115513.0], [197.0, 115316.0], [196.0, 115715.0], [195.0, 114974.0], [194.0, 115460.0], [193.0, 115207.0], [192.0, 115503.0], [207.0, 115392.0], [206.0, 115222.0], [205.0, 115012.0], [203.0, 114936.0], [202.0, 114826.0], [201.0, 115385.0], [215.0, 114472.0], [214.0, 114822.0], [213.0, 115069.0], [212.0, 115281.0], [211.0, 114757.0], [210.0, 114646.0], [209.0, 115647.0], [208.0, 114887.0], [223.0, 114925.0], [222.0, 114321.0], [221.0, 115252.0], [220.0, 115156.0], [219.0, 114986.0], [218.0, 115365.0], [217.0, 115224.0], [216.0, 115034.0], [231.0, 114400.0], [230.0, 114762.0], [229.0, 114770.0], [228.0, 114250.0], [227.0, 114804.0], [226.0, 114192.0], [225.0, 114368.0], [224.0, 115126.0], [239.0, 113165.0], [238.0, 113932.0], [237.0, 113996.5], [235.0, 113522.0], [234.0, 113882.0], [233.0, 113796.0], [232.0, 114634.0], [247.0, 113117.0], [246.0, 113534.5], [244.0, 113063.0], [243.0, 113100.0], [242.0, 113271.0], [241.0, 113244.0], [240.0, 113169.0], [255.0, 111777.0], [254.0, 112679.0], [253.0, 112089.0], [252.0, 112661.0], [251.0, 111861.0], [250.0, 111965.0], [249.0, 112653.0], [248.0, 111981.0], [270.0, 111765.0], [271.0, 111551.0], [269.0, 111927.0], [268.0, 111789.0], [267.0, 112045.0], [266.0, 111801.0], [265.0, 112552.0], [264.0, 112439.0], [263.0, 112381.0], [257.0, 112017.0], [256.0, 111755.0], [259.0, 111934.0], [258.0, 111897.0], [262.0, 112006.0], [261.0, 112575.0], [260.0, 112522.0], [286.0, 111736.0], [287.0, 111240.0], [285.0, 111727.0], [284.0, 111866.0], [283.0, 111077.0], [282.0, 111356.0], [281.0, 110951.0], [280.0, 111404.0], [279.0, 111187.0], [273.0, 111540.0], [272.0, 112472.0], [275.0, 112070.0], [274.0, 112351.0], [278.0, 111554.0], [277.0, 111820.0], [276.0, 112284.0], [302.0, 109456.0], [303.0, 109905.0], [301.0, 110235.0], [300.0, 110150.0], [299.0, 110277.0], [298.0, 109885.0], [297.0, 109952.0], [296.0, 110467.0], [295.0, 110923.0], [289.0, 111711.0], [288.0, 111108.0], [291.0, 111005.0], [290.0, 111790.0], [294.0, 110972.0], [293.0, 110554.0], [292.0, 110661.0], [318.0, 109049.0], [319.0, 108667.0], [317.0, 108496.0], [316.0, 108472.0], [315.0, 109102.0], [314.0, 110098.0], [313.0, 109259.0], [312.0, 110243.0], [311.0, 109759.0], [305.0, 110171.0], [304.0, 109358.0], [307.0, 109936.0], [306.0, 109268.0], [310.0, 110686.0], [309.0, 109378.0], [308.0, 110178.0], [334.0, 109059.0], [335.0, 108977.0], [333.0, 108561.0], [332.0, 108121.0], [331.0, 108697.0], [330.0, 108117.0], [329.0, 109487.0], [328.0, 109492.0], [327.0, 109544.0], [322.0, 109526.0], [321.0, 108299.0], [320.0, 108610.0], [326.0, 108459.0], [350.0, 108018.0], [351.0, 108686.0], [349.0, 108326.0], [348.0, 108528.0], [347.0, 108784.0], [346.0, 107864.0], [344.0, 107857.0], [343.0, 108371.0], [336.0, 109051.0], [339.0, 108584.5], [337.0, 108987.0], [342.0, 109219.5], [340.0, 108517.0], [366.0, 107457.0], [367.0, 108190.0], [365.0, 107578.0], [364.0, 108043.0], [363.0, 107357.0], [362.0, 108285.0], [361.0, 108175.0], [360.0, 108226.0], [359.0, 108397.0], [353.0, 107579.0], [352.0, 107417.0], [355.0, 108461.0], [354.0, 108353.0], [358.0, 107981.0], [357.0, 107893.0], [356.0, 107761.0], [381.0, 107113.0], [380.0, 106998.0], [371.0, 106849.0], [370.0, 107778.0], [369.0, 107787.5], [379.0, 106405.0], [378.0, 106483.0], [377.0, 106635.0], [376.0, 106979.5], [374.0, 107367.0], [373.0, 106994.0], [372.0, 106691.0], [392.0, 104884.0], [397.0, 105502.5], [387.0, 107310.0], [386.0, 106886.0], [385.0, 106756.0], [384.0, 106746.0], [395.0, 105138.0], [394.0, 105232.0], [393.0, 105086.0], [391.0, 105755.0], [390.0, 105369.0], [389.0, 105162.0], [388.0, 107169.0], [413.0, 105159.0], [414.0, 105807.0], [412.0, 105179.0], [403.0, 105500.0], [402.0, 104921.0], [400.0, 105208.66666666667], [410.0, 105753.0], [409.0, 104972.0], [408.0, 105192.0], [407.0, 104891.5], [405.0, 105476.0], [404.0, 105632.0], [430.0, 104709.0], [431.0, 105029.0], [429.0, 105027.0], [428.0, 104691.0], [427.0, 104956.0], [426.0, 105716.0], [425.0, 105758.0], [424.0, 105092.0], [423.0, 105100.0], [416.0, 105786.5], [419.0, 105012.5], [417.0, 105157.0], [422.0, 104731.0], [421.0, 105488.0], [420.0, 105307.0], [446.0, 105136.5], [447.0, 104812.0], [444.0, 104660.0], [435.0, 105471.0], [434.0, 105000.0], [433.0, 104887.0], [432.0, 105198.0], [443.0, 105004.5], [441.0, 104844.0], [440.0, 104721.0], [439.0, 105693.0], [438.0, 105094.0], [437.0, 105130.5], [462.0, 105015.0], [463.0, 105623.0], [460.0, 104818.5], [450.0, 106063.0], [449.0, 105014.0], [448.0, 104917.0], [458.0, 104576.0], [457.0, 105464.0], [456.0, 105168.0], [455.0, 105032.0], [453.0, 105259.0], [452.0, 104709.0], [478.0, 104812.0], [479.0, 105022.0], [477.0, 105551.0], [476.0, 104556.0], [475.0, 104806.0], [473.0, 104869.0], [472.0, 105569.0], [471.0, 104728.0], [465.0, 105511.0], [464.0, 104808.0], [467.0, 104559.0], [466.0, 104945.0], [470.0, 104613.0], [469.0, 105429.0], [468.0, 104945.0], [494.0, 104673.0], [495.0, 104431.0], [493.0, 104843.0], [492.0, 104198.0], [491.0, 104104.0], [490.0, 104008.0], [489.0, 104034.0], [488.0, 104940.0], [487.0, 104016.0], [481.0, 105005.0], [480.0, 105082.0], [483.0, 105407.0], [482.0, 104307.0], [486.0, 103984.0], [485.0, 104221.0], [484.0, 104979.0], [510.0, 103946.0], [511.0, 104127.0], [509.0, 104641.0], [508.0, 104596.0], [507.0, 104036.0], [506.0, 103734.0], [505.0, 104726.0], [504.0, 104345.0], [503.0, 103876.0], [496.0, 104579.0], [498.0, 103719.0], [497.0, 104037.0], [502.0, 104673.5], [500.0, 103760.5], [540.0, 101848.33333333333], [542.0, 101816.0], [536.0, 102998.0], [518.0, 103911.0], [516.0, 103535.0], [514.0, 103643.0], [512.0, 103580.0], [534.0, 103844.0], [532.0, 103272.0], [530.0, 103074.0], [528.0, 103701.0], [526.0, 103690.0], [524.0, 103573.0], [522.0, 104437.0], [520.0, 104540.0], [572.0, 101230.0], [574.0, 101063.0], [570.0, 100765.0], [568.0, 100940.0], [566.0, 101433.0], [564.0, 101328.0], [562.0, 101647.5], [560.0, 101635.0], [556.0, 101101.0], [550.0, 102160.0], [548.0, 101767.0], [546.0, 101805.0], [544.0, 102072.0], [554.0, 101321.0], [604.0, 99229.0], [606.0, 98574.0], [602.0, 100423.0], [600.0, 100625.0], [598.0, 100415.0], [594.0, 100191.0], [592.0, 99968.5], [590.0, 99923.0], [578.0, 101812.0], [576.0, 101107.0], [582.0, 100146.0], [580.0, 100148.0], [588.0, 100317.0], [586.0, 100096.0], [584.0, 100065.0], [636.0, 97528.0], [638.0, 97799.0], [632.0, 98362.0], [614.0, 98613.0], [612.0, 99306.0], [610.0, 99146.0], [608.0, 98823.5], [630.0, 97401.0], [628.0, 97657.0], [626.0, 98272.0], [624.0, 97671.0], [622.0, 98565.0], [620.0, 98574.0], [668.0, 96237.0], [670.0, 96591.0], [666.0, 97213.0], [664.0, 96992.0], [662.0, 96232.0], [660.0, 97195.0], [658.0, 97168.0], [656.0, 97272.0], [654.0, 96377.0], [642.0, 96811.0], [640.0, 97182.0], [646.0, 96510.0], [644.0, 97115.0], [652.0, 96383.0], [650.0, 96946.0], [648.0, 96436.0], [700.0, 96524.0], [702.0, 96006.0], [698.0, 96173.0], [696.0, 96329.0], [694.0, 95758.0], [692.0, 96620.0], [690.0, 95849.0], [688.0, 95943.0], [686.0, 95983.0], [674.0, 96924.0], [672.0, 96399.0], [678.0, 96880.0], [676.0, 96546.0], [684.0, 96686.0], [682.0, 96279.0], [680.0, 96183.0], [732.0, 94762.0], [720.0, 96084.0], [722.0, 95737.5], [724.0, 96122.0], [734.0, 95375.0], [730.0, 95278.0], [728.0, 95733.0], [718.0, 95541.0], [708.0, 95447.0], [706.0, 95699.0], [704.0, 96098.0], [716.0, 95737.0], [726.0, 96055.0], [764.0, 94605.0], [752.0, 95362.0], [754.0, 95508.0], [756.0, 95071.0], [766.0, 94238.0], [762.0, 95002.0], [760.0, 93996.0], [736.0, 95006.0], [738.0, 95765.0], [740.0, 94699.0], [742.0, 94678.0], [750.0, 94542.0], [748.0, 95355.0], [746.0, 94713.5], [744.0, 95400.0], [758.0, 95113.0], [796.0, 94159.0], [784.0, 94099.0], [786.0, 93721.0], [788.0, 93661.0], [798.0, 94093.0], [794.0, 94120.0], [792.0, 94374.0], [768.0, 94405.0], [770.0, 94188.0], [772.0, 94140.0], [774.0, 94574.0], [782.0, 93950.0], [780.0, 93941.0], [778.0, 94686.0], [776.0, 93790.0], [790.0, 93957.0], [828.0, 91288.0], [816.0, 92873.0], [818.0, 92979.0], [820.0, 92993.0], [830.0, 92008.0], [826.0, 93354.0], [824.0, 92679.0], [800.0, 95042.0], [802.0, 93480.0], [804.0, 93109.0], [812.0, 93147.0], [810.0, 92974.0], [808.0, 93461.0], [822.0, 93390.0], [860.0, 89814.0], [848.0, 90082.0], [850.0, 90284.0], [852.0, 90588.0], [862.0, 90015.0], [858.0, 90808.0], [856.0, 90856.0], [832.0, 91153.0], [834.0, 90933.0], [836.0, 90839.0], [838.0, 91002.0], [846.0, 90752.0], [844.0, 90582.0], [842.0, 90289.0], [840.0, 91208.0], [854.0, 90985.0], [892.0, 88413.0], [880.0, 89580.0], [882.0, 89337.0], [884.0, 89943.0], [894.0, 89296.0], [890.0, 88562.0], [888.0, 89130.0], [864.0, 89784.0], [866.0, 89955.0], [868.0, 89857.0], [870.0, 90291.0], [878.0, 89453.0], [876.0, 89602.0], [874.0, 90111.0], [872.0, 89557.0], [886.0, 89359.0], [924.0, 87780.0], [912.0, 87862.0], [914.0, 87713.0], [916.0, 88666.0], [926.0, 87619.0], [922.0, 88004.0], [920.0, 88676.0], [896.0, 88127.0], [898.0, 88853.0], [902.0, 88298.0], [908.0, 88036.0], [906.0, 88073.0], [904.0, 88804.0], [918.0, 88527.0], [956.0, 86739.0], [958.0, 86254.0], [944.0, 87045.0], [946.0, 87813.0], [948.0, 87477.0], [952.0, 86789.0], [934.0, 88062.0], [932.0, 87452.0], [930.0, 88213.0], [928.0, 87664.0], [942.0, 87164.0], [940.0, 87422.0], [938.0, 87707.0], [936.0, 87874.0], [950.0, 87065.0], [988.0, 83745.0], [976.0, 84639.0], [978.0, 84651.0], [980.0, 85890.0], [986.0, 83893.0], [984.0, 83925.0], [966.0, 85583.0], [964.0, 85896.0], [962.0, 86436.0], [960.0, 86841.0], [974.0, 84690.0], [972.0, 84997.0], [970.0, 85813.0], [968.0, 85825.0], [982.0, 84647.0], [1020.0, 83297.0], [1008.0, 83641.0], [1010.0, 84123.0], [1012.0, 84304.0], [1022.0, 82848.0], [1018.0, 83081.0], [1016.0, 83753.0], [992.0, 84206.0], [994.0, 83737.0], [1006.0, 83419.0], [1004.0, 84279.0], [1002.0, 83917.5], [1000.0, 83451.0], [1014.0, 84147.0], [1080.0, 81164.0], [1056.0, 82945.0], [1060.0, 81881.0], [1064.0, 82314.0], [1084.0, 81108.0], [1076.0, 80366.0], [1072.0, 80691.0], [1052.0, 82104.0], [1024.0, 82356.0], [1028.0, 82810.0], [1032.0, 82433.5], [1036.0, 82072.0], [1048.0, 82808.0], [1040.0, 82381.0], [1068.0, 81632.0], [1140.0, 78013.0], [1148.0, 77701.0], [1120.0, 79946.0], [1124.0, 79386.0], [1128.0, 78731.0], [1144.0, 78145.0], [1136.0, 78568.0], [1100.0, 80248.0], [1096.0, 81048.0], [1092.0, 80345.0], [1088.0, 80287.0], [1116.0, 79056.0], [1112.0, 79588.0], [1108.0, 79746.0], [1104.0, 80720.0], [1132.0, 79100.5], [1204.0, 74528.0], [1184.0, 76451.0], [1188.0, 75268.0], [1208.0, 74257.5], [1152.0, 77717.0], [1156.0, 77227.0], [1160.0, 77018.0], [1164.0, 77319.0], [1180.0, 76508.0], [1176.0, 76582.0], [1172.0, 76952.0], [1168.0, 77029.0], [1196.0, 75830.0], [1192.0, 75003.0], [1272.0, 72404.0], [1276.0, 70770.0], [1248.0, 73641.0], [1252.0, 72041.0], [1256.0, 71671.0], [1268.0, 71372.0], [1264.0, 72134.0], [1228.0, 73690.0], [1216.0, 73708.0], [1244.0, 72672.0], [1240.0, 73300.0], [1236.0, 73397.0], [1232.0, 74279.0], [1260.0, 72687.0], [1336.0, 66556.0], [1340.0, 66624.0], [1312.0, 68716.0], [1316.0, 67704.0], [1320.0, 68103.0], [1332.0, 68182.0], [1328.0, 67881.0], [1292.0, 69112.0], [1288.0, 69426.0], [1280.0, 71169.0], [1308.0, 68868.0], [1304.0, 68237.0], [1300.0, 68469.0], [1296.0, 69121.0], [1324.0, 67424.0], [1400.0, 64201.0], [1392.0, 64115.0], [1380.0, 65181.0], [1376.0, 64920.0], [1384.0, 64743.0], [1404.0, 63554.0], [1396.0, 64167.0], [1344.0, 66217.0], [1352.0, 66096.0], [1356.0, 65822.0], [1372.0, 65124.0], [1368.0, 65579.0], [1364.0, 64803.5], [1360.0, 65528.0], [1388.0, 65167.0], [1460.0, 60607.0], [1468.0, 60884.0], [1448.0, 61524.0], [1440.0, 61988.0], [1444.0, 62122.0], [1456.0, 60471.0], [1420.0, 63322.0], [1416.0, 63048.0], [1412.0, 63780.0], [1408.0, 63580.0], [1436.0, 62587.0], [1432.0, 62737.0], [1428.0, 62542.0], [1424.0, 63752.0], [1452.0, 61275.0], [1528.0, 58622.0], [1504.0, 59874.0], [1508.0, 59940.0], [1512.0, 58954.0], [1532.0, 58758.0], [1524.0, 58936.0], [1520.0, 59015.0], [1472.0, 59913.0], [1476.0, 60340.0], [1480.0, 60384.0], [1484.0, 59775.0], [1500.0, 59420.0], [1496.0, 59991.0], [1488.0, 60692.0], [1516.0, 59152.0], [1592.0, 55546.0], [1588.0, 56963.0], [1596.0, 55926.0], [1568.0, 56506.0], [1576.0, 56559.0], [1580.0, 57098.0], [1584.0, 56578.0], [1540.0, 57814.0], [1536.0, 58274.0], [1544.0, 57461.5], [1548.0, 57853.0], [1564.0, 57154.0], [1556.0, 56869.0], [1552.0, 57617.0], [1604.0, 56291.0], [1652.0, 52237.0], [1632.0, 53003.0], [1660.0, 52480.0], [1600.0, 56078.0], [1608.0, 54924.0], [1612.0, 55593.0], [1624.0, 53930.0], [1620.0, 55340.0], [1616.0, 55912.0], [1716.0, 51595.0], [1724.0, 50268.0], [1700.0, 51229.0], [1704.0, 51805.0], [1720.0, 51726.0], [1712.0, 51155.0], [1668.0, 52305.0], [1672.0, 51640.5], [1676.0, 52200.5], [1692.0, 52188.0], [1684.0, 51875.0], [1680.0, 51681.0], [1736.0, 50628.0], [1740.0, 50222.0], [1788.0, 49133.0], [1768.0, 49649.0], [1732.0, 51360.0], [1728.0, 51109.25], [1756.0, 50856.0], [1752.0, 50228.0], [1744.0, 50594.0], [1844.0, 47355.0], [1848.0, 47742.0], [1824.0, 47538.0], [1828.0, 46948.0], [1832.0, 46717.0], [1836.0, 46543.0], [1840.0, 47629.0], [1804.0, 48460.25], [1800.0, 49131.0], [1796.0, 49149.0], [1820.0, 48770.0], [1812.0, 47724.5], [1808.0, 48426.0], [1912.0, 43882.0], [1876.0, 22775.0], [1872.0, 45775.0], [1884.0, 45103.5], [1888.0, 43979.0], [1896.0, 44274.25], [1892.0, 44375.0], [1916.0, 42867.0], [1908.0, 44346.0], [1904.0, 44336.0], [1856.0, 46291.0], [1860.0, 45874.0], [1924.0, 43571.0], [1928.0, 42929.0], [1968.0, 39534.0], [1976.0, 40469.0], [1920.0, 43436.0], [1932.0, 41564.0], [1944.0, 41198.0], [1940.0, 42217.0], [1936.0, 42647.0], [1952.0, 41097.0], [1956.0, 40835.0], [1960.0, 40356.5], [1980.0, 40255.0], [1972.0, 40834.0], [2016.0, 38380.0], [2028.0, 38138.0], [2024.0, 38072.0], [2020.0, 37066.0], [2044.0, 36954.0], [2040.0, 36899.0], [2036.0, 37357.0], [2032.0, 37411.0], [1996.0, 39470.0], [1992.0, 39407.0], [1988.0, 39947.25], [1984.0, 39828.666666666664], [2012.0, 38532.0], [2008.0, 38926.0], [2004.0, 38774.0], [2000.0, 38869.0], [2064.0, 35866.0], [2072.0, 35585.0], [2056.0, 36008.0], [2144.0, 29378.0], [2152.0, 29206.0], [2160.0, 29029.0], [2096.0, 33255.0], [2088.0, 33690.0], [2080.0, 33057.0], [2104.0, 32704.0], [2048.0, 36607.0], [2136.0, 29963.0], [2128.0, 30208.0], [2120.0, 30089.0], [2112.0, 32290.5], [2168.0, 28254.0], [2192.0, 12920.0], [2200.0, 25575.5], [2184.0, 25753.0], [2208.0, 8684.666666666666], [2232.0, 22021.0], [2224.0, 23202.0], [2216.0, 25479.0], [2288.0, 17679.0], [2280.0, 18094.0], [2272.0, 18139.0], [2296.0, 17405.0], [2240.0, 21994.0], [2248.0, 21754.0], [2256.0, 20350.0], [2264.0, 18354.0], [2304.0, 14855.0], [2312.0, 14343.0], [2360.0, 12772.0], [2400.0, 5998.0], [2408.0, 5909.0], [2416.0, 5725.0], [2424.0, 5889.0], [2344.0, 14081.0], [2336.0, 14262.0], [2352.0, 4880.666666666667], [2392.0, 9563.0], [2384.0, 9803.0], [2376.0, 9975.0], [2368.0, 10536.0], [2440.0, 5676.0], [2432.0, 5484.0], [2448.0, 2927.0], [2065.0, 34480.0], [2049.0, 18652.0], [2073.0, 34454.0], [2057.0, 36139.0], [2145.0, 29453.0], [2153.0, 29462.0], [2161.0, 28819.0], [2097.0, 33077.0], [2089.0, 33456.0], [2081.0, 33636.0], [2105.0, 32707.0], [2137.0, 29958.0], [2129.0, 30033.0], [2121.0, 30105.0], [2113.0, 32224.0], [2185.0, 25560.0], [2201.0, 25686.0], [2177.0, 25803.5], [2193.0, 25431.0], [2209.0, 12763.0], [2233.0, 22402.0], [2225.0, 22403.0], [2217.0, 25026.0], [2289.0, 17780.0], [2281.0, 18247.0], [2273.0, 18138.0], [2297.0, 17240.0], [2241.0, 21978.0], [2249.0, 21550.0], [2257.0, 18963.0], [2265.0, 18405.0], [2321.0, 14432.5], [2329.0, 14628.5], [2313.0, 14764.0], [2305.0, 14579.0], [2361.0, 13074.0], [2353.0, 13949.0], [2401.0, 5939.0], [2409.0, 5649.0], [2425.0, 5867.0], [2345.0, 14229.0], [2337.0, 14161.0], [2393.0, 9707.0], [2385.0, 10055.0], [2377.0, 10212.0], [2369.0, 10117.0], [2449.0, 5656.0], [1081.0, 81281.0], [1057.0, 81881.0], [1061.0, 81698.0], [1065.0, 82062.0], [1085.0, 80610.0], [1077.0, 80265.0], [1073.0, 80931.0], [1025.0, 82534.0], [1033.0, 82511.0], [1029.0, 82955.0], [1053.0, 82452.0], [1049.0, 83394.0], [1045.0, 82262.5], [1041.0, 82456.0], [1069.0, 80391.0], [1145.0, 78725.0], [1121.0, 79369.0], [1125.0, 80351.0], [1129.0, 79641.0], [1149.0, 78075.0], [1141.0, 79361.0], [1137.0, 78966.0], [1089.0, 81014.0], [1093.0, 80658.0], [1097.0, 81397.0], [1101.0, 80517.0], [1117.0, 79085.0], [1113.0, 79578.0], [1109.0, 79770.0], [1105.0, 80850.0], [1133.0, 78657.0], [1209.0, 74016.0], [1213.0, 74522.0], [1185.0, 76449.0], [1189.0, 75566.0], [1193.0, 74743.0], [1205.0, 73855.0], [1201.0, 74422.0], [1165.0, 78351.0], [1161.0, 77789.0], [1157.0, 77795.0], [1181.0, 76576.0], [1177.0, 76961.0], [1173.0, 76354.0], [1169.0, 77801.0], [1197.0, 74166.0], [1273.0, 71568.0], [1249.0, 72511.0], [1253.0, 72543.0], [1257.0, 72005.0], [1277.0, 70978.0], [1269.0, 71040.0], [1265.0, 71815.0], [1225.0, 74060.75], [1221.0, 73807.5], [1229.0, 73469.0], [1245.0, 73305.0], [1241.0, 73351.0], [1237.0, 73425.0], [1233.0, 74418.0], [1261.0, 72372.0], [1337.0, 66483.0], [1313.0, 68064.0], [1317.0, 68431.0], [1321.0, 67997.0], [1341.0, 66603.0], [1333.0, 67281.0], [1329.0, 67723.0], [1281.0, 70483.0], [1285.0, 69883.5], [1289.0, 70038.0], [1293.0, 69779.0], [1309.0, 68714.0], [1305.0, 67964.0], [1301.0, 68609.0], [1297.0, 69308.0], [1325.0, 67792.0], [1401.0, 63521.0], [1377.0, 64830.0], [1381.0, 65397.0], [1405.0, 62980.0], [1397.0, 63944.0], [1393.0, 64495.0], [1357.0, 64852.0], [1373.0, 64632.0], [1369.0, 64928.0], [1365.0, 64805.0], [1389.0, 65102.0], [1465.0, 60218.0], [1441.0, 61570.0], [1445.0, 61593.0], [1449.0, 60977.0], [1469.0, 59969.0], [1461.0, 60457.0], [1457.0, 61065.0], [1409.0, 63776.0], [1413.0, 64254.0], [1417.0, 63376.0], [1421.0, 63001.0], [1437.0, 63311.0], [1433.0, 62408.0], [1429.0, 63120.0], [1425.0, 63170.0], [1453.0, 60731.0], [1521.0, 58501.0], [1529.0, 57737.0], [1505.0, 59967.0], [1513.0, 60279.0], [1533.0, 57695.0], [1525.0, 58433.0], [1473.0, 60499.0], [1477.0, 60821.0], [1481.0, 59877.0], [1485.0, 59963.0], [1501.0, 59522.0], [1497.0, 59791.0], [1493.0, 59692.0], [1489.0, 59673.0], [1517.0, 59239.0], [1593.0, 56327.0], [1597.0, 55957.0], [1569.0, 57471.0], [1573.0, 56833.5], [1577.0, 57896.0], [1581.0, 56886.0], [1589.0, 56442.0], [1585.0, 56257.0], [1537.0, 58312.0], [1541.0, 58393.0], [1545.0, 57701.0], [1549.0, 57240.0], [1565.0, 56738.0], [1561.0, 56603.0], [1557.0, 56605.0], [1553.0, 56836.0], [1649.0, 52331.5], [1653.0, 52878.0], [1657.0, 52443.5], [1633.0, 53561.0], [1637.0, 52777.666666666664], [1641.0, 52359.5], [1601.0, 55831.0], [1605.0, 55215.0], [1609.0, 55829.0], [1613.0, 55002.0], [1625.0, 54649.0], [1621.0, 54321.0], [1617.0, 55223.0], [1717.0, 51567.0], [1721.0, 51425.0], [1697.0, 51409.0], [1701.0, 51926.0], [1705.0, 50906.0], [1709.0, 51223.0], [1713.0, 51829.0], [1665.0, 52403.333333333336], [1693.0, 51298.0], [1681.0, 51927.0], [1781.0, 48950.833333333336], [1769.0, 49864.0], [1789.0, 49547.0], [1785.0, 48912.0], [1741.0, 50240.0], [1737.0, 51405.0], [1729.0, 51462.0], [1757.0, 49915.0], [1753.0, 50717.0], [1749.0, 50166.5], [1745.0, 49967.0], [1853.0, 46825.5], [1825.0, 47490.0], [1829.0, 48120.0], [1833.0, 46788.0], [1849.0, 46546.0], [1845.0, 46559.0], [1841.0, 47131.0], [1797.0, 49182.0], [1793.0, 48712.0], [1821.0, 47342.0], [1817.0, 47906.0], [1809.0, 49114.0], [1905.0, 43814.0], [1877.0, 22585.5], [1885.0, 45224.0], [1889.0, 44480.0], [1897.0, 44687.0], [1917.0, 43733.0], [1857.0, 47344.0], [1861.0, 46309.0], [1865.0, 45372.5], [1929.0, 41734.0], [1933.0, 42073.0], [1925.0, 42666.0], [1949.0, 40785.666666666664], [1945.0, 41068.0], [1941.0, 41812.0], [1937.0, 42529.0], [1969.0, 39629.0], [1981.0, 20304.5], [1953.0, 40825.0], [1957.0, 39632.0], [1961.0, 39964.0], [1973.0, 40195.0], [2041.0, 36749.0], [2037.0, 37267.0], [2045.0, 36558.0], [2029.0, 19000.0], [2025.0, 37126.0], [2021.0, 37984.0], [2017.0, 38604.0], [2033.0, 37684.0], [1997.0, 39155.0], [1993.0, 39268.0], [1989.0, 39706.0], [2013.0, 38537.0], [2009.0, 38949.0], [2005.0, 39069.0], [2001.0, 37838.0], [2066.0, 35968.0], [2074.0, 34426.0], [2058.0, 35913.0], [2050.0, 36287.0], [2146.0, 29781.0], [2154.0, 29488.0], [2162.0, 28780.0], [2098.0, 329.0], [2090.0, 33218.0], [2082.0, 33918.0], [2106.0, 32540.0], [2138.0, 29664.0], [2130.0, 29630.0], [2122.0, 29964.0], [2114.0, 31634.0], [2170.0, 28321.0], [2194.0, 25485.0], [2202.0, 25339.0], [2178.0, 25699.0], [2234.0, 21960.0], [2226.0, 22399.0], [2218.0, 24669.0], [2210.0, 25272.0], [2290.0, 9031.0], [2282.0, 18039.0], [2274.0, 18212.0], [2298.0, 16708.0], [2250.0, 21070.0], [2258.0, 18748.0], [2266.0, 18667.0], [2314.0, 14480.0], [2322.0, 14239.0], [2306.0, 14821.0], [2362.0, 12673.0], [2354.0, 13915.0], [2330.0, 14293.0], [2402.0, 6154.0], [2410.0, 5907.0], [2426.0, 5559.0], [2346.0, 14454.0], [2338.0, 14160.0], [2394.0, 9502.0], [2386.0, 9819.0], [2378.0, 9935.0], [2370.0, 10065.0], [2442.0, 5750.0], [2434.0, 4078.6666666666665], [2450.0, 5441.0], [2067.0, 35739.0], [2075.0, 17500.5], [2147.0, 29422.0], [2163.0, 28308.0], [2059.0, 35629.0], [2051.0, 36685.0], [2155.0, 29294.0], [2091.0, 33192.0], [2083.0, 33556.0], [2099.0, 33142.5], [2107.0, 32576.0], [2115.0, 15517.5], [2139.0, 29610.0], [2131.0, 29776.0], [2123.0, 30104.0], [2171.0, 27810.0], [2187.0, 25591.0], [2195.0, 25774.0], [2179.0, 25987.0], [2203.0, 12814.0], [2235.0, 11229.5], [2227.0, 22710.0], [2219.0, 24725.0], [2211.0, 25129.0], [2283.0, 17791.0], [2275.0, 18335.0], [2291.0, 18077.0], [2299.0, 16728.0], [2243.0, 21827.0], [2251.0, 21049.0], [2259.0, 18483.0], [2267.0, 18471.0], [2315.0, 14284.0], [2331.0, 14413.0], [2363.0, 12815.0], [2355.0, 13968.0], [2403.0, 6066.0], [2411.0, 6058.0], [2419.0, 5751.666666666667], [2347.0, 14436.0], [2339.0, 14546.0], [2395.0, 6024.0], [2387.0, 9529.0], [2379.0, 10003.0], [2443.0, 5778.0], [2435.0, 930.0], [541.0, 101580.0], [543.0, 101370.0], [537.0, 101963.0], [519.0, 103648.0], [517.0, 104370.0], [515.0, 103795.0], [513.0, 104359.0], [535.0, 103308.0], [533.0, 103056.0], [531.0, 103865.0], [529.0, 104074.0], [527.0, 103909.0], [525.0, 103188.0], [523.0, 104261.0], [521.0, 103470.0], [573.0, 101085.0], [575.0, 100315.0], [571.0, 100926.0], [569.0, 101037.0], [567.0, 101555.0], [565.0, 101436.0], [563.0, 100934.0], [559.0, 101627.5], [545.0, 102161.0], [551.0, 101161.0], [549.0, 101216.0], [557.0, 102043.0], [555.0, 101150.0], [553.0, 101531.0], [603.0, 100284.0], [605.0, 99679.0], [601.0, 99650.0], [583.0, 100203.0], [581.0, 100212.0], [579.0, 100143.0], [577.0, 100283.0], [599.0, 99615.0], [597.0, 100032.0], [595.0, 100530.0], [593.0, 101086.0], [589.0, 100719.0], [587.0, 100099.0], [585.0, 100861.0], [637.0, 97917.0], [639.0, 97650.0], [635.0, 97718.5], [633.0, 97824.0], [631.0, 97333.0], [629.0, 98242.0], [627.0, 97503.0], [625.0, 97586.0], [623.0, 98674.0], [611.0, 98373.0], [609.0, 98744.0], [615.0, 99390.0], [613.0, 99115.0], [621.0, 98064.0], [619.0, 98340.0], [617.0, 99222.0], [669.0, 96395.0], [671.0, 96800.0], [667.0, 96252.0], [665.0, 97259.0], [663.0, 96594.0], [661.0, 96626.0], [659.0, 96668.0], [655.0, 97179.0], [643.0, 96578.0], [641.0, 97130.0], [647.0, 96290.0], [645.0, 97354.0], [653.0, 97311.0], [651.0, 97329.0], [649.0, 96428.0], [701.0, 96661.0], [703.0, 96447.0], [699.0, 95908.0], [697.0, 95874.0], [695.0, 96756.0], [693.0, 95792.0], [691.0, 96623.0], [689.0, 96941.0], [687.0, 96806.0], [675.0, 96144.0], [673.0, 96683.0], [679.0, 96426.0], [677.0, 97174.0], [685.0, 96020.0], [683.0, 96608.0], [681.0, 96352.0], [733.0, 95220.0], [723.0, 96038.0], [735.0, 95593.0], [725.0, 95539.0], [731.0, 95395.0], [729.0, 95782.0], [719.0, 96367.0], [707.0, 96427.0], [705.0, 95561.0], [717.0, 96123.0], [715.0, 95817.28571428572], [727.0, 95900.0], [765.0, 93965.0], [767.0, 94540.0], [753.0, 95021.0], [755.0, 94543.0], [757.0, 95099.0], [763.0, 94582.0], [761.0, 94621.0], [751.0, 95586.0], [737.0, 95221.0], [739.0, 94716.0], [741.0, 94873.0], [743.0, 94939.0], [749.0, 95344.0], [747.0, 94779.0], [759.0, 94027.0], [797.0, 94444.0], [799.0, 93578.0], [785.0, 93790.0], [787.0, 93864.0], [789.0, 93814.0], [795.0, 94262.0], [793.0, 93764.0], [783.0, 93806.0], [769.0, 94627.0], [771.0, 94105.0], [773.0, 93873.0], [775.0, 94587.0], [781.0, 94129.0], [779.0, 93917.0], [777.0, 94814.0], [791.0, 94647.0], [829.0, 91568.0], [831.0, 91515.0], [817.0, 93322.0], [819.0, 93148.0], [821.0, 92462.0], [827.0, 92050.0], [825.0, 93160.0], [815.0, 93470.0], [801.0, 94485.0], [803.0, 92971.0], [807.0, 93840.0], [805.0, 93242.0], [813.0, 93447.0], [811.0, 93208.0], [809.0, 94323.0], [823.0, 92890.0], [861.0, 90551.0], [863.0, 90537.0], [849.0, 90867.0], [851.0, 90575.0], [853.0, 90577.0], [859.0, 90101.0], [857.0, 90709.0], [847.0, 90816.0], [833.0, 91558.0], [835.0, 91753.0], [837.0, 91587.0], [839.0, 91337.0], [845.0, 90045.0], [843.0, 91091.0], [841.0, 90850.0], [855.0, 90231.0], [893.0, 87961.0], [895.0, 87843.0], [881.0, 89182.0], [883.0, 89146.0], [885.0, 90075.0], [891.0, 88740.0], [889.0, 89177.0], [879.0, 89288.0], [865.0, 91122.0], [867.0, 90668.0], [869.0, 90657.0], [871.0, 90199.0], [877.0, 90252.0], [875.0, 89457.0], [873.0, 90184.0], [887.0, 89546.0], [925.0, 88224.0], [927.0, 87888.0], [913.0, 87785.0], [915.0, 88235.0], [917.0, 88685.0], [923.0, 87909.0], [921.0, 88519.0], [911.0, 88230.0], [897.0, 88450.0], [899.0, 88706.0], [903.0, 88186.0], [909.0, 88528.0], [907.0, 88757.0], [919.0, 87642.0], [955.0, 87004.5], [953.0, 87594.0], [959.0, 87482.0], [945.0, 87695.0], [947.0, 86991.0], [949.0, 87850.0], [957.0, 87813.0], [935.0, 87196.0], [933.0, 87890.0], [931.0, 87280.0], [929.0, 88374.0], [943.0, 87023.0], [941.0, 87590.0], [939.0, 87851.0], [937.0, 87369.0], [951.0, 87366.0], [989.0, 83909.0], [985.0, 84935.0], [991.0, 84656.0], [977.0, 84848.0], [979.0, 84997.0], [981.0, 84533.0], [987.0, 85017.0], [967.0, 85863.0], [965.0, 86310.0], [963.0, 86329.0], [961.0, 86611.0], [975.0, 84640.0], [973.0, 85186.0], [971.0, 85377.0], [969.0, 86068.0], [983.0, 84014.0], [1021.0, 82770.0], [1023.0, 83231.0], [1009.0, 83258.0], [1011.0, 83821.0], [1013.0, 83448.0], [1019.0, 82257.0], [1017.0, 83534.0], [1007.0, 83416.0], [993.0, 83484.0], [999.0, 83850.75], [995.0, 83480.0], [1005.0, 84348.0], [1003.0, 84277.0], [1015.0, 84221.0], [1082.0, 80305.0], [1086.0, 80348.0], [1058.0, 81323.0], [1062.0, 81927.0], [1066.0, 81586.0], [1078.0, 80351.0], [1074.0, 80500.0], [1026.0, 82803.0], [1030.0, 82225.0], [1034.0, 83139.0], [1038.0, 83034.0], [1050.0, 82018.0], [1046.0, 82949.0], [1042.0, 82605.0], [1070.0, 80925.0], [1146.0, 77740.0], [1150.0, 78207.0], [1122.0, 79014.0], [1126.0, 78736.0], [1130.0, 79285.0], [1142.0, 78014.0], [1102.0, 80600.0], [1098.0, 80938.0], [1094.0, 80664.0], [1090.0, 80929.0], [1118.0, 79022.0], [1114.0, 80568.0], [1110.0, 79903.0], [1106.0, 80424.0], [1134.0, 78790.0], [1202.0, 74382.0], [1210.0, 74249.0], [1214.0, 73876.0], [1186.0, 75659.0], [1190.0, 74502.0], [1206.0, 74673.0], [1182.0, 76467.0], [1154.0, 77398.0], [1158.0, 77483.0], [1162.0, 76942.0], [1166.0, 77718.0], [1178.0, 76181.0], [1174.0, 76819.0], [1170.0, 77616.0], [1198.0, 74057.0], [1194.0, 74832.0], [1266.0, 71766.0], [1278.0, 72090.0], [1250.0, 72381.0], [1254.0, 73016.0], [1258.0, 71926.0], [1274.0, 70714.0], [1230.0, 74439.0], [1226.0, 74368.0], [1218.0, 73720.5], [1246.0, 72267.0], [1242.0, 73398.0], [1238.0, 74194.0], [1234.0, 74167.0], [1262.0, 72116.0], [1330.0, 68319.0], [1342.0, 66893.0], [1314.0, 68047.0], [1318.0, 68476.0], [1322.0, 67517.0], [1334.0, 67426.0], [1294.0, 69267.0], [1290.0, 69792.0], [1286.0, 69545.0], [1282.0, 69653.0], [1310.0, 68668.0], [1306.0, 68849.0], [1302.0, 68212.0], [1298.0, 68548.0], [1326.0, 67364.0], [1398.0, 63661.0], [1406.0, 63986.0], [1382.0, 64986.0], [1402.0, 63386.0], [1394.0, 64224.0], [1374.0, 65371.0], [1350.0, 66478.0], [1346.0, 66179.0], [1354.0, 65058.5], [1358.0, 65272.0], [1370.0, 65492.0], [1366.0, 64772.0], [1362.0, 65562.5], [1390.0, 65556.0], [1466.0, 60317.0], [1470.0, 60270.0], [1442.0, 61614.0], [1446.0, 61526.0], [1422.0, 63576.0], [1418.0, 64356.0], [1414.0, 62912.0], [1410.0, 62933.0], [1438.0, 63542.0], [1434.0, 63519.0], [1430.0, 62885.0], [1426.0, 63814.0], [1454.0, 60210.0], [1450.0, 61490.0], [1530.0, 57783.0], [1534.0, 58083.0], [1506.0, 58966.0], [1514.0, 59794.0], [1526.0, 58427.0], [1522.0, 58634.0], [1502.0, 59601.0], [1474.0, 60823.0], [1478.0, 60621.0], [1482.0, 60723.0], [1486.0, 59766.0], [1498.0, 60748.0], [1494.0, 61026.0], [1490.0, 59738.0], [1518.0, 59510.0], [1598.0, 55539.0], [1570.0, 57462.0], [1574.0, 57064.0], [1578.0, 57004.0], [1582.0, 56421.0], [1594.0, 55417.0], [1590.0, 56358.0], [1586.0, 56847.0], [1538.0, 58409.0], [1542.0, 57944.0], [1546.0, 57120.0], [1550.0, 57581.0], [1566.0, 56509.0], [1562.0, 57295.0], [1558.0, 56581.0], [1554.0, 57600.0], [1614.0, 54579.0], [1662.0, 52273.5], [1634.0, 53603.0], [1642.0, 53115.0], [1650.0, 52663.0], [1602.0, 55697.0], [1606.0, 55945.0], [1610.0, 54606.0], [1630.0, 53966.666666666664], [1622.0, 53788.0], [1618.0, 53896.0], [1722.0, 51199.0], [1702.0, 51506.0], [1698.0, 50997.0], [1706.0, 51184.0], [1714.0, 51251.0], [1666.0, 52125.0], [1670.0, 51853.0], [1678.0, 52261.5], [1686.0, 51344.5], [1682.0, 52492.0], [1790.0, 49468.0], [1766.0, 49841.0], [1774.0, 49164.0], [1770.0, 49630.0], [1782.0, 49741.0], [1778.0, 50094.0], [1742.0, 50516.0], [1738.0, 49885.0], [1734.0, 50819.0], [1758.0, 50455.0], [1754.0, 50894.0], [1750.0, 49676.0], [1854.0, 46234.0], [1826.0, 47678.0], [1834.0, 47620.0], [1838.0, 46912.5], [1850.0, 47214.0], [1846.0, 47275.0], [1842.0, 47583.0], [1798.0, 48165.0], [1822.0, 47961.0], [1818.0, 48784.0], [1914.0, 43428.0], [1886.0, 22440.5], [1874.0, 45471.0], [1878.0, 60.0], [1882.0, 45378.0], [1890.0, 5264.555555555556], [1898.0, 43739.0], [1902.0, 44109.666666666664], [1918.0, 43290.0], [1910.0, 43888.5], [1906.0, 44105.0], [1858.0, 46548.0], [1866.0, 45203.0], [1926.0, 41859.0], [1922.0, 42773.0], [1930.0, 42868.0], [1934.0, 41705.0], [1946.0, 41010.0], [1942.0, 41240.0], [1938.0, 42883.0], [1970.0, 40018.0], [1958.0, 39633.0], [1962.0, 40914.0], [1974.0, 39355.0], [2046.0, 36351.0], [2026.0, 38240.0], [2022.0, 37993.0], [2018.0, 37900.0], [2030.0, 37556.0], [2042.0, 36918.0], [2038.0, 37230.0], [2034.0, 37353.0], [1998.0, 38828.0], [1994.0, 39256.0], [1990.0, 38873.0], [2014.0, 37357.0], [2010.0, 38557.0], [2006.0, 37617.0], [2002.0, 38689.0], [2068.0, 35642.0], [2076.0, 34334.0], [2052.0, 36082.0], [2148.0, 29723.0], [2156.0, 29235.0], [2164.0, 28366.0], [2092.0, 33122.0], [2084.0, 33650.0], [2100.0, 32972.0], [2108.0, 32888.0], [2116.0, 30613.0], [2140.0, 29493.0], [2132.0, 29994.0], [2124.0, 29982.0], [2172.0, 25694.0], [2188.0, 25443.0], [2196.0, 25498.0], [2236.0, 11202.5], [2228.0, 22303.0], [2220.0, 24078.0], [2212.0, 25378.0], [2284.0, 17923.0], [2276.0, 18078.0], [2204.0, 25386.0], [2292.0, 17714.0], [2300.0, 17064.0], [2244.0, 21883.0], [2252.0, 20829.0], [2260.0, 18579.0], [2268.0, 18619.0], [2332.0, 14312.0], [2316.0, 14458.0], [2428.0, 5803.0], [2324.0, 14515.0], [2308.0, 14459.5], [2364.0, 10602.0], [2356.0, 13845.0], [2404.0, 5787.0], [2412.0, 6039.0], [2420.0, 5965.0], [2348.0, 4763.333333333333], [2340.0, 14157.0], [2396.0, 6306.0], [2388.0, 9944.0], [2380.0, 9795.0], [2372.0, 9945.0], [2444.0, 3126.5], [2436.0, 4111.333333333333], [2452.0, 404.0], [2069.0, 35862.0], [2053.0, 35003.0], [2077.0, 34157.0], [2149.0, 29767.0], [2157.0, 29085.0], [2165.0, 28515.0], [2093.0, 33220.0], [2085.0, 33471.0], [2101.0, 32932.0], [2109.0, 32561.0], [2117.0, 30225.0], [2125.0, 30256.0], [2197.0, 25551.0], [2189.0, 13096.5], [2181.0, 25685.0], [2237.0, 21931.0], [2221.0, 24459.0], [2213.0, 25273.0], [2285.0, 17973.0], [2277.0, 18027.0], [2205.0, 25320.0], [2293.0, 17711.0], [2245.0, 21811.0], [2253.0, 20743.0], [2261.0, 18870.0], [2269.0, 18413.0], [2317.0, 14670.0], [2325.0, 222.0], [2309.0, 14809.0], [2365.0, 10722.0], [2357.0, 13973.0], [2333.0, 14585.0], [2405.0, 5804.0], [2413.0, 5816.0], [2421.0, 5744.0], [2341.0, 14102.0], [2349.0, 13972.0], [2397.0, 5866.0], [2389.0, 9672.0], [2381.0, 10177.0], [2373.0, 10344.0], [2437.0, 5871.0], [2445.0, 5607.0], [1083.0, 80614.0], [1087.0, 80420.0], [1063.0, 81687.0], [1067.0, 82037.0], [1079.0, 80514.0], [1075.0, 80899.0], [1055.0, 82157.0], [1027.0, 83093.0], [1039.0, 83490.0], [1035.0, 82886.0], [1051.0, 82230.0], [1047.0, 82301.0], [1043.0, 82976.0], [1071.0, 80360.0], [1147.0, 77291.0], [1151.0, 77844.0], [1123.0, 79131.0], [1127.0, 79445.0], [1143.0, 78351.0], [1139.0, 78913.5], [1119.0, 79078.0], [1091.0, 80600.0], [1095.0, 80040.0], [1099.0, 80929.0], [1103.0, 80203.0], [1115.0, 79728.0], [1111.0, 81027.0], [1107.0, 80576.0], [1135.0, 78714.0], [1203.0, 74105.0], [1215.0, 74155.0], [1187.0, 75684.0], [1191.0, 74816.0], [1211.0, 73883.0], [1167.0, 77724.0], [1163.0, 76941.0], [1159.0, 78368.0], [1155.0, 77936.0], [1183.0, 75753.0], [1179.0, 75651.0], [1175.0, 75916.0], [1171.0, 76735.0], [1195.0, 75089.0], [1275.0, 70708.0], [1279.0, 70702.0], [1251.0, 72310.0], [1255.0, 72001.0], [1259.0, 72275.0], [1271.0, 71910.5], [1267.0, 71557.0], [1247.0, 72450.0], [1219.0, 73552.0], [1231.0, 74025.0], [1243.0, 72453.0], [1239.0, 73398.0], [1235.0, 74002.0], [1263.0, 71900.0], [1339.0, 66400.5], [1343.0, 66331.0], [1315.0, 68203.0], [1319.0, 69020.0], [1323.0, 68085.0], [1335.0, 66551.0], [1331.0, 67540.0], [1311.0, 69259.0], [1283.0, 69942.0], [1287.0, 69268.0], [1291.0, 69741.0], [1295.0, 69505.0], [1307.0, 67964.0], [1303.0, 68960.0], [1299.0, 68121.0], [1327.0, 67578.0], [1403.0, 64390.0], [1407.0, 63583.0], [1379.0, 65320.0], [1387.0, 64873.666666666664], [1383.0, 65604.0], [1399.0, 63635.0], [1395.0, 64552.0], [1375.0, 64534.0], [1347.0, 65762.0], [1355.0, 65808.0], [1351.0, 66009.0], [1359.0, 66261.0], [1371.0, 64834.0], [1367.0, 65617.0], [1391.0, 65661.0], [1467.0, 60463.0], [1471.0, 60039.0], [1443.0, 61371.0], [1447.0, 62051.0], [1451.0, 61516.0], [1463.0, 60985.5], [1459.0, 60145.5], [1439.0, 61684.0], [1415.0, 63768.0], [1419.0, 63630.0], [1423.0, 63320.0], [1435.0, 63371.0], [1431.0, 62798.0], [1427.0, 63565.0], [1455.0, 60137.0], [1527.0, 58393.0], [1535.0, 57640.0], [1511.0, 59178.0], [1531.0, 58928.0], [1523.0, 58478.0], [1503.0, 59193.0], [1475.0, 60426.0], [1479.0, 59837.0], [1483.0, 60761.0], [1487.0, 60605.0], [1499.0, 59129.0], [1495.0, 59835.0], [1491.0, 60141.0], [1515.0, 59002.0], [1595.0, 55788.0], [1599.0, 55776.0], [1571.0, 56452.0], [1575.0, 56915.0], [1579.0, 56985.0], [1583.0, 57358.0], [1591.0, 55913.0], [1587.0, 56462.0], [1567.0, 57323.0], [1539.0, 58101.0], [1547.0, 57122.0], [1551.0, 57777.0], [1563.0, 56493.0], [1559.0, 56635.0], [1555.0, 56851.0], [1659.0, 52780.0], [1639.0, 52914.5], [1647.0, 52647.0], [1643.0, 52475.0], [1655.0, 52531.0], [1651.0, 52311.0], [1631.0, 53387.0], [1603.0, 55345.0], [1607.0, 55011.0], [1611.0, 55508.0], [1615.0, 55533.0], [1627.0, 53803.5], [1623.0, 54251.0], [1619.0, 53872.0], [1723.0, 50805.0], [1703.0, 51904.0], [1707.0, 52179.0], [1711.0, 50810.0], [1719.0, 50702.5], [1715.0, 51530.0], [1695.0, 51322.5], [1667.0, 51438.0], [1691.0, 51914.0], [1683.0, 52021.0], [1743.0, 49913.0], [1791.0, 49400.0], [1763.0, 50045.25], [1767.0, 49070.0], [1783.0, 49570.0], [1739.0, 50513.0], [1735.0, 51568.0], [1731.0, 50399.5], [1759.0, 50431.0], [1755.0, 49858.0], [1751.0, 51053.0], [1747.0, 49769.0], [1855.0, 46486.0], [1851.0, 46489.0], [1827.0, 48417.0], [1831.0, 47633.5], [1835.0, 47733.0], [1839.0, 46585.0], [1847.0, 47091.0], [1843.0, 47209.0], [1807.0, 48675.666666666664], [1795.0, 48763.5], [1823.0, 48678.0], [1819.0, 48733.0], [1811.0, 47899.0], [1863.0, 45845.0], [1911.0, 43807.0], [1875.0, 45143.0], [1879.0, 46050.0], [1891.0, 43920.0], [1899.0, 44512.0], [1915.0, 42949.0], [1907.0, 44059.0], [1887.0, 45021.0], [1859.0, 47318.0], [1871.0, 45658.5], [1867.0, 46474.0], [1927.0, 21600.5], [1923.0, 42447.0], [1931.0, 42760.0], [1935.0, 42573.0], [1951.0, 40484.0], [1943.0, 40952.0], [1939.0, 42634.0], [1971.0, 40584.0], [1955.0, 39794.5], [1967.0, 40391.4], [1979.0, 40467.0], [1975.0, 40781.0], [2047.0, 36364.0], [2027.0, 37776.0], [2019.0, 37931.0], [2031.0, 37662.0], [2043.0, 36876.0], [2039.0, 36489.0], [2035.0, 37343.0], [1999.0, 39361.0], [1995.0, 39342.0], [1991.0, 39312.0], [2015.0, 38211.0], [2007.0, 38969.0], [2003.0, 39102.0], [2062.0, 35473.333333333336], [2070.0, 35465.0], [2054.0, 35972.0], [2078.0, 34065.0], [2150.0, 29465.0], [2158.0, 29445.0], [2166.0, 28281.0], [2094.0, 33046.0], [2102.0, 32928.0], [2110.0, 32108.0], [2118.0, 15293.5], [2142.0, 29526.0], [2134.0, 29824.5], [2126.0, 29921.0], [2174.0, 25897.0], [2182.0, 25605.0], [2190.0, 25507.0], [2238.0, 22005.0], [2198.0, 6638.0], [2230.0, 22368.5], [2222.0, 23951.0], [2214.0, 25199.0], [2286.0, 18055.0], [2278.0, 17855.0], [2206.0, 25254.0], [2294.0, 17695.0], [2246.0, 21418.0], [2254.0, 20362.0], [2262.0, 18814.0], [2270.0, 18614.0], [2302.0, 14745.0], [2318.0, 14503.0], [2326.0, 9607.666666666666], [2310.0, 14796.0], [2366.0, 10652.0], [2358.0, 13885.0], [2334.0, 14541.0], [2414.0, 5748.0], [2342.0, 14285.0], [2350.0, 14128.0], [2398.0, 3176.0], [2390.0, 9931.0], [2374.0, 10009.0], [2430.0, 5546.5], [2438.0, 5505.0], [2446.0, 5478.0], [2071.0, 35494.0], [2167.0, 14358.5], [2063.0, 35721.0], [2055.0, 35940.0], [2079.0, 33804.0], [2151.0, 29266.0], [2159.0, 29393.0], [2095.0, 33187.0], [2087.0, 33586.5], [2103.0, 33291.0], [2119.0, 15234.5], [2143.0, 29816.0], [2135.0, 29577.0], [2127.0, 30236.0], [2175.0, 25679.0], [2279.0, 18287.0], [2295.0, 17966.0], [2191.0, 25593.0], [2239.0, 21968.0], [2231.0, 22136.0], [2223.0, 23949.0], [2215.0, 25064.0], [2287.0, 18121.0], [2207.0, 25173.0], [2303.0, 14820.0], [2247.0, 21803.0], [2255.0, 20727.0], [2263.0, 18462.0], [2271.0, 18216.0], [2319.0, 14367.0], [2423.0, 5823.0], [2311.0, 14767.0], [2367.0, 10341.0], [2359.0, 13597.0], [2327.0, 7247.5], [2335.0, 14430.0], [2407.0, 5799.0], [2415.0, 5983.0], [2343.0, 14536.0], [2351.0, 13977.0], [2391.0, 9899.0], [2383.0, 10026.5], [2375.0, 9863.0], [2399.0, 5984.0], [2431.0, 5750.0], [2439.0, 5673.0], [2447.0, 2145.333333333333], [1.0, 121411.0]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[1244.436800000001, 69785.60239999996]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2452.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1728.9, "minX": 1.63068102E12, "maxY": 17102.533333333333, "series": [{"data": [[1.63068102E12, 12780.283333333333], [1.63068114E12, 3364.116666666667], [1.63068108E12, 17102.533333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63068102E12, 6096.866666666667], [1.63068114E12, 1728.9], [1.63068108E12, 9761.433333333332]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068114E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 31626.103926097006, "minX": 1.63068102E12, "maxY": 117541.78455284555, "series": [{"data": [[1.63068102E12, 31626.103926097006], [1.63068114E12, 117541.78455284555], [1.63068108E12, 85130.0583573487]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068114E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 31620.442263279463, "minX": 1.63068102E12, "maxY": 117535.89024390244, "series": [{"data": [[1.63068102E12, 31620.442263279463], [1.63068114E12, 117535.89024390244], [1.63068108E12, 85123.70028818431]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068114E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 31.139048991354514, "minX": 1.63068102E12, "maxY": 79.98960739030039, "series": [{"data": [[1.63068102E12, 79.98960739030039], [1.63068114E12, 31.414634146341477], [1.63068108E12, 31.139048991354514]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068114E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 51.0, "minX": 1.63068102E12, "maxY": 122345.0, "series": [{"data": [[1.63068102E12, 53631.0], [1.63068114E12, 122345.0], [1.63068108E12, 112679.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63068102E12, 51181.1], [1.63068114E12, 120992.7], [1.63068108E12, 106528.59999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63068102E12, 52893.340000000004], [1.63068114E12, 122197.74], [1.63068108E12, 112053.25]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63068102E12, 52035.25], [1.63068114E12, 121454.35], [1.63068108E12, 109371.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63068102E12, 51.0], [1.63068114E12, 113063.0], [1.63068108E12, 53003.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63068102E12, 34467.0], [1.63068114E12, 116823.0], [1.63068108E12, 87536.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068114E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 6066.0, "minX": 1.0, "maxY": 119720.0, "series": [{"data": [[2.0, 13741.0], [32.0, 29526.0], [33.0, 86008.0], [34.0, 82847.0], [35.0, 93790.0], [36.0, 40959.0], [39.0, 85374.5], [38.0, 74004.0], [41.0, 49940.0], [40.0, 83490.0], [42.0, 104691.0], [45.0, 94596.0], [46.0, 25511.5], [48.0, 119720.0], [3.0, 16728.0], [54.0, 96623.0], [57.0, 14369.0], [4.0, 12793.5], [74.0, 104832.5], [78.0, 115534.5], [5.0, 34426.0], [6.0, 45224.0], [7.0, 21070.0], [8.0, 85863.0], [9.0, 94052.5], [10.0, 32540.0], [11.0, 81698.0], [12.0, 41082.5], [13.0, 43807.5], [14.0, 74135.5], [15.0, 69779.0], [16.0, 60832.5], [1.0, 25506.0], [17.0, 100300.5], [18.0, 58634.0], [19.0, 83686.0], [20.0, 45695.5], [22.0, 106849.0], [23.0, 56836.0], [24.0, 88333.0], [25.0, 90668.0], [26.0, 44105.0], [27.0, 38249.0], [28.0, 47111.0], [29.0, 18963.0], [30.0, 65044.0], [31.0, 73905.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[36.0, 101506.0], [41.0, 50688.0], [40.0, 87850.0], [42.0, 80938.0], [45.0, 95395.0], [48.0, 6066.0], [54.0, 96232.0], [6.0, 111005.0], [7.0, 76354.0], [8.0, 85377.0], [10.0, 86254.0], [11.0, 81847.0], [13.0, 59685.5], [14.0, 30444.5], [15.0, 35607.0], [1.0, 67316.0], [17.0, 99229.0], [18.0, 36139.0], [22.0, 50717.0], [23.0, 49114.0], [24.0, 88562.0], [25.0, 89985.0], [26.0, 44480.0], [27.0, 38604.0], [29.0, 60748.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 78.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 6049.0, "minX": 1.0, "maxY": 119719.0, "series": [{"data": [[2.0, 13727.5], [32.0, 29524.5], [33.0, 85998.0], [34.0, 82847.0], [35.0, 93780.0], [36.0, 40959.0], [39.0, 85374.0], [38.0, 73998.5], [41.0, 49936.5], [40.0, 83488.0], [42.0, 104689.0], [45.0, 94588.0], [46.0, 25507.0], [48.0, 119719.0], [3.0, 16719.0], [54.0, 96617.0], [57.0, 14360.0], [4.0, 12790.0], [74.0, 104829.0], [78.0, 115528.5], [5.0, 34426.0], [6.0, 45224.0], [7.0, 21063.0], [8.0, 85861.0], [9.0, 94040.5], [10.0, 32534.0], [11.0, 81692.0], [12.0, 41063.5], [13.0, 43807.5], [14.0, 74125.0], [15.0, 69778.0], [16.0, 60828.5], [1.0, 25490.5], [17.0, 100294.0], [18.0, 58631.0], [19.0, 83677.5], [20.0, 45695.5], [22.0, 106830.0], [23.0, 56834.0], [24.0, 88316.0], [25.0, 90664.0], [26.0, 44105.0], [27.0, 38240.5], [28.0, 47111.0], [29.0, 18963.0], [30.0, 65030.5], [31.0, 73897.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[36.0, 101491.0], [41.0, 50665.0], [40.0, 87838.0], [42.0, 80930.0], [45.0, 95379.0], [48.0, 6049.0], [54.0, 96229.0], [6.0, 110984.0], [7.0, 76340.0], [8.0, 85368.0], [10.0, 86239.0], [11.0, 81831.0], [13.0, 59668.5], [14.0, 30415.5], [15.0, 35606.5], [1.0, 67301.5], [17.0, 99218.0], [18.0, 36119.0], [22.0, 50717.0], [23.0, 49089.0], [24.0, 88545.0], [25.0, 89971.5], [26.0, 44480.0], [27.0, 38590.0], [29.0, 60737.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 78.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 41.666666666666664, "minX": 1.63068102E12, "maxY": 41.666666666666664, "series": [{"data": [[1.63068102E12, 41.666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068102E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.63068102E12, "maxY": 22.766666666666666, "series": [{"data": [[1.63068102E12, 14.0], [1.63068114E12, 4.1], [1.63068108E12, 22.766666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63068102E12, 0.43333333333333335], [1.63068108E12, 0.36666666666666664]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63068114E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.63068102E12, "maxY": 22.766666666666666, "series": [{"data": [[1.63068102E12, 0.43333333333333335], [1.63068108E12, 0.36666666666666664]], "isOverall": false, "label": "HTTP请求-failure", "isController": false}, {"data": [[1.63068102E12, 14.0], [1.63068114E12, 4.1], [1.63068108E12, 22.766666666666666]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068114E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.36666666666666664, "minX": 1.63068102E12, "maxY": 22.766666666666666, "series": [{"data": [[1.63068102E12, 14.0], [1.63068114E12, 4.1], [1.63068108E12, 22.766666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63068102E12, 0.43333333333333335], [1.63068108E12, 0.36666666666666664]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63068114E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

