/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 55.0, "minX": 0.0, "maxY": 136251.0, "series": [{"data": [[0.0, 55.0], [0.1, 103.0], [0.2, 185.0], [0.3, 324.0], [0.4, 331.0], [0.5, 340.0], [0.6, 612.0], [0.7, 622.0], [0.8, 632.0], [0.9, 641.0], [1.0, 647.0], [1.1, 854.0], [1.2, 1361.0], [1.3, 1374.0], [1.4, 1521.0], [1.5, 2649.0], [1.6, 2659.0], [1.7, 2665.0], [1.8, 2672.0], [1.9, 2683.0], [2.0, 3384.0], [2.1, 3432.0], [2.2, 3440.0], [2.3, 3450.0], [2.4, 3464.0], [2.5, 3475.0], [2.6, 3486.0], [2.7, 3501.0], [2.8, 3519.0], [2.9, 3543.0], [3.0, 3552.0], [3.1, 3559.0], [3.2, 3569.0], [3.3, 3598.0], [3.4, 3641.0], [3.5, 3657.0], [3.6, 3666.0], [3.7, 3669.0], [3.8, 3679.0], [3.9, 3690.0], [4.0, 3705.0], [4.1, 3741.0], [4.2, 3758.0], [4.3, 3772.0], [4.4, 3783.0], [4.5, 3790.0], [4.6, 3798.0], [4.7, 3804.0], [4.8, 3816.0], [4.9, 3831.0], [5.0, 3839.0], [5.1, 3852.0], [5.2, 3862.0], [5.3, 3969.0], [5.4, 3983.0], [5.5, 3993.0], [5.6, 4014.0], [5.7, 4021.0], [5.8, 4040.0], [5.9, 4157.0], [6.0, 4166.0], [6.1, 4178.0], [6.2, 4188.0], [6.3, 4196.0], [6.4, 4211.0], [6.5, 4252.0], [6.6, 4253.0], [6.7, 4254.0], [6.8, 4296.0], [6.9, 4314.0], [7.0, 4323.0], [7.1, 4334.0], [7.2, 4344.0], [7.3, 4380.0], [7.4, 4388.0], [7.5, 4395.0], [7.6, 4401.0], [7.7, 4406.0], [7.8, 4417.0], [7.9, 4428.0], [8.0, 4436.0], [8.1, 4444.0], [8.2, 4447.0], [8.3, 4455.0], [8.4, 4496.0], [8.5, 4501.0], [8.6, 4577.0], [8.7, 4600.0], [8.8, 4619.0], [8.9, 4623.0], [9.0, 4629.0], [9.1, 4636.0], [9.2, 4642.0], [9.3, 4649.0], [9.4, 4653.0], [9.5, 4660.0], [9.6, 4665.0], [9.7, 4672.0], [9.8, 4676.0], [9.9, 4683.0], [10.0, 4718.0], [10.1, 4761.0], [10.2, 4775.0], [10.3, 4785.0], [10.4, 4797.0], [10.5, 4845.0], [10.6, 4852.0], [10.7, 4863.0], [10.8, 4881.0], [10.9, 4894.0], [11.0, 4920.0], [11.1, 4959.0], [11.2, 4963.0], [11.3, 4967.0], [11.4, 4978.0], [11.5, 4991.0], [11.6, 5009.0], [11.7, 5041.0], [11.8, 5058.0], [11.9, 5069.0], [12.0, 5096.0], [12.1, 5256.0], [12.2, 5282.0], [12.3, 5298.0], [12.4, 5309.0], [12.5, 5573.0], [12.6, 6279.0], [12.7, 6289.0], [12.8, 6291.0], [12.9, 6312.0], [13.0, 6465.0], [13.1, 6478.0], [13.2, 6490.0], [13.3, 6500.0], [13.4, 6518.0], [13.5, 6673.0], [13.6, 6689.0], [13.7, 6702.0], [13.8, 6728.0], [13.9, 6752.0], [14.0, 6759.0], [14.1, 6829.0], [14.2, 6842.0], [14.3, 6852.0], [14.4, 6866.0], [14.5, 6872.0], [14.6, 6884.0], [14.7, 6897.0], [14.8, 6910.0], [14.9, 6918.0], [15.0, 7033.0], [15.1, 7038.0], [15.2, 7040.0], [15.3, 7041.0], [15.4, 7042.0], [15.5, 7043.0], [15.6, 7044.0], [15.7, 7045.0], [15.8, 7045.0], [15.9, 7046.0], [16.0, 7046.0], [16.1, 7047.0], [16.2, 7047.0], [16.3, 7048.0], [16.4, 7048.0], [16.5, 7049.0], [16.6, 7050.0], [16.7, 7050.0], [16.8, 7051.0], [16.9, 7051.0], [17.0, 7052.0], [17.1, 7052.0], [17.2, 7053.0], [17.3, 7053.0], [17.4, 7054.0], [17.5, 7054.0], [17.6, 7054.0], [17.7, 7055.0], [17.8, 7055.0], [17.9, 7056.0], [18.0, 7056.0], [18.1, 7057.0], [18.2, 7057.0], [18.3, 7057.0], [18.4, 7058.0], [18.5, 7059.0], [18.6, 7059.0], [18.7, 7060.0], [18.8, 7061.0], [18.9, 7061.0], [19.0, 7062.0], [19.1, 7063.0], [19.2, 7064.0], [19.3, 7065.0], [19.4, 7066.0], [19.5, 7067.0], [19.6, 7068.0], [19.7, 7068.0], [19.8, 7070.0], [19.9, 7070.0], [20.0, 7071.0], [20.1, 7072.0], [20.2, 7074.0], [20.3, 7075.0], [20.4, 7077.0], [20.5, 7078.0], [20.6, 7080.0], [20.7, 7083.0], [20.8, 7088.0], [20.9, 7091.0], [21.0, 7101.0], [21.1, 7176.0], [21.2, 7195.0], [21.3, 7207.0], [21.4, 7214.0], [21.5, 7225.0], [21.6, 7231.0], [21.7, 7241.0], [21.8, 7489.0], [21.9, 7503.0], [22.0, 7517.0], [22.1, 7526.0], [22.2, 7772.0], [22.3, 7883.0], [22.4, 7898.0], [22.5, 7913.0], [22.6, 7933.0], [22.7, 7961.0], [22.8, 7972.0], [22.9, 7986.0], [23.0, 8010.0], [23.1, 8022.0], [23.2, 8055.0], [23.3, 8591.0], [23.4, 8607.0], [23.5, 8628.0], [23.6, 8650.0], [23.7, 8684.0], [23.8, 8717.0], [23.9, 9390.0], [24.0, 9395.0], [24.1, 9492.0], [24.2, 9729.0], [24.3, 9799.0], [24.4, 9815.0], [24.5, 9823.0], [24.6, 9829.0], [24.7, 9843.0], [24.8, 9861.0], [24.9, 9870.0], [25.0, 9889.0], [25.1, 9906.0], [25.2, 9922.0], [25.3, 9934.0], [25.4, 9959.0], [25.5, 9985.0], [25.6, 10040.0], [25.7, 10053.0], [25.8, 10064.0], [25.9, 10090.0], [26.0, 10100.0], [26.1, 10135.0], [26.2, 10179.0], [26.3, 10201.0], [26.4, 10218.0], [26.5, 10238.0], [26.6, 10256.0], [26.7, 10266.0], [26.8, 10275.0], [26.9, 10299.0], [27.0, 10324.0], [27.1, 10355.0], [27.2, 10372.0], [27.3, 10582.0], [27.4, 10733.0], [27.5, 10751.0], [27.6, 10773.0], [27.7, 10786.0], [27.8, 10797.0], [27.9, 10820.0], [28.0, 10967.0], [28.1, 10999.0], [28.2, 11009.0], [28.3, 11015.0], [28.4, 11022.0], [28.5, 11037.0], [28.6, 11077.0], [28.7, 11179.0], [28.8, 11186.0], [28.9, 11342.0], [29.0, 11773.0], [29.1, 11828.0], [29.2, 11900.0], [29.3, 11963.0], [29.4, 12081.0], [29.5, 12096.0], [29.6, 12112.0], [29.7, 12317.0], [29.8, 12332.0], [29.9, 12338.0], [30.0, 12521.0], [30.1, 12555.0], [30.2, 12565.0], [30.3, 12577.0], [30.4, 12585.0], [30.5, 12600.0], [30.6, 12614.0], [30.7, 12631.0], [30.8, 12646.0], [30.9, 12660.0], [31.0, 12672.0], [31.1, 12679.0], [31.2, 12688.0], [31.3, 12695.0], [31.4, 12702.0], [31.5, 12710.0], [31.6, 12716.0], [31.7, 12722.0], [31.8, 12730.0], [31.9, 12737.0], [32.0, 12744.0], [32.1, 12751.0], [32.2, 12757.0], [32.3, 12759.0], [32.4, 12760.0], [32.5, 12763.0], [32.6, 12767.0], [32.7, 12774.0], [32.8, 12777.0], [32.9, 12789.0], [33.0, 12801.0], [33.1, 12807.0], [33.2, 12810.0], [33.3, 12814.0], [33.4, 12817.0], [33.5, 12858.0], [33.6, 13113.0], [33.7, 13137.0], [33.8, 13150.0], [33.9, 13162.0], [34.0, 13172.0], [34.1, 13179.0], [34.2, 13320.0], [34.3, 13416.0], [34.4, 13431.0], [34.5, 13448.0], [34.6, 13460.0], [34.7, 13526.0], [34.8, 13531.0], [34.9, 13536.0], [35.0, 13612.0], [35.1, 14345.0], [35.2, 14354.0], [35.3, 14368.0], [35.4, 14377.0], [35.5, 14389.0], [35.6, 14449.0], [35.7, 14509.0], [35.8, 14522.0], [35.9, 14547.0], [36.0, 14652.0], [36.1, 14663.0], [36.2, 14683.0], [36.3, 14700.0], [36.4, 15050.0], [36.5, 15059.0], [36.6, 15063.0], [36.7, 15067.0], [36.8, 15072.0], [36.9, 15074.0], [37.0, 15079.0], [37.1, 15083.0], [37.2, 15088.0], [37.3, 15092.0], [37.4, 15099.0], [37.5, 15104.0], [37.6, 15107.0], [37.7, 15111.0], [37.8, 15115.0], [37.9, 15123.0], [38.0, 15158.0], [38.1, 15178.0], [38.2, 15183.0], [38.3, 15192.0], [38.4, 15199.0], [38.5, 15210.0], [38.6, 15222.0], [38.7, 15231.0], [38.8, 15238.0], [38.9, 15248.0], [39.0, 15261.0], [39.1, 15271.0], [39.2, 15434.0], [39.3, 15454.0], [39.4, 15610.0], [39.5, 15674.0], [39.6, 15692.0], [39.7, 15703.0], [39.8, 15716.0], [39.9, 15730.0], [40.0, 15737.0], [40.1, 15750.0], [40.2, 15766.0], [40.3, 15778.0], [40.4, 15809.0], [40.5, 15887.0], [40.6, 15959.0], [40.7, 15986.0], [40.8, 16024.0], [40.9, 16034.0], [41.0, 16039.0], [41.1, 16103.0], [41.2, 16122.0], [41.3, 16156.0], [41.4, 16204.0], [41.5, 16228.0], [41.6, 16284.0], [41.7, 16307.0], [41.8, 16318.0], [41.9, 16409.0], [42.0, 16485.0], [42.1, 16504.0], [42.2, 16597.0], [42.3, 16623.0], [42.4, 16864.0], [42.5, 16866.0], [42.6, 16868.0], [42.7, 16906.0], [42.8, 16960.0], [42.9, 16969.0], [43.0, 16982.0], [43.1, 16993.0], [43.2, 17167.0], [43.3, 17400.0], [43.4, 17477.0], [43.5, 17616.0], [43.6, 17626.0], [43.7, 17638.0], [43.8, 17654.0], [43.9, 17662.0], [44.0, 17673.0], [44.1, 17683.0], [44.2, 17696.0], [44.3, 17706.0], [44.4, 17713.0], [44.5, 17735.0], [44.6, 17756.0], [44.7, 17767.0], [44.8, 17772.0], [44.9, 17777.0], [45.0, 17782.0], [45.1, 17788.0], [45.2, 17792.0], [45.3, 17796.0], [45.4, 17808.0], [45.5, 17983.0], [45.6, 18105.0], [45.7, 18141.0], [45.8, 18289.0], [45.9, 18300.0], [46.0, 18309.0], [46.1, 18321.0], [46.2, 18330.0], [46.3, 18337.0], [46.4, 18346.0], [46.5, 18351.0], [46.6, 18366.0], [46.7, 18576.0], [46.8, 18623.0], [46.9, 18643.0], [47.0, 18811.0], [47.1, 18826.0], [47.2, 18998.0], [47.3, 19004.0], [47.4, 19010.0], [47.5, 19156.0], [47.6, 19186.0], [47.7, 19200.0], [47.8, 19231.0], [47.9, 19551.0], [48.0, 19662.0], [48.1, 19698.0], [48.2, 19722.0], [48.3, 19750.0], [48.4, 19825.0], [48.5, 19835.0], [48.6, 19840.0], [48.7, 19881.0], [48.8, 19907.0], [48.9, 20016.0], [49.0, 20052.0], [49.1, 20064.0], [49.2, 20084.0], [49.3, 20102.0], [49.4, 20127.0], [49.5, 20141.0], [49.6, 20161.0], [49.7, 20168.0], [49.8, 20173.0], [49.9, 20180.0], [50.0, 20191.0], [50.1, 20199.0], [50.2, 20209.0], [50.3, 20216.0], [50.4, 20222.0], [50.5, 20231.0], [50.6, 20243.0], [50.7, 20259.0], [50.8, 20263.0], [50.9, 20273.0], [51.0, 20287.0], [51.1, 20302.0], [51.2, 20371.0], [51.3, 20397.0], [51.4, 20432.0], [51.5, 20450.0], [51.6, 20504.0], [51.7, 20517.0], [51.8, 20531.0], [51.9, 20545.0], [52.0, 20580.0], [52.1, 20649.0], [52.2, 20678.0], [52.3, 20790.0], [52.4, 20816.0], [52.5, 20860.0], [52.6, 20972.0], [52.7, 21017.0], [52.8, 21019.0], [52.9, 21022.0], [53.0, 21025.0], [53.1, 21025.0], [53.2, 21026.0], [53.3, 21027.0], [53.4, 21028.0], [53.5, 21030.0], [53.6, 21031.0], [53.7, 21032.0], [53.8, 21033.0], [53.9, 21034.0], [54.0, 21034.0], [54.1, 21035.0], [54.2, 21035.0], [54.3, 21036.0], [54.4, 21036.0], [54.5, 21037.0], [54.6, 21037.0], [54.7, 21038.0], [54.8, 21038.0], [54.9, 21039.0], [55.0, 21039.0], [55.1, 21039.0], [55.2, 21040.0], [55.3, 21040.0], [55.4, 21040.0], [55.5, 21040.0], [55.6, 21041.0], [55.7, 21041.0], [55.8, 21041.0], [55.9, 21041.0], [56.0, 21042.0], [56.1, 21042.0], [56.2, 21042.0], [56.3, 21043.0], [56.4, 21043.0], [56.5, 21043.0], [56.6, 21043.0], [56.7, 21044.0], [56.8, 21044.0], [56.9, 21044.0], [57.0, 21044.0], [57.1, 21045.0], [57.2, 21045.0], [57.3, 21045.0], [57.4, 21045.0], [57.5, 21045.0], [57.6, 21046.0], [57.7, 21046.0], [57.8, 21046.0], [57.9, 21047.0], [58.0, 21047.0], [58.1, 21047.0], [58.2, 21047.0], [58.3, 21047.0], [58.4, 21048.0], [58.5, 21048.0], [58.6, 21048.0], [58.7, 21048.0], [58.8, 21048.0], [58.9, 21049.0], [59.0, 21049.0], [59.1, 21049.0], [59.2, 21049.0], [59.3, 21049.0], [59.4, 21049.0], [59.5, 21049.0], [59.6, 21050.0], [59.7, 21050.0], [59.8, 21050.0], [59.9, 21050.0], [60.0, 21050.0], [60.1, 21051.0], [60.2, 21051.0], [60.3, 21051.0], [60.4, 21051.0], [60.5, 21051.0], [60.6, 21051.0], [60.7, 21051.0], [60.8, 21051.0], [60.9, 21052.0], [61.0, 21052.0], [61.1, 21052.0], [61.2, 21052.0], [61.3, 21052.0], [61.4, 21052.0], [61.5, 21052.0], [61.6, 21052.0], [61.7, 21053.0], [61.8, 21053.0], [61.9, 21053.0], [62.0, 21053.0], [62.1, 21053.0], [62.2, 21053.0], [62.3, 21053.0], [62.4, 21054.0], [62.5, 21054.0], [62.6, 21054.0], [62.7, 21054.0], [62.8, 21054.0], [62.9, 21054.0], [63.0, 21054.0], [63.1, 21054.0], [63.2, 21055.0], [63.3, 21055.0], [63.4, 21055.0], [63.5, 21055.0], [63.6, 21055.0], [63.7, 21055.0], [63.8, 21055.0], [63.9, 21055.0], [64.0, 21056.0], [64.1, 21056.0], [64.2, 21056.0], [64.3, 21056.0], [64.4, 21056.0], [64.5, 21056.0], [64.6, 21057.0], [64.7, 21057.0], [64.8, 21057.0], [64.9, 21057.0], [65.0, 21057.0], [65.1, 21057.0], [65.2, 21058.0], [65.3, 21058.0], [65.4, 21058.0], [65.5, 21058.0], [65.6, 21059.0], [65.7, 21059.0], [65.8, 21059.0], [65.9, 21059.0], [66.0, 21059.0], [66.1, 21059.0], [66.2, 21060.0], [66.3, 21060.0], [66.4, 21060.0], [66.5, 21061.0], [66.6, 21061.0], [66.7, 21061.0], [66.8, 21061.0], [66.9, 21061.0], [67.0, 21062.0], [67.1, 21062.0], [67.2, 21062.0], [67.3, 21062.0], [67.4, 21063.0], [67.5, 21063.0], [67.6, 21063.0], [67.7, 21064.0], [67.8, 21064.0], [67.9, 21065.0], [68.0, 21065.0], [68.1, 21066.0], [68.2, 21067.0], [68.3, 21067.0], [68.4, 21068.0], [68.5, 21070.0], [68.6, 21072.0], [68.7, 21074.0], [68.8, 21076.0], [68.9, 21079.0], [69.0, 21083.0], [69.1, 21086.0], [69.2, 21092.0], [69.3, 21097.0], [69.4, 21102.0], [69.5, 21113.0], [69.6, 21119.0], [69.7, 21123.0], [69.8, 21133.0], [69.9, 21136.0], [70.0, 21140.0], [70.1, 21147.0], [70.2, 21201.0], [70.3, 22167.0], [70.4, 22200.0], [70.5, 22222.0], [70.6, 22274.0], [70.7, 22349.0], [70.8, 22375.0], [70.9, 22394.0], [71.0, 22428.0], [71.1, 22448.0], [71.2, 22460.0], [71.3, 22470.0], [71.4, 22478.0], [71.5, 22516.0], [71.6, 22526.0], [71.7, 22539.0], [71.8, 22551.0], [71.9, 22563.0], [72.0, 22598.0], [72.1, 22643.0], [72.2, 22696.0], [72.3, 23042.0], [72.4, 23058.0], [72.5, 23085.0], [72.6, 23103.0], [72.7, 23153.0], [72.8, 23172.0], [72.9, 23405.0], [73.0, 23870.0], [73.1, 23906.0], [73.2, 23961.0], [73.3, 24012.0], [73.4, 24047.0], [73.5, 24083.0], [73.6, 24364.0], [73.7, 24778.0], [73.8, 24846.0], [73.9, 25010.0], [74.0, 25018.0], [74.1, 25035.0], [74.2, 25044.0], [74.3, 25056.0], [74.4, 25072.0], [74.5, 25160.0], [74.6, 25249.0], [74.7, 25304.0], [74.8, 25329.0], [74.9, 25339.0], [75.0, 25348.0], [75.1, 25525.0], [75.2, 25776.0], [75.3, 25817.0], [75.4, 25882.0], [75.5, 25922.0], [75.6, 25949.0], [75.7, 25971.0], [75.8, 25997.0], [75.9, 26009.0], [76.0, 26022.0], [76.1, 26043.0], [76.2, 26064.0], [76.3, 26070.0], [76.4, 26080.0], [76.5, 26094.0], [76.6, 26111.0], [76.7, 26121.0], [76.8, 26130.0], [76.9, 26143.0], [77.0, 26149.0], [77.1, 26153.0], [77.2, 26158.0], [77.3, 26161.0], [77.4, 26167.0], [77.5, 26174.0], [77.6, 26181.0], [77.7, 26187.0], [77.8, 26193.0], [77.9, 26198.0], [78.0, 26207.0], [78.1, 26222.0], [78.2, 26229.0], [78.3, 26266.0], [78.4, 26283.0], [78.5, 26301.0], [78.6, 26316.0], [78.7, 26323.0], [78.8, 26335.0], [78.9, 26358.0], [79.0, 26370.0], [79.1, 26484.0], [79.2, 26561.0], [79.3, 26583.0], [79.4, 27499.0], [79.5, 27584.0], [79.6, 30390.0], [79.7, 30502.0], [79.8, 31379.0], [79.9, 31399.0], [80.0, 31413.0], [80.1, 31436.0], [80.2, 31483.0], [80.3, 31825.0], [80.4, 31892.0], [80.5, 31920.0], [80.6, 31991.0], [80.7, 32159.0], [80.8, 32815.0], [80.9, 33968.0], [81.0, 34085.0], [81.1, 34239.0], [81.2, 34266.0], [81.3, 34310.0], [81.4, 34343.0], [81.5, 34525.0], [81.6, 35005.0], [81.7, 35096.0], [81.8, 35111.0], [81.9, 35116.0], [82.0, 35119.0], [82.1, 35123.0], [82.2, 35126.0], [82.3, 35156.0], [82.4, 36313.0], [82.5, 36594.0], [82.6, 38631.0], [82.7, 38787.0], [82.8, 38933.0], [82.9, 39144.0], [83.0, 39344.0], [83.1, 39442.0], [83.2, 40509.0], [83.3, 42367.0], [83.4, 43833.0], [83.5, 45871.0], [83.6, 47750.0], [83.7, 49139.0], [83.8, 50041.0], [83.9, 51797.0], [84.0, 52839.0], [84.1, 54634.0], [84.2, 55858.0], [84.3, 57134.0], [84.4, 57973.0], [84.5, 59655.0], [84.6, 60547.0], [84.7, 61299.0], [84.8, 61326.0], [84.9, 61345.0], [85.0, 62226.0], [85.1, 63226.0], [85.2, 63838.0], [85.3, 64128.0], [85.4, 64254.0], [85.5, 64450.0], [85.6, 66194.0], [85.7, 67381.0], [85.8, 68784.0], [85.9, 69129.0], [86.0, 70377.0], [86.1, 72016.0], [86.2, 73165.0], [86.3, 74539.0], [86.4, 75040.0], [86.5, 76256.0], [86.6, 77702.0], [86.7, 78061.0], [86.8, 79063.0], [86.9, 80774.0], [87.0, 81180.0], [87.1, 82063.0], [87.2, 83880.0], [87.3, 84128.0], [87.4, 85766.0], [87.5, 86779.0], [87.6, 86966.0], [87.7, 87222.0], [87.8, 88725.0], [87.9, 89991.0], [88.0, 90947.0], [88.1, 91042.0], [88.2, 92364.0], [88.3, 93134.0], [88.4, 93577.0], [88.5, 94139.0], [88.6, 94949.0], [88.7, 95864.0], [88.8, 96440.0], [88.9, 97196.0], [89.0, 98328.0], [89.1, 98554.0], [89.2, 98997.0], [89.3, 100252.0], [89.4, 100732.0], [89.5, 101653.0], [89.6, 102575.0], [89.7, 102818.0], [89.8, 103102.0], [89.9, 103503.0], [90.0, 103887.0], [90.1, 104491.0], [90.2, 105033.0], [90.3, 105469.0], [90.4, 106071.0], [90.5, 106538.0], [90.6, 107253.0], [90.7, 107414.0], [90.8, 107837.0], [90.9, 107917.0], [91.0, 108198.0], [91.1, 108589.0], [91.2, 109169.0], [91.3, 109426.0], [91.4, 109609.0], [91.5, 110148.0], [91.6, 110767.0], [91.7, 111263.0], [91.8, 111617.0], [91.9, 111845.0], [92.0, 112330.0], [92.1, 112523.0], [92.2, 112975.0], [92.3, 113693.0], [92.4, 113908.0], [92.5, 114140.0], [92.6, 114263.0], [92.7, 114419.0], [92.8, 114730.0], [92.9, 115212.0], [93.0, 115493.0], [93.1, 115689.0], [93.2, 115797.0], [93.3, 115896.0], [93.4, 115967.0], [93.5, 116079.0], [93.6, 116305.0], [93.7, 116508.0], [93.8, 116790.0], [93.9, 117729.0], [94.0, 117945.0], [94.1, 118170.0], [94.2, 118586.0], [94.3, 118742.0], [94.4, 118937.0], [94.5, 119253.0], [94.6, 119541.0], [94.7, 120279.0], [94.8, 120736.0], [94.9, 120946.0], [95.0, 121094.0], [95.1, 121159.0], [95.2, 121221.0], [95.3, 121374.0], [95.4, 121480.0], [95.5, 121581.0], [95.6, 121756.0], [95.7, 122169.0], [95.8, 122451.0], [95.9, 123726.0], [96.0, 124054.0], [96.1, 124287.0], [96.2, 124359.0], [96.3, 124535.0], [96.4, 125114.0], [96.5, 126238.0], [96.6, 126649.0], [96.7, 127031.0], [96.8, 127341.0], [96.9, 127949.0], [97.0, 128143.0], [97.1, 128236.0], [97.2, 128280.0], [97.3, 128333.0], [97.4, 128378.0], [97.5, 128530.0], [97.6, 128992.0], [97.7, 129153.0], [97.8, 129316.0], [97.9, 129552.0], [98.0, 129838.0], [98.1, 130016.0], [98.2, 130360.0], [98.3, 130553.0], [98.4, 130743.0], [98.5, 131032.0], [98.6, 131405.0], [98.7, 131851.0], [98.8, 132179.0], [98.9, 132334.0], [99.0, 132530.0], [99.1, 132645.0], [99.2, 132781.0], [99.3, 132889.0], [99.4, 132992.0], [99.5, 133313.0], [99.6, 133617.0], [99.7, 133973.0], [99.8, 134380.0], [99.9, 135403.0], [100.0, 136251.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 1674.0, "series": [{"data": [[0.0, 7.0], [132900.0, 6.0], [66700.0, 1.0], [73100.0, 2.0], [76300.0, 3.0], [79500.0, 2.0], [82700.0, 1.0], [85900.0, 1.0], [92300.0, 4.0], [98700.0, 1.0], [105100.0, 2.0], [111500.0, 2.0], [114700.0, 2.0], [117900.0, 3.0], [121100.0, 16.0], [124300.0, 11.0], [130700.0, 1.0], [100.0, 17.0], [34500.0, 9.0], [32900.0, 2.0], [134700.0, 1.0], [36100.0, 1.0], [39300.0, 15.0], [40900.0, 3.0], [45700.0, 2.0], [200.0, 1.0], [55300.0, 1.0], [56900.0, 2.0], [58500.0, 1.0], [60100.0, 2.0], [61700.0, 1.0], [63300.0, 1.0], [69000.0, 1.0], [72200.0, 1.0], [75400.0, 1.0], [300.0, 28.0], [400.0, 4.0], [104200.0, 1.0], [107400.0, 7.0], [110600.0, 2.0], [113800.0, 5.0], [117000.0, 3.0], [120200.0, 4.0], [123400.0, 4.0], [126600.0, 1.0], [129800.0, 4.0], [132400.0, 2.0], [600.0, 49.0], [800.0, 10.0], [1000.0, 1.0], [1300.0, 22.0], [1500.0, 2.0], [2600.0, 54.0], [2700.0, 1.0], [3200.0, 2.0], [3300.0, 3.0], [3400.0, 69.0], [3500.0, 61.0], [3600.0, 66.0], [3700.0, 65.0], [3800.0, 64.0], [3900.0, 30.0], [4000.0, 28.0], [4200.0, 49.0], [4400.0, 89.0], [4600.0, 128.0], [74500.0, 1.0], [77700.0, 4.0], [4800.0, 52.0], [5000.0, 45.0], [80900.0, 2.0], [5200.0, 31.0], [84100.0, 6.0], [93700.0, 3.0], [6200.0, 34.0], [100100.0, 2.0], [6600.0, 27.0], [6400.0, 34.0], [106500.0, 2.0], [109700.0, 1.0], [6800.0, 62.0], [7000.0, 606.0], [112900.0, 2.0], [116100.0, 4.0], [7200.0, 48.0], [7400.0, 13.0], [119300.0, 2.0], [7800.0, 21.0], [8000.0, 25.0], [128900.0, 3.0], [134200.0, 2.0], [9600.0, 1.0], [10000.0, 47.0], [10400.0, 4.0], [10800.0, 12.0], [11600.0, 1.0], [12000.0, 16.0], [12400.0, 1.0], [13200.0, 3.0], [12800.0, 54.0], [13600.0, 11.0], [14400.0, 16.0], [15200.0, 74.0], [15600.0, 26.0], [16000.0, 37.0], [16800.0, 35.0], [17600.0, 80.0], [18400.0, 1.0], [19200.0, 14.0], [20000.0, 44.0], [20800.0, 22.0], [22400.0, 56.0], [23200.0, 1.0], [24000.0, 31.0], [24800.0, 8.0], [26400.0, 5.0], [25600.0, 2.0], [29600.0, 1.0], [30400.0, 9.0], [32000.0, 8.0], [131900.0, 2.0], [36800.0, 1.0], [38400.0, 1.0], [40000.0, 1.0], [52800.0, 1.0], [56000.0, 1.0], [62400.0, 1.0], [73600.0, 1.0], [83200.0, 1.0], [89600.0, 1.0], [96000.0, 1.0], [99200.0, 1.0], [102400.0, 2.0], [105600.0, 1.0], [112000.0, 1.0], [115200.0, 2.0], [118400.0, 1.0], [121600.0, 7.0], [128000.0, 6.0], [132100.0, 10.0], [70300.0, 1.0], [73500.0, 4.0], [76700.0, 1.0], [89500.0, 1.0], [92700.0, 1.0], [95900.0, 2.0], [99100.0, 1.0], [102300.0, 1.0], [105500.0, 2.0], [108700.0, 3.0], [118300.0, 1.0], [121500.0, 10.0], [124700.0, 1.0], [127900.0, 2.0], [136200.0, 2.0], [33100.0, 1.0], [133900.0, 3.0], [36300.0, 1.0], [37900.0, 1.0], [41100.0, 1.0], [42700.0, 1.0], [49100.0, 4.0], [50700.0, 1.0], [52300.0, 2.0], [55500.0, 1.0], [57100.0, 2.0], [58700.0, 1.0], [63500.0, 1.0], [69400.0, 1.0], [75800.0, 1.0], [79000.0, 2.0], [82200.0, 1.0], [91800.0, 1.0], [107800.0, 12.0], [111000.0, 3.0], [114200.0, 9.0], [120600.0, 1.0], [123800.0, 2.0], [127000.0, 9.0], [130200.0, 4.0], [131600.0, 2.0], [135700.0, 2.0], [68500.0, 1.0], [74900.0, 3.0], [78100.0, 2.0], [84500.0, 1.0], [87700.0, 1.0], [90900.0, 3.0], [94100.0, 1.0], [97300.0, 1.0], [100500.0, 4.0], [103700.0, 1.0], [110100.0, 5.0], [116500.0, 6.0], [119700.0, 2.0], [126100.0, 2.0], [129300.0, 5.0], [133400.0, 4.0], [16900.0, 50.0], [17700.0, 108.0], [18500.0, 5.0], [19300.0, 1.0], [20100.0, 82.0], [20900.0, 9.0], [21700.0, 1.0], [22500.0, 52.0], [23300.0, 4.0], [24900.0, 2.0], [26500.0, 24.0], [25700.0, 8.0], [27300.0, 4.0], [28900.0, 1.0], [30500.0, 1.0], [31300.0, 18.0], [32100.0, 1.0], [131100.0, 5.0], [35400.0, 1.0], [38600.0, 8.0], [45000.0, 2.0], [46600.0, 1.0], [54600.0, 4.0], [59400.0, 2.0], [62600.0, 1.0], [64200.0, 17.0], [67600.0, 1.0], [70800.0, 1.0], [83600.0, 2.0], [86800.0, 3.0], [90000.0, 1.0], [93200.0, 3.0], [96400.0, 4.0], [102800.0, 7.0], [106000.0, 2.0], [109200.0, 4.0], [112400.0, 4.0], [115600.0, 8.0], [118800.0, 6.0], [125200.0, 1.0], [128400.0, 6.0], [86700.0, 8.0], [89900.0, 2.0], [93100.0, 2.0], [96300.0, 2.0], [99500.0, 1.0], [102700.0, 2.0], [105900.0, 1.0], [109100.0, 2.0], [112300.0, 10.0], [115500.0, 4.0], [118700.0, 4.0], [121900.0, 2.0], [125100.0, 2.0], [128300.0, 17.0], [132200.0, 4.0], [36500.0, 3.0], [41300.0, 1.0], [46100.0, 1.0], [47700.0, 2.0], [49300.0, 2.0], [52500.0, 1.0], [55700.0, 1.0], [57300.0, 1.0], [60500.0, 2.0], [63700.0, 1.0], [66600.0, 1.0], [69800.0, 2.0], [76200.0, 5.0], [79400.0, 2.0], [89000.0, 2.0], [92200.0, 1.0], [95400.0, 2.0], [98600.0, 4.0], [101800.0, 2.0], [105000.0, 3.0], [108200.0, 1.0], [111400.0, 1.0], [114600.0, 2.0], [117800.0, 6.0], [121000.0, 10.0], [124200.0, 4.0], [127400.0, 1.0], [130600.0, 2.0], [134000.0, 4.0], [65700.0, 2.0], [68900.0, 1.0], [72100.0, 3.0], [94500.0, 1.0], [97700.0, 1.0], [104100.0, 1.0], [107300.0, 4.0], [113700.0, 4.0], [116900.0, 1.0], [123300.0, 1.0], [126500.0, 4.0], [129700.0, 3.0], [8500.0, 11.0], [135800.0, 1.0], [9700.0, 12.0], [9300.0, 15.0], [10100.0, 28.0], [10500.0, 7.0], [10900.0, 16.0], [11700.0, 6.0], [11300.0, 5.0], [12100.0, 11.0], [12500.0, 50.0], [13300.0, 2.0], [12900.0, 1.0], [13700.0, 1.0], [14500.0, 31.0], [15700.0, 73.0], [16100.0, 29.0], [17000.0, 3.0], [17800.0, 13.0], [18600.0, 21.0], [20200.0, 98.0], [21000.0, 1674.0], [22600.0, 20.0], [23400.0, 5.0], [25000.0, 58.0], [25800.0, 20.0], [27400.0, 2.0], [29800.0, 1.0], [30600.0, 2.0], [31400.0, 35.0], [34000.0, 13.0], [133500.0, 4.0], [38800.0, 2.0], [46800.0, 2.0], [50000.0, 3.0], [53200.0, 2.0], [54800.0, 1.0], [59600.0, 1.0], [61200.0, 1.0], [62800.0, 1.0], [64400.0, 2.0], [84000.0, 2.0], [87200.0, 2.0], [96800.0, 2.0], [106400.0, 5.0], [109600.0, 3.0], [116000.0, 7.0], [119200.0, 4.0], [122400.0, 5.0], [128800.0, 1.0], [133700.0, 3.0], [80700.0, 3.0], [83900.0, 5.0], [87100.0, 1.0], [93500.0, 3.0], [96700.0, 1.0], [103100.0, 4.0], [109500.0, 5.0], [115900.0, 14.0], [119100.0, 1.0], [122300.0, 1.0], [128700.0, 1.0], [131400.0, 3.0], [35100.0, 62.0], [36700.0, 1.0], [47900.0, 1.0], [51100.0, 1.0], [54300.0, 1.0], [55900.0, 1.0], [57500.0, 2.0], [59100.0, 3.0], [63900.0, 2.0], [73400.0, 2.0], [92600.0, 1.0], [95800.0, 3.0], [102200.0, 1.0], [105400.0, 2.0], [108600.0, 5.0], [111800.0, 4.0], [115000.0, 2.0], [118200.0, 3.0], [121400.0, 7.0], [124600.0, 2.0], [127800.0, 1.0], [131000.0, 4.0], [133200.0, 1.0], [66100.0, 4.0], [78900.0, 1.0], [91700.0, 1.0], [94900.0, 1.0], [101300.0, 1.0], [104500.0, 1.0], [107700.0, 1.0], [110900.0, 2.0], [114100.0, 6.0], [120500.0, 1.0], [123700.0, 2.0], [126900.0, 2.0], [130100.0, 1.0], [135000.0, 1.0], [17100.0, 4.0], [17900.0, 6.0], [18700.0, 2.0], [19500.0, 10.0], [20300.0, 24.0], [21100.0, 84.0], [22700.0, 4.0], [23500.0, 1.0], [24300.0, 8.0], [25100.0, 13.0], [25900.0, 37.0], [27500.0, 9.0], [28300.0, 1.0], [29100.0, 2.0], [31500.0, 1.0], [32300.0, 6.0], [34200.0, 22.0], [132700.0, 11.0], [35800.0, 1.0], [39000.0, 5.0], [43800.0, 1.0], [45400.0, 1.0], [51800.0, 2.0], [58200.0, 1.0], [59800.0, 2.0], [61400.0, 1.0], [63000.0, 1.0], [68400.0, 3.0], [71600.0, 1.0], [74800.0, 1.0], [78000.0, 4.0], [81200.0, 2.0], [87600.0, 4.0], [90800.0, 3.0], [97200.0, 3.0], [100400.0, 1.0], [103600.0, 2.0], [110000.0, 1.0], [113200.0, 1.0], [116400.0, 8.0], [119600.0, 1.0], [126000.0, 2.0], [129200.0, 7.0], [132000.0, 1.0], [74700.0, 2.0], [77900.0, 4.0], [81100.0, 8.0], [84300.0, 1.0], [87500.0, 1.0], [90700.0, 1.0], [93900.0, 5.0], [97100.0, 1.0], [100300.0, 1.0], [103500.0, 6.0], [106700.0, 6.0], [109900.0, 2.0], [113100.0, 1.0], [116300.0, 2.0], [119500.0, 4.0], [125900.0, 1.0], [129100.0, 5.0], [131500.0, 2.0], [51300.0, 1.0], [52900.0, 2.0], [56100.0, 1.0], [64100.0, 3.0], [70600.0, 1.0], [86600.0, 2.0], [89800.0, 1.0], [96200.0, 1.0], [99400.0, 1.0], [102600.0, 4.0], [105800.0, 1.0], [109000.0, 1.0], [112200.0, 3.0], [115400.0, 3.0], [118600.0, 8.0], [121800.0, 4.0], [125000.0, 1.0], [128200.0, 19.0], [135600.0, 3.0], [133300.0, 4.0], [4300.0, 76.0], [66500.0, 2.0], [4100.0, 50.0], [69700.0, 2.0], [4500.0, 22.0], [4700.0, 43.0], [4900.0, 63.0], [5100.0, 2.0], [5300.0, 12.0], [85700.0, 1.0], [5500.0, 7.0], [92100.0, 2.0], [5900.0, 1.0], [98500.0, 4.0], [6300.0, 8.0], [104900.0, 4.0], [6500.0, 12.0], [6700.0, 41.0], [108100.0, 2.0], [6900.0, 22.0], [7100.0, 26.0], [111300.0, 3.0], [114500.0, 5.0], [117700.0, 4.0], [7300.0, 1.0], [120900.0, 5.0], [7500.0, 29.0], [7900.0, 54.0], [124100.0, 5.0], [7700.0, 6.0], [127300.0, 7.0], [130500.0, 11.0], [8600.0, 41.0], [9400.0, 12.0], [10200.0, 63.0], [9800.0, 75.0], [11000.0, 51.0], [11400.0, 5.0], [11800.0, 15.0], [12200.0, 1.0], [12600.0, 89.0], [13000.0, 3.0], [13400.0, 41.0], [14600.0, 31.0], [15000.0, 104.0], [15800.0, 13.0], [15400.0, 16.0], [16200.0, 29.0], [17200.0, 3.0], [16400.0, 18.0], [18000.0, 8.0], [18800.0, 17.0], [20400.0, 26.0], [19600.0, 16.0], [21200.0, 9.0], [22800.0, 2.0], [23600.0, 1.0], [25200.0, 15.0], [26000.0, 71.0], [29200.0, 1.0], [32800.0, 3.0], [135100.0, 1.0], [37600.0, 1.0], [39200.0, 2.0], [40800.0, 2.0], [42400.0, 2.0], [44000.0, 1.0], [45600.0, 1.0], [48800.0, 1.0], [56800.0, 1.0], [60000.0, 1.0], [63200.0, 1.0], [68800.0, 5.0], [72000.0, 3.0], [75200.0, 1.0], [78400.0, 1.0], [94400.0, 2.0], [97600.0, 1.0], [100800.0, 1.0], [107200.0, 5.0], [110400.0, 1.0], [113600.0, 4.0], [116800.0, 1.0], [126400.0, 3.0], [129600.0, 2.0], [131200.0, 3.0], [135300.0, 3.0], [68700.0, 2.0], [71900.0, 2.0], [75100.0, 2.0], [81500.0, 2.0], [91100.0, 1.0], [94300.0, 1.0], [97500.0, 1.0], [100700.0, 1.0], [110300.0, 1.0], [113500.0, 2.0], [116700.0, 4.0], [119900.0, 1.0], [129500.0, 11.0], [133000.0, 5.0], [33900.0, 2.0], [38700.0, 11.0], [37100.0, 1.0], [40300.0, 1.0], [43500.0, 1.0], [46700.0, 2.0], [48300.0, 2.0], [49900.0, 2.0], [57900.0, 2.0], [61100.0, 5.0], [62700.0, 2.0], [80600.0, 1.0], [83800.0, 3.0], [87000.0, 3.0], [90200.0, 1.0], [93400.0, 1.0], [96600.0, 3.0], [99800.0, 1.0], [103000.0, 2.0], [106200.0, 2.0], [109400.0, 4.0], [112600.0, 4.0], [115800.0, 10.0], [119000.0, 5.0], [122200.0, 4.0], [125400.0, 1.0], [128600.0, 3.0], [132500.0, 5.0], [70100.0, 2.0], [82900.0, 1.0], [92500.0, 3.0], [98900.0, 1.0], [102100.0, 1.0], [105300.0, 1.0], [108500.0, 4.0], [111700.0, 4.0], [114900.0, 6.0], [118100.0, 5.0], [121300.0, 8.0], [124500.0, 3.0], [127700.0, 2.0], [130900.0, 3.0], [17300.0, 3.0], [16500.0, 15.0], [18100.0, 17.0], [18900.0, 12.0], [19700.0, 27.0], [20500.0, 45.0], [22100.0, 9.0], [25300.0, 36.0], [26100.0, 139.0], [26900.0, 1.0], [29300.0, 1.0], [31700.0, 3.0], [32500.0, 1.0], [33000.0, 2.0], [34600.0, 2.0], [134300.0, 3.0], [36200.0, 1.0], [39400.0, 7.0], [42600.0, 2.0], [44200.0, 1.0], [45800.0, 2.0], [49000.0, 1.0], [57000.0, 1.0], [60200.0, 4.0], [63400.0, 3.0], [66000.0, 2.0], [72400.0, 3.0], [78800.0, 2.0], [82000.0, 2.0], [94800.0, 1.0], [101200.0, 3.0], [104400.0, 7.0], [110800.0, 1.0], [117200.0, 1.0], [120400.0, 3.0], [123600.0, 1.0], [126800.0, 2.0], [130000.0, 1.0], [133600.0, 5.0], [131300.0, 1.0], [65900.0, 1.0], [69100.0, 4.0], [72300.0, 1.0], [75500.0, 1.0], [81900.0, 1.0], [101100.0, 1.0], [104300.0, 1.0], [107500.0, 1.0], [110700.0, 4.0], [113900.0, 10.0], [120300.0, 3.0], [129900.0, 6.0], [135400.0, 3.0], [34100.0, 1.0], [133100.0, 1.0], [38900.0, 4.0], [37300.0, 1.0], [40500.0, 1.0], [43700.0, 1.0], [51700.0, 1.0], [56500.0, 1.0], [58100.0, 1.0], [61300.0, 25.0], [62900.0, 1.0], [64500.0, 1.0], [77800.0, 1.0], [81000.0, 1.0], [84200.0, 1.0], [87400.0, 1.0], [90600.0, 1.0], [93800.0, 1.0], [100200.0, 2.0], [103400.0, 6.0], [106600.0, 1.0], [109800.0, 2.0], [113000.0, 2.0], [116200.0, 2.0], [119400.0, 4.0], [122600.0, 1.0], [129000.0, 5.0], [134900.0, 2.0], [67300.0, 3.0], [70500.0, 1.0], [73700.0, 1.0], [86500.0, 1.0], [89700.0, 1.0], [92900.0, 1.0], [99300.0, 1.0], [102500.0, 3.0], [105700.0, 3.0], [115300.0, 6.0], [118500.0, 2.0], [121700.0, 6.0], [124900.0, 3.0], [128100.0, 10.0], [8700.0, 10.0], [132600.0, 10.0], [9500.0, 5.0], [9900.0, 47.0], [10300.0, 33.0], [10700.0, 48.0], [11100.0, 24.0], [11500.0, 2.0], [11900.0, 17.0], [12700.0, 160.0], [12300.0, 34.0], [13100.0, 60.0], [13500.0, 34.0], [14300.0, 41.0], [13900.0, 1.0], [14700.0, 11.0], [15100.0, 99.0], [15500.0, 6.0], [16300.0, 21.0], [15900.0, 22.0], [17400.0, 15.0], [16600.0, 9.0], [18200.0, 13.0], [19000.0, 24.0], [19800.0, 43.0], [20600.0, 23.0], [22200.0, 25.0], [23000.0, 31.0], [23800.0, 13.0], [25400.0, 5.0], [26200.0, 59.0], [29400.0, 1.0], [31800.0, 15.0], [36400.0, 7.0], [38000.0, 1.0], [39600.0, 2.0], [42800.0, 1.0], [46000.0, 1.0], [49200.0, 2.0], [50800.0, 2.0], [52400.0, 4.0], [54000.0, 3.0], [55600.0, 2.0], [57200.0, 2.0], [62000.0, 2.0], [63600.0, 3.0], [66400.0, 2.0], [69600.0, 1.0], [79200.0, 2.0], [95200.0, 2.0], [98400.0, 4.0], [101600.0, 2.0], [111200.0, 2.0], [114400.0, 3.0], [117600.0, 2.0], [120800.0, 3.0], [124000.0, 7.0], [127200.0, 1.0], [130400.0, 6.0], [132800.0, 10.0], [66300.0, 2.0], [88700.0, 2.0], [95100.0, 3.0], [98300.0, 6.0], [101500.0, 2.0], [104700.0, 3.0], [107900.0, 9.0], [111100.0, 1.0], [114300.0, 4.0], [117500.0, 1.0], [120700.0, 3.0], [123900.0, 3.0], [127100.0, 1.0], [130300.0, 5.0], [134600.0, 1.0], [34300.0, 22.0], [132300.0, 9.0], [35900.0, 2.0], [39100.0, 2.0], [40700.0, 2.0], [42300.0, 2.0], [47100.0, 1.0], [53500.0, 1.0], [56700.0, 1.0], [71800.0, 1.0], [75000.0, 7.0], [78200.0, 1.0], [81400.0, 1.0], [84600.0, 3.0], [87800.0, 1.0], [91000.0, 10.0], [94200.0, 4.0], [97400.0, 2.0], [100600.0, 3.0], [103800.0, 2.0], [107000.0, 2.0], [110200.0, 2.0], [116600.0, 2.0], [126200.0, 3.0], [129400.0, 1.0], [134100.0, 1.0], [67700.0, 2.0], [83700.0, 1.0], [86900.0, 9.0], [90100.0, 1.0], [93300.0, 2.0], [96500.0, 2.0], [102900.0, 2.0], [106100.0, 1.0], [109300.0, 3.0], [112500.0, 5.0], [115700.0, 9.0], [118900.0, 5.0], [122100.0, 3.0], [125300.0, 1.0], [128500.0, 4.0], [131800.0, 4.0], [16700.0, 1.0], [18300.0, 78.0], [19100.0, 20.0], [19900.0, 5.0], [20700.0, 4.0], [22300.0, 28.0], [23100.0, 27.0], [23900.0, 16.0], [25500.0, 4.0], [24700.0, 8.0], [26300.0, 56.0], [30300.0, 1.0], [31900.0, 17.0], [32700.0, 2.0], [33400.0, 1.0], [35000.0, 12.0], [39800.0, 1.0], [47800.0, 3.0], [49400.0, 1.0], [51000.0, 2.0], [55800.0, 1.0], [57400.0, 2.0], [60600.0, 3.0], [62200.0, 3.0], [63800.0, 7.0], [73200.0, 1.0], [76400.0, 1.0], [86000.0, 1.0], [89200.0, 1.0], [92400.0, 2.0], [95600.0, 1.0], [98800.0, 1.0], [102000.0, 2.0], [105200.0, 4.0], [108400.0, 5.0], [111600.0, 7.0], [114800.0, 1.0], [118000.0, 6.0], [121200.0, 9.0], [124400.0, 6.0], [127600.0, 2.0], [130800.0, 3.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 136200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 57.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 7592.0, "series": [{"data": [[0.0, 57.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 82.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 7592.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2269.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 71.01418439716309, "minX": 1.63090158E12, "maxY": 1984.4545454545455, "series": [{"data": [[1.63090164E12, 911.0452788514638], [1.63090158E12, 1797.0370370370379]], "isOverall": false, "label": "addFavorite", "isController": false}, {"data": [[1.63090158E12, 1009.8860000000008]], "isOverall": false, "label": "listFavoriteByPage", "isController": false}, {"data": [[1.63090164E12, 1002.873499999997]], "isOverall": false, "label": "deleteFavorite", "isController": false}, {"data": [[1.63090176E12, 763.0530973451331], [1.63090182E12, 71.01418439716309], [1.63090164E12, 1984.4545454545455], [1.6309017E12, 1677.1543739279605]], "isOverall": false, "label": "deleteAllFavorite", "isController": false}, {"data": [[1.63090182E12, 957.9660000000014]], "isOverall": false, "label": "checkFavorite", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090182E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 2664.0, "minX": 1.0, "maxY": 135686.0, "series": [{"data": [[2.0, 54239.0], [3.0, 135403.0], [4.0, 72503.33333333333], [5.0, 53560.5], [6.0, 36900.444444444445], [7.0, 59745.66666666667], [8.0, 135686.0], [9.0, 45649.4], [10.0, 71102.0], [12.0, 64843.4], [13.0, 58156.5], [14.0, 49678.33333333333], [15.0, 45074.5], [16.0, 30123.928571428576], [17.0, 53227.0], [18.0, 59939.5], [19.0, 71184.66666666667], [20.0, 30540.444444444445], [21.0, 71238.0], [22.0, 31882.8125], [23.0, 51775.4], [24.0, 23199.5], [25.0, 91582.66666666666], [26.0, 51753.2], [27.0, 134341.0], [28.0, 49299.66666666667], [29.0, 53615.833333333336], [30.0, 45755.75], [31.0, 133973.0], [32.0, 53473.0], [33.0, 38812.5], [35.0, 59824.5], [34.0, 133473.0], [37.0, 54541.5], [36.0, 37149.63636363636], [39.0, 49271.66666666667], [38.0, 133747.0], [41.0, 68053.66666666666], [40.0, 59876.5], [43.0, 38443.090909090904], [42.0, 38759.16666666667], [44.0, 63811.0], [45.0, 134256.0], [46.0, 44105.7], [47.0, 23990.818181818187], [49.0, 62347.5], [48.0, 48356.0], [51.0, 59464.25], [50.0, 34762.8], [52.0, 34008.83333333333], [53.0, 69974.0], [55.0, 133289.0], [54.0, 133302.0], [57.0, 59511.75], [56.0, 21860.349999999995], [59.0, 29685.307692307688], [58.0, 48057.7], [60.0, 58184.66666666667], [61.0, 52563.75], [63.0, 132781.0], [62.0, 69951.5], [66.0, 43192.37500000001], [67.0, 49026.6], [64.0, 42125.333333333336], [65.0, 69829.0], [70.0, 52914.2], [69.0, 84186.0], [68.0, 58252.33333333333], [71.0, 69869.0], [74.0, 83971.0], [73.0, 83971.5], [72.0, 37051.0], [75.0, 38510.0], [78.0, 39470.9], [77.0, 58000.33333333333], [76.0, 52379.25], [79.0, 132860.0], [83.0, 41644.16666666667], [82.0, 48920.33333333333], [81.0, 132634.0], [80.0, 48815.66666666667], [87.0, 52448.25], [85.0, 37119.16666666667], [86.0, 69922.0], [84.0, 132621.0], [91.0, 37876.2], [90.0, 84092.0], [89.0, 67747.0], [88.0, 69727.5], [94.0, 40439.416666666664], [95.0, 36303.33333333333], [93.0, 83327.5], [92.0, 57855.0], [98.0, 55232.0], [97.0, 55209.66666666667], [96.0, 57236.66666666667], [99.0, 133121.0], [103.0, 35777.0], [102.0, 66216.0], [101.0, 38427.0], [100.0, 132346.0], [105.0, 37115.200000000004], [104.0, 22947.699999999997], [107.0, 49054.0], [106.0, 133030.0], [110.0, 38852.142857142855], [108.0, 47431.0], [111.0, 69800.5], [109.0, 69979.5], [114.0, 43467.833333333336], [112.0, 57309.66666666667], [115.0, 131959.0], [113.0, 69633.5], [116.0, 46340.0], [118.0, 51723.75], [117.0, 78770.5], [119.0, 131944.0], [123.0, 22034.363636363632], [122.0, 37739.18181818182], [120.0, 46573.4], [121.0, 69668.5], [126.0, 35608.4], [124.0, 51932.25], [127.0, 132159.0], [125.0, 132164.0], [135.0, 50775.75], [134.0, 31324.333333333332], [132.0, 60716.666666666664], [131.0, 46331.0], [130.0, 30783.0], [133.0, 132129.0], [129.0, 132144.0], [128.0, 132159.0], [143.0, 58050.333333333336], [142.0, 37936.6], [141.0, 52135.25], [140.0, 38956.33333333333], [137.0, 27714.25], [136.0, 44063.0], [139.0, 35295.42857142857], [138.0, 45259.8], [148.0, 37066.625], [151.0, 77927.0], [150.0, 20138.367346938783], [149.0, 35116.625], [147.0, 42729.4], [146.0, 52110.0], [145.0, 43545.25], [144.0, 48373.33333333333], [155.0, 33553.36363636364], [153.0, 43158.0], [152.0, 25256.0], [159.0, 38172.2], [157.0, 43588.5], [156.0, 51900.66666666667], [154.0, 35073.833333333336], [158.0, 68743.5], [163.0, 31947.41666666667], [167.0, 51430.25], [164.0, 34456.71428571429], [162.0, 51986.33333333333], [160.0, 43376.75], [166.0, 130820.0], [165.0, 130564.0], [161.0, 69104.0], [171.0, 28338.17647058823], [170.0, 45050.0], [175.0, 38504.2], [174.0, 38425.2], [173.0, 43375.0], [172.0, 38477.8], [169.0, 37046.66666666667], [168.0, 27753.833333333336], [183.0, 42726.25], [181.0, 29921.624999999996], [180.0, 37728.5], [179.0, 40263.33333333333], [178.0, 31332.25], [177.0, 50233.75], [182.0, 33480.6], [176.0, 51909.66666666667], [185.0, 78329.5], [184.0, 35743.3], [186.0, 41466.66666666667], [190.0, 29365.000000000004], [189.0, 36974.2], [188.0, 12529.55555555556], [187.0, 33083.0], [191.0, 129519.0], [199.0, 40972.0], [197.0, 34829.00000000001], [195.0, 16212.5], [192.0, 34103.3], [196.0, 107296.6], [193.0, 9879.0], [198.0, 68293.0], [194.0, 7074.0], [206.0, 77315.0], [205.0, 36979.42857142857], [202.0, 28216.384615384617], [207.0, 25132.14285714286], [204.0, 129768.0], [203.0, 129576.0], [201.0, 68519.5], [200.0, 68329.5], [214.0, 37086.11111111111], [213.0, 78006.5], [212.0, 51959.625], [215.0, 76836.0], [211.0, 24364.0], [210.0, 45922.6], [208.0, 45954.25], [209.0, 48002.66666666667], [223.0, 34354.916666666664], [222.0, 60055.333333333336], [217.0, 78085.0], [216.0, 23119.399999999998], [218.0, 50595.75], [221.0, 129912.0], [220.0, 129717.0], [219.0, 37743.5], [225.0, 32198.64705882353], [224.0, 52033.25], [229.0, 76570.5], [228.0, 59061.333333333336], [226.0, 22599.777777777777], [231.0, 129135.0], [230.0, 129507.0], [227.0, 68305.5], [239.0, 76272.0], [238.0, 76294.0], [237.0, 75890.5], [236.0, 58812.333333333336], [235.0, 76970.0], [234.0, 50288.5], [232.0, 26954.142857142855], [233.0, 68107.5], [246.0, 42944.6], [243.0, 41474.0], [242.0, 75865.0], [241.0, 45582.5], [247.0, 54826.0], [245.0, 128479.0], [244.0, 128334.0], [240.0, 22233.875], [253.0, 49111.25], [252.0, 44131.75], [250.0, 35072.0], [255.0, 33458.4], [254.0, 54556.333333333336], [251.0, 37683.2], [249.0, 45390.5], [248.0, 24082.333333333332], [270.0, 29507.875], [271.0, 30080.285714285714], [268.0, 25231.357142857145], [269.0, 128331.0], [259.0, 51280.0], [258.0, 128236.0], [266.0, 35381.0], [264.0, 40419.0], [257.0, 21885.29166666667], [267.0, 75451.0], [265.0, 54591.0], [262.0, 50972.0], [256.0, 42670.75], [263.0, 68044.0], [261.0, 51032.33333333333], [260.0, 37453.5], [275.0, 27334.08333333333], [287.0, 77435.5], [284.0, 29881.999999999996], [286.0, 128235.0], [285.0, 67662.0], [274.0, 39553.333333333336], [283.0, 37454.625], [282.0, 77356.0], [281.0, 77221.0], [280.0, 47467.66666666667], [278.0, 38521.833333333336], [277.0, 37378.75], [276.0, 67987.5], [273.0, 53913.66666666667], [272.0, 36764.99999999999], [279.0, 75718.0], [290.0, 26825.454545454544], [303.0, 46116.5], [302.0, 26876.999999999996], [301.0, 45289.25], [300.0, 54620.333333333336], [291.0, 67567.0], [298.0, 57304.666666666664], [299.0, 37710.0], [294.0, 33209.545454545456], [293.0, 46947.25], [292.0, 35794.25], [288.0, 77377.5], [295.0, 67607.0], [289.0, 52848.33333333333], [297.0, 44040.0], [296.0, 27684.7], [307.0, 47050.5], [319.0, 24204.777777777774], [318.0, 30099.48], [317.0, 29902.44444444444], [316.0, 127948.0], [315.0, 33524.875], [314.0, 29899.26666666667], [312.0, 75660.75], [313.0, 50783.33333333333], [311.0, 21217.0], [309.0, 42662.8], [308.0, 67752.0], [310.0, 52725.66666666667], [306.0, 29724.416666666668], [305.0, 28104.36363636364], [304.0, 50884.75], [323.0, 29766.333333333336], [334.0, 28064.4], [333.0, 26103.5], [332.0, 63576.0], [330.0, 28383.375000000004], [331.0, 63687.5], [329.0, 34212.142857142855], [327.0, 32324.88888888889], [325.0, 45945.6], [324.0, 45017.0], [321.0, 59260.666666666664], [322.0, 63892.5], [320.0, 57860.666666666664], [335.0, 26391.363636363636], [328.0, 27398.75], [326.0, 21996.555555555555], [339.0, 32054.571428571428], [336.0, 56693.666666666664], [338.0, 17007.125], [337.0, 47040.66666666667], [351.0, 36252.2], [348.0, 28413.333333333332], [350.0, 46782.0], [349.0, 126494.0], [347.0, 52490.333333333336], [346.0, 66780.0], [345.0, 71128.5], [344.0, 38959.75], [343.0, 28685.4], [342.0, 27933.0], [340.0, 50311.33333333333], [341.0, 33575.25], [366.0, 31122.333333333332], [367.0, 48029.75], [357.0, 43488.0], [356.0, 34374.8], [359.0, 38755.25], [352.0, 49683.0], [354.0, 49668.66666666667], [355.0, 125296.0], [353.0, 49728.66666666667], [358.0, 70687.5], [364.0, 29823.153846153848], [362.0, 30739.833333333336], [365.0, 49146.0], [363.0, 70031.5], [361.0, 70524.0], [360.0, 70358.5], [383.0, 48119.25], [381.0, 43299.25], [380.0, 38528.25], [371.0, 7040.0], [382.0, 49040.33333333333], [370.0, 52689.0], [369.0, 39987.2], [368.0, 33222.57142857143], [379.0, 36189.5], [378.0, 32166.0], [377.0, 26844.444444444445], [376.0, 49774.75], [375.0, 49830.75], [374.0, 37073.5], [372.0, 18323.25], [373.0, 41663.071428571435], [397.0, 28872.44444444445], [385.0, 27366.28], [384.0, 43803.4], [391.0, 73332.0], [389.0, 34166.71428571429], [390.0, 46072.33333333333], [388.0, 49019.66666666667], [399.0, 40211.75], [398.0, 123854.0], [396.0, 69530.25], [387.0, 46038.66666666667], [386.0, 124328.0], [395.0, 19092.5], [394.0, 32811.28571428572], [393.0, 39741.2], [392.0, 29716.285714285717], [412.0, 43429.8], [414.0, 26107.363636363636], [415.0, 43182.25], [413.0, 40525.33333333333], [407.0, 32388.666666666668], [400.0, 123696.0], [403.0, 32782.57142857143], [402.0, 65561.0], [401.0, 28743.714285714286], [408.0, 22127.499999999996], [409.0, 42319.5], [411.0, 69564.5], [410.0, 48958.66666666667], [406.0, 40142.25], [405.0, 29281.2], [404.0, 42316.0], [418.0, 37201.0], [423.0, 36970.71428571429], [424.0, 32193.571428571428], [431.0, 68761.0], [426.0, 42317.0], [425.0, 68995.5], [427.0, 51273.0], [422.0, 29338.36363636364], [421.0, 27294.7], [420.0, 45264.6], [416.0, 49519.75], [417.0, 33942.6], [430.0, 38246.4], [429.0, 47439.25], [419.0, 69062.5], [428.0, 122205.0], [446.0, 44308.0], [447.0, 30166.25], [440.0, 68566.0], [444.0, 37141.66666666667], [445.0, 31438.714285714286], [442.0, 54525.666666666664], [441.0, 25848.999999999996], [434.0, 45492.0], [435.0, 121516.0], [433.0, 45612.0], [437.0, 42167.75], [436.0, 64185.5], [438.0, 45140.66666666667], [432.0, 68958.0], [439.0, 45108.66666666667], [443.0, 50976.333333333336], [449.0, 35489.6], [455.0, 34729.18181818182], [454.0, 42383.5], [448.0, 22635.5], [453.0, 73898.5], [452.0, 50230.25], [463.0, 41187.8], [462.0, 68716.0], [456.0, 43542.0], [457.0, 121545.0], [461.0, 35281.0], [460.0, 44881.25], [451.0, 68776.0], [450.0, 17388.5], [459.0, 52840.0], [458.0, 54375.0], [466.0, 73869.5], [473.0, 39221.4], [472.0, 29726.75], [471.0, 51375.0], [465.0, 53424.0], [464.0, 41115.2], [470.0, 40503.25], [468.0, 32305.333333333336], [469.0, 37116.4], [479.0, 38807.25], [476.0, 35608.6], [467.0, 121650.0], [477.0, 45524.66666666667], [478.0, 64176.5], [475.0, 41776.25], [474.0, 26278.0], [494.0, 17853.692307692305], [481.0, 30004.624999999993], [487.0, 32920.0], [486.0, 35513.5], [485.0, 120798.0], [484.0, 121281.0], [480.0, 41140.0], [495.0, 21838.52380952381], [489.0, 121094.0], [488.0, 35574.75], [493.0, 63772.5], [492.0, 45068.0], [483.0, 63855.5], [482.0, 63845.5], [491.0, 63994.5], [490.0, 63826.0], [510.0, 36789.625], [509.0, 40528.4], [506.0, 49979.5], [507.0, 121133.0], [511.0, 51544.333333333336], [505.0, 121159.0], [504.0, 121350.0], [503.0, 37665.66666666667], [502.0, 41074.6], [501.0, 71125.0], [500.0, 71148.5], [499.0, 70871.0], [496.0, 54344.0], [498.0, 121374.0], [497.0, 121351.0], [540.0, 44884.8], [538.0, 52037.0], [536.0, 44793.66666666667], [542.0, 44197.25], [518.0, 50476.333333333336], [516.0, 36223.0], [514.0, 36731.57142857143], [512.0, 45148.0], [532.0, 42319.75], [534.0, 44881.66666666667], [528.0, 31768.166666666668], [530.0, 70307.5], [526.0, 32077.999999999996], [520.0, 57819.66666666667], [524.0, 121029.0], [522.0, 120352.0], [548.0, 39459.857142857145], [572.0, 72707.0], [570.0, 119075.0], [568.0, 43882.66666666667], [550.0, 119541.0], [574.0, 118193.0], [560.0, 15603.846153846154], [566.0, 49520.25], [564.0, 119290.0], [562.0, 42479.5], [558.0, 24682.437500000007], [546.0, 36246.66666666667], [544.0, 38369.6], [556.0, 11780.75], [554.0, 118853.0], [552.0, 118844.0], [600.0, 16809.285714285717], [594.0, 67229.5], [606.0, 117627.0], [592.0, 62420.0], [604.0, 25465.125], [578.0, 35739.625], [576.0, 46923.0], [590.0, 66587.0], [588.0, 118263.0], [584.0, 36586.5], [586.0, 40842.0], [602.0, 12900.25], [580.0, 30945.874999999996], [582.0, 47187.66666666667], [596.0, 41730.75], [598.0, 34461.0], [608.0, 66280.5], [626.0, 24607.2], [630.0, 22856.25], [628.0, 61762.5], [622.0, 17473.416666666664], [610.0, 38577.75], [620.0, 32448.0], [618.0, 53904.0], [616.0, 24754.3], [614.0, 46975.71428571428], [612.0, 40184.75], [632.0, 28089.4], [634.0, 69143.5], [638.0, 44544.63636363637], [668.0, 46182.66666666667], [670.0, 65564.5], [666.0, 17052.0], [662.0, 35877.583333333336], [660.0, 51609.5], [658.0, 26919.5], [656.0, 116101.0], [650.0, 50793.0], [648.0, 16458.444444444445], [652.0, 45980.0], [644.0, 90639.5], [654.0, 19181.14285714286], [640.0, 41423.0], [642.0, 3196.2], [646.0, 36098.75], [664.0, 46034.33333333333], [672.0, 38278.5], [692.0, 46139.66666666667], [694.0, 43182.33333333333], [690.0, 65476.0], [686.0, 37196.4], [676.0, 48283.33333333333], [674.0, 30273.250000000004], [682.0, 31408.571428571428], [684.0, 46103.66666666667], [680.0, 40072.125], [678.0, 28752.4], [696.0, 61379.0], [698.0, 15068.666666666666], [688.0, 33619.8], [700.0, 45833.66666666667], [702.0, 61418.5], [730.0, 31298.6], [724.0, 45773.0], [722.0, 60832.0], [720.0, 60976.5], [734.0, 34256.5], [732.0, 40860.25], [728.0, 17187.0], [726.0, 50109.33333333333], [714.0, 25059.117647058825], [710.0, 50364.0], [708.0, 52443.33333333333], [704.0, 40143.75], [718.0, 38078.25], [716.0, 65107.0], [706.0, 31479.0], [712.0, 30321.6], [764.0, 27736.09090909091], [742.0, 34592.333333333336], [754.0, 45377.0], [756.0, 48320.333333333336], [758.0, 45482.0], [752.0, 27735.375], [766.0, 45474.0], [762.0, 30855.0], [760.0, 47268.33333333333], [744.0, 29851.88888888889], [746.0, 31302.2], [748.0, 25425.2], [736.0, 26693.3], [750.0, 35646.2], [740.0, 22595.545454545452], [738.0, 36494.33333333333], [770.0, 42877.0], [774.0, 22466.500000000004], [786.0, 33606.22222222222], [788.0, 51721.0], [790.0, 59704.0], [768.0, 67519.5], [772.0, 50074.33333333333], [782.0, 51581.66666666667], [778.0, 39557.4], [776.0, 42255.66666666667], [780.0, 44970.0], [794.0, 34633.6], [792.0, 42040.33333333333], [796.0, 42239.0], [784.0, 64073.0], [798.0, 33513.75], [830.0, 16541.583333333336], [816.0, 30475.333333333336], [820.0, 21609.428571428572], [822.0, 112298.0], [818.0, 63182.5], [826.0, 38897.5], [824.0, 112396.0], [828.0, 110747.0], [812.0, 30119.399999999998], [810.0, 36513.4], [808.0, 37240.25], [806.0, 34022.28571428571], [804.0, 40559.0], [802.0, 49391.33333333333], [800.0, 47632.66666666667], [814.0, 28044.2], [858.0, 41711.75], [850.0, 40414.0], [862.0, 34908.66666666667], [848.0, 30953.85714285714], [860.0, 20565.857142857145], [838.0, 37243.25], [856.0, 20089.875], [836.0, 47000.0], [834.0, 63413.0], [832.0, 38906.25], [846.0, 63030.0], [844.0, 44497.33333333333], [840.0, 44492.0], [842.0, 44514.0], [854.0, 41717.0], [852.0, 36419.6], [892.0, 45122.0], [894.0, 35646.5], [880.0, 29339.142857142855], [882.0, 50234.33333333333], [888.0, 33050.57142857143], [890.0, 27731.833333333336], [870.0, 25597.133333333335], [868.0, 23439.300000000003], [866.0, 43137.25], [864.0, 33891.83333333333], [876.0, 22613.062499999996], [878.0, 109005.0], [872.0, 48687.33333333333], [874.0, 26325.333333333332], [886.0, 30845.14285714286], [884.0, 109391.0], [924.0, 32424.4], [902.0, 49987.66666666667], [926.0, 31421.857142857138], [922.0, 35543.8], [920.0, 29985.2], [916.0, 21010.695652173916], [918.0, 64479.0], [912.0, 33442.857142857145], [914.0, 108608.0], [908.0, 36366.666666666664], [910.0, 12342.599999999999], [896.0, 64493.5], [898.0, 33376.71428571429], [900.0, 27513.25], [906.0, 39468.25], [904.0, 50214.0], [934.0, 13697.5], [944.0, 31859.125], [950.0, 33011.333333333336], [948.0, 26725.8], [946.0, 38631.333333333336], [942.0, 22378.333333333336], [940.0, 44138.33333333333], [938.0, 29101.666666666668], [936.0, 30899.0], [930.0, 31857.500000000004], [932.0, 107295.0], [952.0, 44614.66666666667], [956.0, 105903.0], [954.0, 106430.0], [958.0, 44051.875], [928.0, 21308.30769230769], [990.0, 46295.0], [980.0, 32374.666666666668], [982.0, 54689.0], [978.0, 31516.2], [976.0, 63262.5], [984.0, 38154.71428571429], [988.0, 20332.0], [966.0, 63730.5], [964.0, 106298.0], [962.0, 25130.6], [960.0, 106071.0], [974.0, 23870.285714285717], [968.0, 28186.333333333336], [970.0, 19874.0], [972.0, 19300.941176470587], [1020.0, 22413.0], [998.0, 21089.117647058825], [1022.0, 28927.833333333332], [1018.0, 61664.0], [1016.0, 37053.0], [1012.0, 37650.25], [1014.0, 37718.66666666667], [1010.0, 26512.75], [1008.0, 31116.2], [1002.0, 28523.454545454544], [1000.0, 54562.0], [1004.0, 37872.66666666667], [994.0, 28455.25], [992.0, 15552.666666666666], [1006.0, 103130.0], [996.0, 48752.66666666667], [1072.0, 28651.714285714283], [1076.0, 41729.33333333333], [1080.0, 55844.0], [1056.0, 42353.66666666667], [1084.0, 98366.0], [1060.0, 21373.5], [1032.0, 27324.6], [1036.0, 57863.0], [1028.0, 32047.428571428572], [1052.0, 35066.5], [1048.0, 57433.5], [1044.0, 102282.0], [1040.0, 102813.0], [1024.0, 61384.0], [1068.0, 60684.5], [1064.0, 100172.0], [1120.0, 27270.625], [1140.0, 25275.846153846156], [1136.0, 30645.25], [1124.0, 40440.33333333333], [1128.0, 24825.071428571428], [1132.0, 24418.166666666664], [1148.0, 31370.750000000004], [1144.0, 40205.0], [1100.0, 18233.25], [1096.0, 25750.461538461535], [1088.0, 29398.4], [1116.0, 50096.0], [1092.0, 25396.833333333332], [1112.0, 32793.5], [1108.0, 29807.750000000004], [1104.0, 29083.0], [1208.0, 44248.33333333333], [1204.0, 44310.33333333333], [1212.0, 28297.14285714286], [1184.0, 56634.0], [1196.0, 21058.0], [1188.0, 14428.199999999999], [1192.0, 21243.0], [1200.0, 22180.0], [1164.0, 27118.0], [1160.0, 48652.5], [1156.0, 57096.0], [1152.0, 30474.250000000004], [1180.0, 34741.6], [1176.0, 27178.5], [1172.0, 38384.75], [1168.0, 34764.6], [1272.0, 22460.85714285714], [1276.0, 24313.124999999996], [1248.0, 30437.857142857145], [1252.0, 37479.25], [1268.0, 22609.857142857145], [1264.0, 30596.333333333336], [1228.0, 87589.0], [1224.0, 45769.0], [1216.0, 34676.8], [1220.0, 54421.0], [1244.0, 20227.0], [1240.0, 53551.5], [1236.0, 86924.0], [1232.0, 31963.0], [1260.0, 26207.571428571428], [1256.0, 34182.2], [1340.0, 14735.124999999998], [1336.0, 34976.5], [1320.0, 34802.333333333336], [1324.0, 39750.33333333333], [1316.0, 27940.285714285714], [1312.0, 24005.625], [1332.0, 26387.142857142855], [1328.0, 34399.33333333333], [1292.0, 30304.333333333336], [1288.0, 43997.0], [1284.0, 30865.666666666664], [1280.0, 17122.8125], [1304.0, 31770.249999999996], [1300.0, 81404.0], [1296.0, 81109.0], [1308.0, 80920.0], [1392.0, 19495.857142857145], [1356.0, 48255.0], [1400.0, 28326.0], [1404.0, 44676.5], [1376.0, 31507.0], [1388.0, 71918.0], [1384.0, 72493.0], [1380.0, 73418.0], [1396.0, 46160.5], [1348.0, 18112.416666666668], [1344.0, 16279.894736842103], [1352.0, 43445.5], [1372.0, 25991.4], [1368.0, 35870.66666666667], [1364.0, 43110.5], [1360.0, 75039.0], [1464.0, 35458.0], [1460.0, 35463.333333333336], [1456.0, 64254.0], [1444.0, 26079.42857142857], [1440.0, 34208.0], [1448.0, 41855.0], [1452.0, 22704.11111111111], [1468.0, 42640.0], [1412.0, 37006.0], [1416.0, 69107.0], [1420.0, 32909.66666666667], [1436.0, 20019.625], [1432.0, 27709.5], [1408.0, 27646.25], [1428.0, 25423.666666666668], [1424.0, 10822.25], [1484.0, 32526.666666666664], [1476.0, 23590.88888888889], [1520.0, 36149.0], [1524.0, 61316.0], [1480.0, 24356.6], [1472.0, 25762.333333333332], [1504.0, 26175.833333333332], [1512.0, 16963.0], [1508.0, 39145.5], [1516.0, 39155.5], [1532.0, 16993.0], [1528.0, 61299.0], [1496.0, 27936.5], [1500.0, 36619.75], [1492.0, 25782.8], [1488.0, 19002.5], [1544.0, 27584.75], [1572.0, 22114.285714285714], [1580.0, 55920.0], [1576.0, 56817.0], [1596.0, 53285.0], [1568.0, 57245.0], [1564.0, 16890.75], [1536.0, 28338.25], [1548.0, 40599.5], [1588.0, 17102.5], [1584.0, 16001.714285714286], [1556.0, 30592.666666666664], [1560.0, 57950.0], [1552.0, 34773.0], [1656.0, 18318.85714285714], [1640.0, 22607.333333333336], [1636.0, 20525.75], [1660.0, 23021.0], [1632.0, 49139.0], [1652.0, 21664.75], [1648.0, 26185.6], [1604.0, 23913.636363636368], [1608.0, 38315.333333333336], [1612.0, 51316.0], [1600.0, 22279.166666666668], [1624.0, 24310.75], [1616.0, 20108.142857142855], [1620.0, 30096.0], [1628.0, 20752.14285714286], [1644.0, 19488.85714285714], [1716.0, 22163.5], [1676.0, 20543.666666666664], [1672.0, 41342.0], [1712.0, 4234.019718309863], [1708.0, 17293.5], [1696.0, 22067.25], [1704.0, 21614.5], [1700.0, 17808.8], [1720.0, 29874.333333333332], [1724.0, 13730.666666666668], [1668.0, 20683.333333333336], [1664.0, 26092.666666666664], [1692.0, 36722.0], [1688.0, 20806.0], [1680.0, 19777.666666666664], [1684.0, 24575.5], [1780.0, 19151.777777777777], [1788.0, 17148.5], [1764.0, 21143.0], [1760.0, 32815.0], [1772.0, 13424.333333333332], [1768.0, 13422.0], [1784.0, 21141.0], [1732.0, 18822.5], [1728.0, 8221.142857142857], [1736.0, 23839.0], [1740.0, 13217.25], [1776.0, 6095.333333333333], [1756.0, 18172.777777777777], [1752.0, 24368.0], [1748.0, 27602.5], [1744.0, 13887.857142857145], [1840.0, 13344.0], [1848.0, 10219.0], [1844.0, 23023.0], [1852.0, 14636.437499999998], [1824.0, 9982.5], [1828.0, 12590.0], [1832.0, 13393.0], [1800.0, 16191.0], [1804.0, 8242.888888888889], [1796.0, 18036.500000000004], [1792.0, 4396.0], [1820.0, 12434.0], [1816.0, 20866.5], [1812.0, 20568.333333333332], [1808.0, 20322.777777777774], [1836.0, 10855.999999999998], [1916.0, 10892.913043478258], [1904.0, 6943.333333333333], [1892.0, 7964.5], [1896.0, 7908.0], [1888.0, 12269.272727272726], [1912.0, 17616.666666666664], [1908.0, 11214.25], [1868.0, 5387.4], [1864.0, 7474.5], [1860.0, 11327.6], [1856.0, 17685.4], [1880.0, 5404.2], [1876.0, 14507.75], [1872.0, 7977.0], [1900.0, 5950.333333333333], [1972.0, 5722.333333333334], [1952.0, 6190.2], [1980.0, 5010.333333333334], [1976.0, 4416.5], [1956.0, 7091.0], [1968.0, 7335.666666666666], [1932.0, 21037.0], [1928.0, 21047.0], [1924.0, 5519.75], [1948.0, 11220.666666666666], [1944.0, 9825.142857142857], [1940.0, 9011.272727272726], [1936.0, 13517.0], [1964.0, 8268.4], [1960.0, 9236.0], [1992.0, 5327.0], [2000.0, 4277.666666666667], [1996.0, 5740.625], [1988.0, 4756.2], [1984.0, 2664.0], [1077.0, 21746.866666666665], [1073.0, 27812.625], [1081.0, 32794.4], [1057.0, 31396.666666666664], [1085.0, 22123.666666666664], [1061.0, 24487.25], [1037.0, 23063.57142857143], [1029.0, 23059.125000000004], [1033.0, 102739.0], [1025.0, 37207.25], [1053.0, 37052.25], [1049.0, 45233.33333333333], [1045.0, 33373.6], [1041.0, 24292.0], [1069.0, 47552.0], [1065.0, 100640.0], [1101.0, 28303.533333333344], [1137.0, 21495.11111111111], [1145.0, 49719.5], [1141.0, 94949.0], [1149.0, 26451.5], [1121.0, 54377.0], [1125.0, 33780.6], [1133.0, 30835.4], [1129.0, 95923.0], [1097.0, 39946.75], [1093.0, 59856.5], [1089.0, 59202.0], [1117.0, 27027.285714285714], [1113.0, 35746.0], [1109.0, 33806.25], [1105.0, 26305.4], [1209.0, 34050.4], [1185.0, 33168.4], [1213.0, 32426.666666666664], [1189.0, 55525.0], [1193.0, 32101.5], [1197.0, 18025.3], [1205.0, 31354.2], [1201.0, 41468.66666666667], [1161.0, 30222.857142857145], [1165.0, 23464.8], [1153.0, 34592.75], [1157.0, 20454.333333333332], [1181.0, 15602.333333333334], [1177.0, 36631.75], [1169.0, 21628.142857142855], [1173.0, 31667.2], [1269.0, 52594.0], [1277.0, 21683.499999999996], [1273.0, 11903.90909090909], [1221.0, 37229.0], [1265.0, 34522.25], [1229.0, 45629.5], [1225.0, 45818.5], [1245.0, 27518.416666666664], [1217.0, 89599.0], [1241.0, 37231.0], [1237.0, 54014.0], [1233.0, 87222.0], [1257.0, 49727.0], [1261.0, 34110.0], [1253.0, 53856.5], [1249.0, 86965.0], [1337.0, 49573.5], [1333.0, 15348.000000000002], [1341.0, 46608.666666666664], [1317.0, 22582.666666666664], [1313.0, 32519.6], [1325.0, 49592.5], [1321.0, 27603.166666666668], [1329.0, 30086.166666666668], [1305.0, 16568.666666666668], [1309.0, 20993.85714285714], [1285.0, 33617.4], [1293.0, 81982.0], [1289.0, 82753.0], [1281.0, 42020.66666666667], [1301.0, 18154.92857142857], [1297.0, 51123.0], [1401.0, 30760.75], [1393.0, 31111.25], [1377.0, 25494.666666666668], [1381.0, 19321.285714285714], [1385.0, 25880.75], [1389.0, 46225.5], [1405.0, 44644.5], [1397.0, 25248.222222222226], [1357.0, 24977.0], [1349.0, 18906.4], [1353.0, 20052.428571428572], [1345.0, 28447.833333333336], [1373.0, 26213.833333333332], [1369.0, 15516.75], [1365.0, 38958.0], [1361.0, 75040.0], [1465.0, 29609.25], [1441.0, 25672.833333333332], [1453.0, 23294.0], [1449.0, 42195.0], [1445.0, 66100.0], [1469.0, 33408.666666666664], [1461.0, 25262.6], [1457.0, 20840.5], [1437.0, 31700.333333333332], [1409.0, 32731.25], [1413.0, 24089.666666666668], [1421.0, 33546.66666666667], [1417.0, 68850.0], [1433.0, 29321.5], [1429.0, 36580.0], [1425.0, 30525.6], [1485.0, 28124.25], [1521.0, 12135.555555555555], [1529.0, 34472.0], [1533.0, 61186.5], [1505.0, 61449.0], [1525.0, 19548.25], [1477.0, 26739.0], [1481.0, 63838.0], [1517.0, 33137.666666666664], [1513.0, 61325.5], [1509.0, 21884.916666666664], [1501.0, 28024.666666666668], [1473.0, 41123.0], [1493.0, 25392.428571428572], [1489.0, 63487.0], [1497.0, 30210.333333333336], [1589.0, 12858.0], [1573.0, 23164.352941176472], [1581.0, 55858.0], [1577.0, 56561.0], [1545.0, 40802.5], [1541.0, 38430.5], [1549.0, 20522.833333333332], [1585.0, 55623.0], [1597.0, 34872.0], [1569.0, 36766.0], [1593.0, 35162.5], [1561.0, 22917.6], [1537.0, 26443.5], [1565.0, 41636.166666666664], [1557.0, 26248.333333333332], [1553.0, 40258.5], [1649.0, 22708.6], [1633.0, 30423.666666666664], [1661.0, 44030.0], [1641.0, 15475.777777777777], [1645.0, 46769.0], [1637.0, 28899.0], [1613.0, 17036.333333333332], [1609.0, 51797.0], [1605.0, 52358.0], [1653.0, 30653.0], [1657.0, 30235.0], [1601.0, 34572.0], [1629.0, 23906.166666666668], [1617.0, 23737.428571428572], [1621.0, 30059.0], [1625.0, 29759.0], [1713.0, 15868.25], [1677.0, 25940.0], [1705.0, 18153.714285714286], [1701.0, 35873.0], [1697.0, 16300.444444444445], [1721.0, 9897.0], [1725.0, 11461.75], [1717.0, 14114.833333333334], [1673.0, 30977.5], [1669.0, 17143.166666666668], [1665.0, 20897.4], [1689.0, 17788.875], [1693.0, 23251.0], [1685.0, 20004.25], [1681.0, 24769.5], [1709.0, 29933.666666666668], [1789.0, 6493.125], [1785.0, 26219.5], [1781.0, 17900.5], [1765.0, 28031.333333333332], [1773.0, 26303.5], [1769.0, 9696.294117647058], [1761.0, 18238.5], [1777.0, 20966.0], [1737.0, 22080.5], [1729.0, 14249.8], [1733.0, 19318.0], [1741.0, 18384.5], [1757.0, 27017.0], [1753.0, 11066.083333333334], [1749.0, 24366.5], [1745.0, 34074.0], [1849.0, 10220.0], [1833.0, 16187.285714285716], [1825.0, 15771.25], [1829.0, 19893.6], [1845.0, 10384.0], [1841.0, 13334.6], [1793.0, 26248.166666666668], [1797.0, 8628.0], [1805.0, 13558.571428571428], [1801.0, 14824.818181818184], [1821.0, 9188.42857142857], [1817.0, 23063.25], [1809.0, 9356.285714285716], [1813.0, 9795.666666666668], [1837.0, 18186.333333333332], [1909.0, 12011.8], [1869.0, 7306.666666666667], [1917.0, 8673.333333333334], [1893.0, 4313.0], [1889.0, 14488.5], [1913.0, 13992.0], [1905.0, 8014.0], [1865.0, 7935.5], [1861.0, 13071.0], [1857.0, 11978.0], [1885.0, 17419.0], [1873.0, 11645.57142857143], [1881.0, 10164.857142857143], [1877.0, 7656.0], [1901.0, 4967.0], [1897.0, 17310.333333333332], [1969.0, 8649.666666666666], [1933.0, 12979.5], [1929.0, 21052.0], [1977.0, 5851.333333333333], [1981.0, 6188.0], [1953.0, 14208.5], [1973.0, 6458.333333333333], [1925.0, 4429.0], [1949.0, 10914.0], [1945.0, 6377.142857142857], [1941.0, 13981.75], [1937.0, 13501.0], [1965.0, 10109.5], [1961.0, 9179.4], [1997.0, 7102.0], [1989.0, 7898.0], [1985.0, 8621.5], [519.0, 30993.454545454548], [527.0, 38614.333333333336], [543.0, 72628.0], [539.0, 51926.0], [537.0, 19779.7], [541.0, 42560.0], [517.0, 14425.178571428569], [515.0, 24544.375000000004], [513.0, 56058.0], [535.0, 26079.461538461543], [533.0, 32070.555555555555], [531.0, 36881.0], [529.0, 39132.5], [525.0, 57618.33333333333], [523.0, 38416.8], [521.0, 40567.8], [561.0, 66856.0], [573.0, 53199.333333333336], [571.0, 33808.625], [569.0, 57215.66666666667], [567.0, 22991.142857142855], [565.0, 49335.75], [563.0, 41684.8], [575.0, 48677.66666666667], [551.0, 54614.0], [549.0, 32527.714285714286], [547.0, 46744.5], [559.0, 40729.6], [557.0, 82030.0], [555.0, 62865.5], [553.0, 119487.0], [545.0, 53719.66666666667], [603.0, 42549.5], [607.0, 28685.571428571428], [593.0, 17676.272727272728], [595.0, 32660.4], [605.0, 39417.0], [601.0, 86826.66666666667], [587.0, 23286.88888888889], [577.0, 29950.250000000004], [591.0, 30085.5], [589.0, 29526.333333333336], [585.0, 29008.18181818182], [581.0, 66863.0], [579.0, 118586.0], [583.0, 62902.5], [597.0, 39075.5], [599.0, 62447.0], [609.0, 31222.14285714286], [611.0, 49655.33333333333], [625.0, 37088.28571428572], [627.0, 26610.4347826087], [629.0, 38559.0], [631.0, 46391.0], [623.0, 34020.4], [621.0, 28972.18181818182], [619.0, 20307.666666666664], [617.0, 30269.75], [613.0, 17959.333333333332], [633.0, 50948.333333333336], [615.0, 40298.5], [635.0, 16812.636363636364], [639.0, 19563.375], [637.0, 13077.0], [667.0, 63538.75], [669.0, 39784.5], [671.0, 37766.5], [657.0, 48765.333333333336], [665.0, 39776.0], [663.0, 36287.25], [661.0, 7059.333333333333], [659.0, 18059.0], [649.0, 11071.0], [651.0, 32056.4], [653.0, 45942.33333333333], [655.0, 29172.6], [643.0, 11343.0], [641.0, 39125.33333333333], [647.0, 48585.333333333336], [645.0, 26563.727272727276], [673.0, 32594.142857142855], [677.0, 24010.918918918916], [689.0, 17554.5], [693.0, 35901.666666666664], [691.0, 43319.0], [695.0, 33621.4], [687.0, 31104.125], [675.0, 46050.33333333333], [685.0, 27676.076923076922], [683.0, 46034.33333333333], [681.0, 35331.333333333336], [699.0, 44557.16666666667], [697.0, 115716.0], [701.0, 45862.66666666667], [703.0, 61220.0], [733.0, 29835.999999999996], [735.0, 39269.75], [721.0, 47671.0], [723.0, 28312.14285714286], [729.0, 47602.57142857143], [731.0, 60516.0], [725.0, 31532.000000000004], [727.0, 42779.66666666667], [711.0, 50498.33333333333], [707.0, 38166.0], [709.0, 31919.4], [705.0, 50636.66666666667], [719.0, 61190.0], [717.0, 33896.0], [715.0, 65116.5], [713.0, 41033.25], [765.0, 35886.0], [753.0, 27683.09090909091], [755.0, 60619.5], [767.0, 60511.5], [757.0, 35861.75], [759.0, 45331.66666666667], [761.0, 48323.666666666664], [743.0, 44213.0], [763.0, 25199.61904761905], [749.0, 45567.33333333333], [747.0, 32308.333333333332], [745.0, 42942.0], [741.0, 42979.0], [739.0, 67681.0], [737.0, 35797.4], [751.0, 113848.0], [769.0, 28942.000000000004], [787.0, 51770.0], [791.0, 36251.5], [789.0, 33383.0], [785.0, 21055.571428571428], [799.0, 111840.0], [783.0, 31116.375], [771.0, 64853.5], [773.0, 38457.0], [777.0, 37620.0], [779.0, 31443.2], [781.0, 45067.33333333333], [775.0, 42730.25], [793.0, 32113.0], [797.0, 51558.66666666667], [795.0, 32456.0], [803.0, 51547.66666666667], [807.0, 38674.0], [829.0, 28205.0], [827.0, 110994.0], [825.0, 58992.5], [831.0, 46888.66666666667], [819.0, 111617.0], [817.0, 33247.75], [823.0, 111615.0], [821.0, 111629.0], [811.0, 36252.0], [809.0, 25442.11111111111], [805.0, 19972.454545454544], [801.0, 39213.4], [813.0, 28862.11111111111], [815.0, 63196.5], [839.0, 44407.33333333333], [861.0, 17612.81818181818], [863.0, 109572.0], [849.0, 24106.0], [859.0, 50780.0], [857.0, 24090.29411764706], [833.0, 63083.0], [837.0, 111387.0], [835.0, 110609.0], [847.0, 63120.0], [845.0, 41850.75], [843.0, 22736.333333333332], [841.0, 26275.875], [853.0, 62393.0], [855.0, 109595.0], [851.0, 65318.5], [893.0, 64628.5], [883.0, 32783.333333333336], [895.0, 31621.5], [881.0, 64836.5], [891.0, 64804.5], [871.0, 62207.5], [889.0, 35801.4], [869.0, 43811.66666666667], [867.0, 24692.352941176472], [865.0, 62282.5], [877.0, 30867.888888888883], [879.0, 108750.0], [875.0, 15876.5], [873.0, 65116.0], [887.0, 37284.6], [885.0, 43104.25], [927.0, 31707.666666666668], [925.0, 37041.5], [923.0, 57071.5], [921.0, 57369.5], [917.0, 45166.33333333333], [919.0, 38510.8], [915.0, 49976.33333333333], [913.0, 35534.0], [907.0, 17740.0], [909.0, 18105.823529411766], [911.0, 78935.66666666667], [897.0, 108198.0], [899.0, 24568.499999999996], [901.0, 47839.66666666667], [903.0, 39058.0], [905.0, 18052.470588235294], [955.0, 21022.833333333332], [949.0, 44847.33333333333], [951.0, 63631.0], [945.0, 21030.125], [947.0, 107325.0], [959.0, 105898.0], [957.0, 6729.0], [943.0, 35475.2], [941.0, 26853.4], [939.0, 107254.0], [937.0, 107279.0], [935.0, 36740.818181818184], [953.0, 44637.33333333333], [929.0, 64235.5], [933.0, 56755.5], [931.0, 20923.85714285714], [987.0, 73911.0], [977.0, 32491.285714285714], [979.0, 26814.88888888889], [981.0, 104746.0], [975.0, 24097.35714285714], [963.0, 105744.0], [961.0, 106061.0], [965.0, 23060.899999999998], [967.0, 35163.5], [989.0, 30439.0], [991.0, 104455.0], [985.0, 32966.6], [969.0, 34604.8], [973.0, 30042.571428571428], [971.0, 31800.833333333332], [1017.0, 27707.833333333332], [1023.0, 48525.33333333333], [1021.0, 20859.272727272728], [1019.0, 61712.0], [999.0, 43530.66666666667], [1011.0, 26555.666666666668], [1015.0, 54098.5], [1013.0, 29668.249999999996], [1009.0, 26623.666666666668], [1007.0, 62086.5], [993.0, 55178.5], [1005.0, 19151.71428571429], [1003.0, 54481.0], [1001.0, 103526.0], [995.0, 27955.2], [997.0, 28475.25], [1038.0, 29743.71428571429], [1074.0, 27951.33333333333], [1078.0, 31568.0], [1086.0, 35299.8], [1082.0, 31716.5], [1062.0, 44553.66666666667], [1058.0, 52939.0], [1030.0, 40856.25], [1034.0, 102421.0], [1026.0, 29314.666666666664], [1054.0, 28330.6], [1050.0, 20927.57142857143], [1046.0, 20845.0], [1042.0, 38969.75], [1066.0, 20811.11111111111], [1070.0, 29701.142857142855], [1146.0, 28757.571428571428], [1138.0, 23955.999999999996], [1126.0, 15859.105263157891], [1122.0, 54554.0], [1130.0, 23755.625], [1134.0, 49398.0], [1150.0, 39464.66666666667], [1142.0, 44887.33333333333], [1102.0, 43860.33333333333], [1098.0, 25724.333333333332], [1118.0, 43402.0], [1090.0, 41066.66666666667], [1094.0, 59434.5], [1114.0, 17550.777777777777], [1106.0, 25421.333333333332], [1110.0, 97485.0], [1210.0, 38410.0], [1214.0, 28986.166666666664], [1186.0, 25181.647058823524], [1194.0, 35955.5], [1190.0, 43686.33333333333], [1198.0, 35350.90909090909], [1206.0, 15847.5], [1162.0, 33348.4], [1158.0, 29952.5], [1182.0, 92419.0], [1154.0, 48876.5], [1202.0, 34281.2], [1166.0, 26045.25], [1174.0, 21425.666666666668], [1178.0, 32594.0], [1170.0, 30561.249999999996], [1270.0, 25191.4], [1274.0, 32583.25], [1278.0, 26758.727272727272], [1250.0, 53922.5], [1254.0, 45216.5], [1230.0, 30202.0], [1266.0, 30601.25], [1222.0, 26556.444444444445], [1226.0, 24773.5], [1218.0, 54558.5], [1242.0, 23195.333333333332], [1246.0, 45410.5], [1238.0, 53933.0], [1234.0, 37274.66666666667], [1258.0, 30768.0], [1262.0, 36704.66666666667], [1342.0, 25048.142857142855], [1318.0, 27803.0], [1322.0, 20740.714285714286], [1326.0, 78414.0], [1338.0, 17140.0], [1314.0, 15422.199999999997], [1334.0, 30045.0], [1330.0, 25599.125], [1290.0, 22976.33333333333], [1286.0, 83731.0], [1282.0, 43881.0], [1294.0, 19859.333333333332], [1306.0, 24055.166666666668], [1302.0, 42505.5], [1298.0, 19529.2], [1310.0, 30916.8], [1406.0, 21747.55555555556], [1402.0, 26188.285714285714], [1390.0, 46622.0], [1386.0, 10736.0], [1382.0, 13330.5], [1378.0, 15883.36842105263], [1398.0, 23373.375], [1358.0, 31981.75], [1394.0, 37616.66666666667], [1350.0, 19340.0], [1346.0, 48264.0], [1354.0, 24140.6], [1374.0, 24361.25], [1370.0, 31991.5], [1366.0, 34279.75], [1362.0, 25321.0], [1462.0, 24152.166666666664], [1470.0, 22512.4], [1450.0, 20936.714285714286], [1446.0, 66104.0], [1442.0, 66194.0], [1454.0, 41459.0], [1466.0, 31346.666666666664], [1458.0, 42650.0], [1422.0, 68898.0], [1418.0, 69109.0], [1414.0, 21896.125], [1438.0, 32002.0], [1410.0, 69195.0], [1426.0, 25838.100000000002], [1430.0, 67343.0], [1434.0, 66439.0], [1526.0, 39146.0], [1530.0, 18613.2], [1522.0, 46549.333333333336], [1486.0, 10978.0], [1482.0, 22091.63636363636], [1478.0, 28562.75], [1506.0, 23594.25], [1534.0, 23549.25], [1510.0, 23705.75], [1518.0, 31761.666666666664], [1502.0, 17884.166666666668], [1474.0, 63905.0], [1498.0, 62488.0], [1494.0, 22522.4], [1490.0, 13991.5], [1546.0, 26696.4], [1570.0, 27318.6], [1574.0, 16643.0], [1578.0, 17413.363636363636], [1582.0, 55642.0], [1566.0, 9393.0], [1538.0, 29976.75], [1542.0, 26939.0], [1598.0, 34719.5], [1590.0, 33835.75], [1586.0, 55398.0], [1550.0, 59868.0], [1594.0, 54044.0], [1562.0, 15439.0], [1558.0, 9809.0], [1554.0, 18218.4], [1654.0, 29332.0], [1610.0, 22677.15789473684], [1662.0, 19696.875], [1638.0, 22042.8], [1634.0, 48890.0], [1642.0, 28164.0], [1658.0, 33089.0], [1650.0, 14900.083333333334], [1602.0, 14517.454545454546], [1606.0, 52467.0], [1614.0, 27460.333333333336], [1630.0, 17384.666666666668], [1618.0, 30469.5], [1622.0, 30107.5], [1626.0, 32689.5], [1646.0, 23174.714285714286], [1718.0, 21742.333333333332], [1722.0, 18291.0], [1698.0, 24831.75], [1726.0, 23882.0], [1702.0, 21254.0], [1706.0, 23928.5], [1678.0, 23680.0], [1714.0, 18722.0], [1670.0, 31728.0], [1674.0, 25474.5], [1666.0, 23654.5], [1694.0, 28831.5], [1690.0, 17217.25], [1682.0, 22848.25], [1686.0, 15466.2], [1710.0, 22951.85714285714], [1782.0, 18987.666666666668], [1778.0, 17135.75], [1790.0, 23261.000000000004], [1762.0, 24810.333333333332], [1766.0, 12771.0], [1770.0, 23719.5], [1786.0, 12070.000000000002], [1758.0, 20262.75], [1754.0, 19032.5], [1730.0, 12390.909090909092], [1742.0, 22899.75], [1738.0, 11209.142857142857], [1734.0, 14312.666666666668], [1750.0, 22872.333333333332], [1746.0, 27595.0], [1850.0, 5936.0], [1826.0, 18075.333333333332], [1830.0, 11587.5], [1834.0, 11644.0], [1846.0, 18275.0], [1802.0, 14842.066666666664], [1798.0, 8653.333333333334], [1806.0, 11180.222222222223], [1842.0, 9135.25], [1794.0, 21104.333333333332], [1822.0, 24972.0], [1814.0, 20764.0], [1818.0, 11962.4], [1810.0, 18822.0], [1838.0, 16107.0], [1906.0, 16106.727272727272], [1918.0, 16034.0], [1914.0, 21028.5], [1910.0, 21035.0], [1894.0, 14322.000000000002], [1890.0, 8163.4], [1870.0, 9691.0], [1866.0, 20812.0], [1862.0, 20534.0], [1858.0, 17962.363636363636], [1886.0, 12164.75], [1882.0, 19575.409090909092], [1878.0, 12349.0], [1874.0, 3665.0], [1898.0, 7914.5], [1902.0, 6761.2], [1970.0, 8620.666666666666], [1974.0, 7782.666666666667], [1982.0, 9731.0], [1978.0, 9735.0], [1958.0, 7232.0], [1954.0, 10948.2], [1930.0, 7974.125], [1926.0, 21031.333333333332], [1934.0, 21040.428571428572], [1950.0, 8822.625], [1922.0, 7881.833333333334], [1946.0, 11251.666666666666], [1942.0, 11406.5], [1938.0, 11281.42857142857], [1966.0, 5764.0], [1962.0, 6964.8], [1998.0, 5485.75], [1994.0, 5327.0], [1990.0, 6578.5], [1986.0, 5275.5], [1039.0, 25686.85714285714], [1063.0, 23849.727272727272], [1075.0, 27282.666666666664], [1079.0, 32368.500000000004], [1083.0, 30242.0], [1087.0, 36000.666666666664], [1059.0, 37005.333333333336], [1035.0, 37367.8], [1031.0, 32737.0], [1055.0, 21842.333333333332], [1027.0, 102849.0], [1051.0, 39095.0], [1047.0, 40741.0], [1043.0, 57670.5], [1067.0, 36738.0], [1071.0, 100558.0], [1147.0, 57654.0], [1123.0, 54550.5], [1151.0, 94139.0], [1131.0, 54167.5], [1127.0, 26546.333333333336], [1135.0, 30343.8], [1139.0, 35517.25], [1143.0, 27381.0], [1103.0, 32427.5], [1099.0, 21051.333333333332], [1095.0, 41027.0], [1119.0, 32231.333333333336], [1091.0, 98554.0], [1115.0, 29153.5], [1111.0, 43308.0], [1107.0, 97205.0], [1211.0, 31408.8], [1191.0, 38717.0], [1195.0, 23021.0], [1187.0, 27066.166666666668], [1215.0, 46690.0], [1199.0, 26229.714285714286], [1203.0, 55495.5], [1207.0, 90283.0], [1163.0, 53121.0], [1167.0, 39432.33333333333], [1159.0, 23908.14285714286], [1155.0, 31472.142857142855], [1183.0, 34744.8], [1179.0, 42037.33333333333], [1175.0, 31599.8], [1171.0, 57129.0], [1271.0, 32393.5], [1279.0, 24895.749999999996], [1251.0, 23849.6], [1255.0, 86597.0], [1275.0, 41486.66666666667], [1247.0, 18070.285714285714], [1219.0, 43236.33333333333], [1223.0, 15203.66666666667], [1267.0, 36646.0], [1231.0, 87242.0], [1227.0, 33561.2], [1243.0, 30665.8], [1239.0, 53656.5], [1235.0, 37271.33333333333], [1259.0, 25944.25], [1263.0, 28576.0], [1339.0, 16696.0], [1343.0, 48303.0], [1315.0, 29400.5], [1327.0, 29024.0], [1323.0, 25938.2], [1319.0, 21944.1], [1335.0, 49517.0], [1331.0, 49547.0], [1307.0, 20890.000000000004], [1311.0, 40407.66666666667], [1291.0, 28549.333333333332], [1287.0, 83282.0], [1283.0, 23968.25], [1295.0, 36176.5], [1303.0, 16315.999999999998], [1299.0, 81241.0], [1403.0, 30766.2], [1395.0, 24885.4], [1379.0, 34254.0], [1383.0, 23636.0], [1391.0, 46219.0], [1387.0, 72324.0], [1407.0, 44705.5], [1399.0, 45821.5], [1359.0, 31940.75], [1355.0, 14431.000000000002], [1347.0, 14534.666666666666], [1351.0, 76295.4], [1375.0, 37418.0], [1371.0, 19183.0], [1367.0, 29744.0], [1363.0, 32121.75], [1467.0, 23880.625], [1471.0, 32415.0], [1443.0, 38772.5], [1455.0, 29091.8], [1451.0, 37818.0], [1447.0, 23562.9], [1463.0, 28871.0], [1459.0, 33735.333333333336], [1439.0, 29829.0], [1411.0, 35840.66666666667], [1419.0, 22452.0], [1415.0, 68871.0], [1435.0, 32454.5], [1431.0, 26216.6], [1427.0, 43748.5], [1531.0, 23232.777777777777], [1487.0, 14361.0], [1483.0, 63661.0], [1479.0, 63842.0], [1535.0, 22504.125], [1507.0, 29781.333333333336], [1527.0, 31764.0], [1523.0, 28072.5], [1475.0, 23669.0], [1519.0, 36147.5], [1515.0, 46560.333333333336], [1511.0, 29785.333333333336], [1503.0, 34777.166666666664], [1499.0, 13531.0], [1495.0, 39875.5], [1491.0, 37954.4], [1551.0, 34985.0], [1571.0, 30081.0], [1579.0, 26050.0], [1583.0, 55702.0], [1575.0, 24068.583333333336], [1547.0, 20014.0], [1543.0, 60254.0], [1591.0, 26891.0], [1587.0, 54853.0], [1595.0, 54019.0], [1599.0, 24306.0], [1539.0, 23081.142857142855], [1563.0, 9823.0], [1567.0, 57454.5], [1559.0, 31635.0], [1555.0, 30092.666666666664], [1615.0, 30571.5], [1611.0, 22279.222222222223], [1659.0, 19882.25], [1635.0, 21113.0], [1663.0, 43506.0], [1643.0, 34092.0], [1647.0, 46727.0], [1639.0, 24535.666666666664], [1651.0, 27935.0], [1655.0, 25512.0], [1631.0, 27560.571428571428], [1607.0, 12688.555555555555], [1603.0, 34302.5], [1619.0, 30082.5], [1623.0, 30042.0], [1627.0, 22610.6], [1715.0, 15898.333333333332], [1727.0, 15530.166666666666], [1703.0, 16107.25], [1699.0, 18527.333333333336], [1707.0, 16930.0], [1679.0, 19459.8], [1719.0, 10811.0], [1723.0, 17237.7], [1675.0, 16737.714285714286], [1667.0, 28301.0], [1671.0, 42402.0], [1695.0, 16558.555555555555], [1687.0, 25295.5], [1691.0, 36809.0], [1683.0, 20068.0], [1711.0, 19191.4], [1791.0, 13162.0], [1763.0, 24582.0], [1767.0, 16506.799999999996], [1771.0, 14085.083333333334], [1775.0, 8765.5], [1787.0, 27735.4], [1783.0, 12712.5], [1735.0, 18689.0], [1739.0, 16015.25], [1731.0, 27370.0], [1759.0, 13127.0], [1743.0, 16997.285714285714], [1779.0, 4403.0], [1751.0, 16686.0], [1755.0, 7232.636363636365], [1747.0, 17583.4], [1855.0, 20803.5], [1847.0, 10189.0], [1827.0, 19512.666666666668], [1831.0, 28991.0], [1823.0, 15886.333333333332], [1799.0, 31404.333333333332], [1819.0, 30407.0], [1803.0, 13192.6], [1815.0, 20750.0], [1811.0, 21089.0], [1843.0, 16098.0], [1807.0, 31390.0], [1839.0, 16974.5], [1835.0, 9743.421052631578], [1907.0, 9009.0], [1911.0, 17419.4], [1895.0, 15714.000000000002], [1891.0, 6512.2], [1871.0, 11804.624999999998], [1867.0, 18545.6], [1863.0, 5296.25], [1859.0, 10254.0], [1887.0, 7097.25], [1883.0, 8207.75], [1875.0, 12351.0], [1899.0, 5056.2], [1971.0, 4976.25], [1975.0, 8303.5], [1983.0, 8777.0], [1979.0, 9773.0], [1959.0, 10040.0], [1955.0, 6425.8], [1931.0, 6936.875000000001], [1927.0, 21039.0], [1935.0, 22737.0], [1923.0, 13204.8], [1951.0, 10532.333333333334], [1947.0, 8152.5], [1943.0, 7360.25], [1939.0, 8491.0], [1967.0, 6057.0], [1963.0, 7301.0], [1995.0, 6067.714285714286], [1999.0, 6274.0], [1.0, 66029.66666666667]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[993.2684000000045, 30237.302499999896]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3418.2166666666667, "minX": 1.63090158E12, "maxY": 87409.31666666667, "series": [{"data": [[1.63090176E12, 6671.616666666667], [1.63090182E12, 14188.166666666666], [1.63090164E12, 68585.93333333333], [1.6309017E12, 6922.85], [1.63090158E12, 87409.31666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63090176E12, 8600.766666666666], [1.63090182E12, 14527.133333333333], [1.63090164E12, 22955.633333333335], [1.6309017E12, 3418.2166666666667], [1.63090158E12, 7224.166666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090182E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 13807.10509107891, "minX": 1.63090158E12, "maxY": 109963.96701528561, "series": [{"data": [[1.63090176E12, 109963.96701528561], [1.63090182E12, 13807.10509107891], [1.63090164E12, 16781.203433922987], [1.6309017E12, 43216.171526586644], [1.63090158E12, 21208.23572407491]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090182E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7932.766560073096, "minX": 1.63090158E12, "maxY": 109962.45776347542, "series": [{"data": [[1.63090176E12, 109962.45776347542], [1.63090182E12, 13638.625875759026], [1.63090164E12, 13235.85639958376], [1.6309017E12, 40000.835334476826], [1.63090158E12, 7932.766560073096]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090182E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 4803.967409948539, "minX": 1.63090158E12, "maxY": 12873.275011420736, "series": [{"data": [[1.63090176E12, 6689.440868865645], [1.63090182E12, 4807.529191966372], [1.63090164E12, 10089.016909469286], [1.6309017E12, 4803.967409948539], [1.63090158E12, 12873.275011420736]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090182E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 55.0, "minX": 1.63090158E12, "maxY": 136251.0, "series": [{"data": [[1.63090176E12, 131364.0], [1.63090182E12, 136251.0], [1.63090164E12, 36496.0], [1.6309017E12, 72213.0], [1.63090158E12, 40945.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63090176E12, 128450.5], [1.63090182E12, 7231.0], [1.63090164E12, 22599.2], [1.6309017E12, 68790.6], [1.63090158E12, 31892.3]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63090176E12, 131015.88], [1.63090182E12, 134379.37], [1.63090164E12, 35122.42], [1.6309017E12, 72190.05], [1.63090158E12, 39434.03]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63090176E12, 129898.7], [1.63090182E12, 132391.65], [1.63090164E12, 25042.2], [1.6309017E12, 70585.9], [1.63090158E12, 38693.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63090176E12, 72344.0], [1.63090182E12, 55.0], [1.63090164E12, 255.0], [1.6309017E12, 12845.0], [1.63090158E12, 402.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63090176E12, 114607.0], [1.63090182E12, 6479.5], [1.63090164E12, 15465.0], [1.6309017E12, 50410.5], [1.63090158E12, 25942.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090182E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 324.5, "minX": 1.0, "maxY": 133289.0, "series": [{"data": [[2.0, 16746.0], [615.0, 7051.0], [717.0, 4253.0], [3.0, 37961.0], [820.0, 22266.0], [4.0, 40394.0], [5.0, 50049.5], [6.0, 42420.0], [7.0, 29284.0], [8.0, 58038.5], [9.0, 59655.0], [10.0, 76256.0], [11.0, 49391.0], [12.0, 95130.0], [13.0, 7893.0], [14.0, 27503.5], [15.0, 100172.0], [16.0, 108634.0], [17.0, 78033.0], [18.0, 81201.0], [19.0, 114616.0], [20.0, 102282.0], [21.0, 5325.5], [22.0, 98554.0], [24.0, 1525.0], [25.0, 105004.0], [27.0, 132105.5], [29.0, 13833.0], [30.0, 126279.0], [31.0, 4980.0], [35.0, 112280.0], [34.0, 121833.0], [37.0, 63657.0], [36.0, 127614.0], [38.0, 11901.0], [39.0, 3680.0], [40.0, 14367.0], [42.0, 118962.0], [43.0, 124115.0], [44.0, 39103.5], [45.0, 129112.0], [46.0, 31940.0], [47.0, 114154.0], [49.0, 18152.0], [51.0, 34279.5], [53.0, 16944.0], [55.0, 3545.0], [59.0, 8692.0], [58.0, 324.5], [67.0, 115871.0], [66.0, 132774.0], [75.0, 10409.0], [74.0, 15618.0], [83.0, 16055.0], [84.0, 35116.5], [95.0, 7966.0], [93.0, 23023.0], [96.0, 10052.0], [102.0, 6664.5], [118.0, 9871.0], [120.0, 25049.0], [147.0, 12779.0], [186.0, 18323.5], [185.0, 4673.0], [215.0, 10835.0], [235.0, 7066.0], [246.0, 17624.5], [1.0, 27031.5], [263.0, 12676.0], [344.0, 22555.0], [372.0, 15099.0], [415.0, 20533.0], [402.0, 20140.0], [419.0, 20192.0], [441.0, 26156.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 21066.0], [717.0, 4171.0], [3.0, 85766.0], [820.0, 21055.0], [4.0, 45661.0], [5.0, 89184.5], [6.0, 55993.0], [7.0, 73418.0], [8.0, 59120.5], [9.0, 69871.0], [10.0, 52358.0], [11.0, 65755.0], [12.0, 96032.0], [13.0, 72435.0], [15.0, 96617.0], [16.0, 75178.0], [17.0, 68995.5], [18.0, 113908.0], [19.0, 83731.0], [20.0, 91031.0], [21.0, 15953.0], [22.0, 98882.0], [24.0, 117261.0], [25.0, 107760.0], [26.0, 17443.0], [27.0, 103459.0], [29.0, 86851.5], [30.0, 111091.0], [34.0, 122188.0], [37.0, 64224.0], [36.0, 118615.0], [38.0, 61326.0], [39.0, 108151.5], [42.0, 119982.0], [49.0, 13049.0], [51.0, 34264.0], [54.0, 31412.5], [59.0, 13533.0], [67.0, 116601.0], [66.0, 133289.0], [74.0, 16147.0], [75.0, 121345.0], [93.0, 21041.5], [1.0, 28222.5], [344.0, 21047.0], [415.0, 21062.0], [402.0, 21041.0], [419.0, 21022.5], [441.0, 25266.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 820.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 133289.0, "series": [{"data": [[2.0, 16746.0], [615.0, 7051.0], [717.0, 4252.5], [3.0, 37961.0], [820.0, 12365.5], [4.0, 40393.0], [5.0, 50049.5], [6.0, 42420.0], [7.0, 26071.5], [8.0, 58038.5], [9.0, 59655.0], [10.0, 76225.0], [11.0, 49391.0], [12.0, 95130.0], [13.0, 7893.0], [14.0, 26177.5], [15.0, 100172.0], [16.0, 108634.0], [17.0, 78033.0], [18.0, 81201.0], [19.0, 114616.0], [20.0, 102282.0], [21.0, 5325.5], [22.0, 98554.0], [24.0, 1525.0], [25.0, 105004.0], [27.0, 132105.5], [29.0, 13813.5], [30.0, 126279.0], [31.0, 4979.0], [35.0, 112279.0], [34.0, 121833.0], [37.0, 63657.0], [36.0, 127613.0], [38.0, 11901.0], [39.0, 3680.0], [40.0, 14367.0], [42.0, 118962.0], [43.0, 124115.0], [44.0, 24490.5], [45.0, 129112.0], [46.0, 21044.0], [47.0, 114154.0], [49.0, 13774.0], [51.0, 34270.0], [53.0, 16607.0], [55.0, 3545.0], [59.0, 8692.0], [58.0, 324.5], [67.0, 115870.5], [66.0, 132767.0], [75.0, 10367.0], [74.0, 15618.0], [83.0, 15086.0], [84.0, 35116.5], [95.0, 7966.0], [93.0, 22967.0], [96.0, 10052.0], [102.0, 6664.5], [118.0, 9871.0], [120.0, 25049.0], [147.0, 12776.0], [186.0, 18323.5], [185.0, 4669.0], [215.0, 10834.0], [235.0, 7066.0], [246.0, 17624.5], [1.0, 24542.5], [263.0, 12676.0], [344.0, 22464.0], [372.0, 15099.0], [415.0, 20529.0], [402.0, 20140.0], [419.0, 19866.0], [441.0, 21192.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [717.0, 0.0], [3.0, 85766.0], [820.0, 0.0], [4.0, 45661.0], [5.0, 89184.5], [6.0, 55992.0], [7.0, 73418.0], [8.0, 59120.5], [9.0, 69871.0], [10.0, 52353.0], [11.0, 65754.0], [12.0, 96032.0], [13.0, 72435.0], [15.0, 96617.0], [16.0, 75178.0], [17.0, 68995.5], [18.0, 113908.0], [19.0, 83731.0], [20.0, 91031.0], [21.0, 0.0], [22.0, 98882.0], [24.0, 117261.0], [25.0, 107760.0], [26.0, 0.0], [27.0, 103459.0], [29.0, 86849.0], [30.0, 111091.0], [34.0, 122187.0], [37.0, 64221.0], [36.0, 118614.0], [38.0, 61323.0], [39.0, 108151.0], [42.0, 119981.0], [49.0, 0.0], [51.0, 34263.0], [54.0, 31410.5], [59.0, 0.0], [67.0, 116600.0], [66.0, 133289.0], [74.0, 0.0], [75.0, 121345.0], [93.0, 0.0], [1.0, 0.0], [344.0, 0.0], [415.0, 0.0], [402.0, 0.0], [419.0, 0.0], [441.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 820.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.63090158E12, "maxY": 66.66666666666667, "series": [{"data": [[1.63090182E12, 33.333333333333336], [1.63090164E12, 66.66666666666667], [1.63090158E12, 66.66666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090182E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.63090158E12, "maxY": 54.28333333333333, "series": [{"data": [[1.63090176E12, 18.966666666666665], [1.63090182E12, 34.36666666666667], [1.63090164E12, 54.28333333333333], [1.6309017E12, 4.3], [1.63090158E12, 16.933333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63090158E12, 0.016666666666666666]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.63090182E12, 0.03333333333333333], [1.63090164E12, 8.966666666666667], [1.6309017E12, 1.4833333333333334], [1.63090158E12, 18.716666666666665]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.63090176E12, 1.75], [1.63090182E12, 0.03333333333333333], [1.6309017E12, 3.933333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.63090182E12, 1.25], [1.63090164E12, 0.8166666666666667], [1.63090158E12, 0.8166666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090182E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.3166666666666667, "minX": 1.63090158E12, "maxY": 54.28333333333333, "series": [{"data": [[1.63090176E12, 1.75], [1.63090182E12, 1.3166666666666667], [1.63090164E12, 9.783333333333333], [1.6309017E12, 5.416666666666667], [1.63090158E12, 19.55]], "isOverall": false, "label": "HTTP请求-failure", "isController": false}, {"data": [[1.63090176E12, 18.966666666666665], [1.63090182E12, 34.36666666666667], [1.63090164E12, 54.28333333333333], [1.6309017E12, 4.3], [1.63090158E12, 16.933333333333334]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090182E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.3166666666666667, "minX": 1.63090158E12, "maxY": 54.28333333333333, "series": [{"data": [[1.63090176E12, 18.966666666666665], [1.63090182E12, 34.36666666666667], [1.63090164E12, 54.28333333333333], [1.6309017E12, 4.3], [1.63090158E12, 16.933333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63090176E12, 1.75], [1.63090182E12, 1.3166666666666667], [1.63090164E12, 9.783333333333333], [1.6309017E12, 5.416666666666667], [1.63090158E12, 19.55]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090182E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

