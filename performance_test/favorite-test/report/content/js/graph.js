/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 524.0, "minX": 0.0, "maxY": 144888.0, "series": [{"data": [[0.0, 524.0], [0.1, 563.0], [0.2, 1013.0], [0.3, 1051.0], [0.4, 1074.0], [0.5, 1115.0], [0.6, 1139.0], [0.7, 1144.0], [0.8, 1199.0], [0.9, 7175.0], [1.0, 7189.0], [1.1, 7243.0], [1.2, 7251.0], [1.3, 7323.0], [1.4, 7368.0], [1.5, 7412.0], [1.6, 7691.0], [1.7, 7793.0], [1.8, 7873.0], [1.9, 7941.0], [2.0, 8022.0], [2.1, 8076.0], [2.2, 8219.0], [2.3, 8253.0], [2.4, 8698.0], [2.5, 13088.0], [2.6, 13287.0], [2.7, 13345.0], [2.8, 13365.0], [2.9, 13389.0], [3.0, 13441.0], [3.1, 13463.0], [3.2, 13514.0], [3.3, 13721.0], [3.4, 13872.0], [3.5, 13964.0], [3.6, 14042.0], [3.7, 14095.0], [3.8, 14160.0], [3.9, 14217.0], [4.0, 14288.0], [4.1, 14387.0], [4.2, 14482.0], [4.3, 14905.0], [4.4, 18252.0], [4.5, 18340.0], [4.6, 18955.0], [4.7, 19005.0], [4.8, 19080.0], [4.9, 19115.0], [5.0, 19187.0], [5.1, 19243.0], [5.2, 19258.0], [5.3, 19303.0], [5.4, 19401.0], [5.5, 20111.0], [5.6, 20227.0], [5.7, 20769.0], [5.8, 20799.0], [5.9, 20857.0], [6.0, 20866.0], [6.1, 21051.0], [6.2, 21053.0], [6.3, 21054.0], [6.4, 21054.0], [6.5, 25067.0], [6.6, 25162.0], [6.7, 25257.0], [6.8, 25310.0], [6.9, 25647.0], [7.0, 25669.0], [7.1, 25712.0], [7.2, 25739.0], [7.3, 25788.0], [7.4, 25794.0], [7.5, 25826.0], [7.6, 25867.0], [7.7, 25929.0], [7.8, 26008.0], [7.9, 26107.0], [8.0, 26828.0], [8.1, 30223.0], [8.2, 30246.0], [8.3, 30288.0], [8.4, 30307.0], [8.5, 30324.0], [8.6, 30345.0], [8.7, 30347.0], [8.8, 30360.0], [8.9, 30369.0], [9.0, 30394.0], [9.1, 30396.0], [9.2, 30403.0], [9.3, 30416.0], [9.4, 30433.0], [9.5, 30446.0], [9.6, 30471.0], [9.7, 30496.0], [9.8, 30505.0], [9.9, 30507.0], [10.0, 30518.0], [10.1, 30533.0], [10.2, 30548.0], [10.3, 30587.0], [10.4, 31681.0], [10.5, 31809.0], [10.6, 31872.0], [10.7, 31880.0], [10.8, 31971.0], [10.9, 32037.0], [11.0, 32218.0], [11.1, 32252.0], [11.2, 32825.0], [11.3, 36846.0], [11.4, 36981.0], [11.5, 37032.0], [11.6, 37108.0], [11.7, 37110.0], [11.8, 37146.0], [11.9, 37174.0], [12.0, 37189.0], [12.1, 37227.0], [12.2, 37249.0], [12.3, 37307.0], [12.4, 37341.0], [12.5, 37381.0], [12.6, 37571.0], [12.7, 37669.0], [12.8, 37729.0], [12.9, 37771.0], [13.0, 37856.0], [13.1, 37915.0], [13.2, 37986.0], [13.3, 38049.0], [13.4, 38099.0], [13.5, 38175.0], [13.6, 38273.0], [13.7, 38287.0], [13.8, 39663.0], [13.9, 40646.0], [14.0, 40753.0], [14.1, 41067.0], [14.2, 41126.0], [14.3, 41221.0], [14.4, 41280.0], [14.5, 41292.0], [14.6, 41351.0], [14.7, 41494.0], [14.8, 41596.0], [14.9, 41613.0], [15.0, 41633.0], [15.1, 41655.0], [15.2, 41692.0], [15.3, 41734.0], [15.4, 41797.0], [15.5, 41837.0], [15.6, 42020.0], [15.7, 42039.0], [15.8, 43243.0], [15.9, 43268.0], [16.0, 43503.0], [16.1, 43565.0], [16.2, 44098.0], [16.3, 45235.0], [16.4, 45693.0], [16.5, 45747.0], [16.6, 46459.0], [16.7, 46508.0], [16.8, 46603.0], [16.9, 46648.0], [17.0, 46680.0], [17.1, 46733.0], [17.2, 46772.0], [17.3, 46795.0], [17.4, 46850.0], [17.5, 46876.0], [17.6, 46991.0], [17.7, 47001.0], [17.8, 47069.0], [17.9, 47101.0], [18.0, 47405.0], [18.1, 47661.0], [18.2, 49068.0], [18.3, 49091.0], [18.4, 50040.0], [18.5, 50802.0], [18.6, 51921.0], [18.7, 51959.0], [18.8, 51997.0], [18.9, 52030.0], [19.0, 52101.0], [19.1, 52151.0], [19.2, 52434.0], [19.3, 52526.0], [19.4, 52570.0], [19.5, 52592.0], [19.6, 52630.0], [19.7, 52648.0], [19.8, 52683.0], [19.9, 52695.0], [20.0, 52717.0], [20.1, 52722.0], [20.2, 52753.0], [20.3, 52760.0], [20.4, 52778.0], [20.5, 52789.0], [20.6, 52886.0], [20.7, 52905.0], [20.8, 52937.0], [20.9, 52965.0], [21.0, 53063.0], [21.1, 53104.0], [21.2, 53119.0], [21.3, 53177.0], [21.4, 53532.0], [21.5, 53580.0], [21.6, 53767.0], [21.7, 55172.0], [21.8, 55401.0], [21.9, 55452.0], [22.0, 55505.0], [22.1, 55529.0], [22.2, 55552.0], [22.3, 55565.0], [22.4, 55593.0], [22.5, 55606.0], [22.6, 55615.0], [22.7, 55624.0], [22.8, 55651.0], [22.9, 55681.0], [23.0, 55702.0], [23.1, 55731.0], [23.2, 55844.0], [23.3, 55901.0], [23.4, 56077.0], [23.5, 58702.0], [23.6, 58776.0], [23.7, 58869.0], [23.8, 58931.0], [23.9, 59026.0], [24.0, 59152.0], [24.1, 59301.0], [24.2, 59420.0], [24.3, 59457.0], [24.4, 59524.0], [24.5, 59553.0], [24.6, 59585.0], [24.7, 59619.0], [24.8, 59661.0], [24.9, 59677.0], [25.0, 59706.0], [25.1, 59729.0], [25.2, 59790.0], [25.3, 59852.0], [25.4, 59866.0], [25.5, 59954.0], [25.6, 60156.0], [25.7, 60218.0], [25.8, 60301.0], [25.9, 60339.0], [26.0, 60474.0], [26.1, 60530.0], [26.2, 60605.0], [26.3, 60654.0], [26.4, 60705.0], [26.5, 62029.0], [26.6, 63734.0], [26.7, 64543.0], [26.8, 64683.0], [26.9, 64757.0], [27.0, 65139.0], [27.1, 65198.0], [27.2, 65237.0], [27.3, 65264.0], [27.4, 65305.0], [27.5, 65357.0], [27.6, 65429.0], [27.7, 65460.0], [27.8, 65465.0], [27.9, 65471.0], [28.0, 65550.0], [28.1, 65585.0], [28.2, 65624.0], [28.3, 65650.0], [28.4, 65663.0], [28.5, 65683.0], [28.6, 65793.0], [28.7, 65941.0], [28.8, 66715.0], [28.9, 67830.0], [29.0, 67903.0], [29.1, 68030.0], [29.2, 68222.0], [29.3, 68411.0], [29.4, 68569.0], [29.5, 68856.0], [29.6, 69501.0], [29.7, 69610.0], [29.8, 69631.0], [29.9, 69675.0], [30.0, 69738.0], [30.1, 69768.0], [30.2, 70204.0], [30.3, 70384.0], [30.4, 70533.0], [30.5, 70652.0], [30.6, 70808.0], [30.7, 71092.0], [30.8, 71222.0], [30.9, 71255.0], [31.0, 71335.0], [31.1, 71491.0], [31.2, 71578.0], [31.3, 71587.0], [31.4, 71781.0], [31.5, 72016.0], [31.6, 72052.0], [31.7, 72126.0], [31.8, 72149.0], [31.9, 72184.0], [32.0, 72216.0], [32.1, 72226.0], [32.2, 72262.0], [32.3, 72300.0], [32.4, 72392.0], [32.5, 72436.0], [32.6, 72515.0], [32.7, 72652.0], [32.8, 72772.0], [32.9, 73059.0], [33.0, 73757.0], [33.1, 73957.0], [33.2, 74283.0], [33.3, 74317.0], [33.4, 74362.0], [33.5, 74467.0], [33.6, 74516.0], [33.7, 74567.0], [33.8, 74654.0], [33.9, 74661.0], [34.0, 74682.0], [34.1, 74716.0], [34.2, 74812.0], [34.3, 74871.0], [34.4, 74930.0], [34.5, 74934.0], [34.6, 74959.0], [34.7, 74996.0], [34.8, 75109.0], [34.9, 75116.0], [35.0, 75122.0], [35.1, 75133.0], [35.2, 75178.0], [35.3, 75194.0], [35.4, 75271.0], [35.5, 75319.0], [35.6, 75475.0], [35.7, 75534.0], [35.8, 75543.0], [35.9, 75673.0], [36.0, 76608.0], [36.1, 77363.0], [36.2, 77540.0], [36.3, 77591.0], [36.4, 77724.0], [36.5, 77846.0], [36.6, 78241.0], [36.7, 78304.0], [36.8, 78444.0], [36.9, 78465.0], [37.0, 78489.0], [37.1, 78521.0], [37.2, 78562.0], [37.3, 78612.0], [37.4, 78644.0], [37.5, 78669.0], [37.6, 78867.0], [37.7, 78980.0], [37.8, 78988.0], [37.9, 79004.0], [38.0, 79024.0], [38.1, 79045.0], [38.2, 79060.0], [38.3, 79069.0], [38.4, 79098.0], [38.5, 79115.0], [38.6, 79133.0], [38.7, 79158.0], [38.8, 79207.0], [38.9, 79246.0], [39.0, 79356.0], [39.1, 79378.0], [39.2, 79453.0], [39.3, 79456.0], [39.4, 79467.0], [39.5, 79484.0], [39.6, 79493.0], [39.7, 79505.0], [39.8, 79541.0], [39.9, 79555.0], [40.0, 79592.0], [40.1, 79703.0], [40.2, 79902.0], [40.3, 79913.0], [40.4, 80081.0], [40.5, 82905.0], [40.6, 83503.0], [40.7, 83970.0], [40.8, 84132.0], [40.9, 84154.0], [41.0, 84196.0], [41.1, 84245.0], [41.2, 84287.0], [41.3, 84371.0], [41.4, 84440.0], [41.5, 84487.0], [41.6, 84494.0], [41.7, 84770.0], [41.8, 84986.0], [41.9, 85061.0], [42.0, 85125.0], [42.1, 85213.0], [42.2, 85260.0], [42.3, 85606.0], [42.4, 86889.0], [42.5, 87902.0], [42.6, 87966.0], [42.7, 87984.0], [42.8, 88027.0], [42.9, 88066.0], [43.0, 88084.0], [43.1, 88120.0], [43.2, 88138.0], [43.3, 88194.0], [43.4, 88237.0], [43.5, 88242.0], [43.6, 88252.0], [43.7, 88261.0], [43.8, 88282.0], [43.9, 88299.0], [44.0, 88314.0], [44.1, 88320.0], [44.2, 88340.0], [44.3, 88352.0], [44.4, 88410.0], [44.5, 88411.0], [44.6, 88517.0], [44.7, 88581.0], [44.8, 88723.0], [44.9, 89138.0], [45.0, 89564.0], [45.1, 89754.0], [45.2, 90212.0], [45.3, 90321.0], [45.4, 90408.0], [45.5, 90902.0], [45.6, 91864.0], [45.7, 92608.0], [45.8, 92656.0], [45.9, 92725.0], [46.0, 92786.0], [46.1, 92824.0], [46.2, 92869.0], [46.3, 92888.0], [46.4, 92913.0], [46.5, 92940.0], [46.6, 92942.0], [46.7, 92960.0], [46.8, 92975.0], [46.9, 92977.0], [47.0, 93007.0], [47.1, 93012.0], [47.2, 93026.0], [47.3, 93035.0], [47.4, 93048.0], [47.5, 93058.0], [47.6, 93075.0], [47.7, 93080.0], [47.8, 93098.0], [47.9, 93119.0], [48.0, 93147.0], [48.1, 93167.0], [48.2, 93177.0], [48.3, 93188.0], [48.4, 93218.0], [48.5, 93261.0], [48.6, 93286.0], [48.7, 93311.0], [48.8, 93349.0], [48.9, 93358.0], [49.0, 93567.0], [49.1, 93805.0], [49.2, 94009.0], [49.3, 94916.0], [49.4, 95012.0], [49.5, 95488.0], [49.6, 95783.0], [49.7, 95873.0], [49.8, 95988.0], [49.9, 96020.0], [50.0, 96069.0], [50.1, 96081.0], [50.2, 96135.0], [50.3, 96144.0], [50.4, 96151.0], [50.5, 96159.0], [50.6, 96180.0], [50.7, 96191.0], [50.8, 96203.0], [50.9, 96218.0], [51.0, 96236.0], [51.1, 96245.0], [51.2, 96250.0], [51.3, 96262.0], [51.4, 96281.0], [51.5, 96308.0], [51.6, 96340.0], [51.7, 96347.0], [51.8, 96391.0], [51.9, 96421.0], [52.0, 96472.0], [52.1, 96490.0], [52.2, 96604.0], [52.3, 96722.0], [52.4, 96748.0], [52.5, 96881.0], [52.6, 97720.0], [52.7, 97751.0], [52.8, 98665.0], [52.9, 99014.0], [53.0, 99416.0], [53.1, 99541.0], [53.2, 99601.0], [53.3, 99636.0], [53.4, 99688.0], [53.5, 99707.0], [53.6, 99733.0], [53.7, 99809.0], [53.8, 99888.0], [53.9, 99919.0], [54.0, 99961.0], [54.1, 99972.0], [54.2, 100031.0], [54.3, 100077.0], [54.4, 100097.0], [54.5, 100111.0], [54.6, 100203.0], [54.7, 100207.0], [54.8, 100232.0], [54.9, 100318.0], [55.0, 100621.0], [55.1, 100724.0], [55.2, 100984.0], [55.3, 101822.0], [55.4, 101907.0], [55.5, 102050.0], [55.6, 102462.0], [55.7, 102510.0], [55.8, 102583.0], [55.9, 102618.0], [56.0, 102670.0], [56.1, 102814.0], [56.2, 102869.0], [56.3, 102886.0], [56.4, 102936.0], [56.5, 102977.0], [56.6, 103030.0], [56.7, 103082.0], [56.8, 104023.0], [56.9, 104076.0], [57.0, 104984.0], [57.1, 105052.0], [57.2, 105123.0], [57.3, 105211.0], [57.4, 105260.0], [57.5, 105464.0], [57.6, 105509.0], [57.7, 105524.0], [57.8, 105548.0], [57.9, 105549.0], [58.0, 105589.0], [58.1, 105599.0], [58.2, 105610.0], [58.3, 105617.0], [58.4, 105651.0], [58.5, 105671.0], [58.6, 105753.0], [58.7, 105762.0], [58.8, 105824.0], [58.9, 105905.0], [59.0, 105940.0], [59.1, 105942.0], [59.2, 105986.0], [59.3, 106014.0], [59.4, 106049.0], [59.5, 106098.0], [59.6, 106249.0], [59.7, 106366.0], [59.8, 106461.0], [59.9, 106486.0], [60.0, 106544.0], [60.1, 106617.0], [60.2, 106758.0], [60.3, 106843.0], [60.4, 106966.0], [60.5, 107178.0], [60.6, 107232.0], [60.7, 107292.0], [60.8, 107321.0], [60.9, 107374.0], [61.0, 107621.0], [61.1, 108167.0], [61.2, 108326.0], [61.3, 108389.0], [61.4, 108451.0], [61.5, 108516.0], [61.6, 108609.0], [61.7, 108638.0], [61.8, 108843.0], [61.9, 108893.0], [62.0, 108936.0], [62.1, 108956.0], [62.2, 109095.0], [62.3, 109109.0], [62.4, 109155.0], [62.5, 109165.0], [62.6, 109200.0], [62.7, 109215.0], [62.8, 109250.0], [62.9, 109262.0], [63.0, 109304.0], [63.1, 109305.0], [63.2, 109359.0], [63.3, 109901.0], [63.4, 110114.0], [63.5, 110490.0], [63.6, 110552.0], [63.7, 110605.0], [63.8, 110624.0], [63.9, 110647.0], [64.0, 110814.0], [64.1, 111085.0], [64.2, 111134.0], [64.3, 111386.0], [64.4, 111474.0], [64.5, 111491.0], [64.6, 111509.0], [64.7, 111527.0], [64.8, 111561.0], [64.9, 111617.0], [65.0, 111638.0], [65.1, 111660.0], [65.2, 111672.0], [65.3, 111687.0], [65.4, 111739.0], [65.5, 111850.0], [65.6, 111882.0], [65.7, 112161.0], [65.8, 112170.0], [65.9, 112232.0], [66.0, 112246.0], [66.1, 112286.0], [66.2, 112333.0], [66.3, 112355.0], [66.4, 112374.0], [66.5, 112405.0], [66.6, 112430.0], [66.7, 112638.0], [66.8, 112775.0], [66.9, 112851.0], [67.0, 112905.0], [67.1, 113118.0], [67.2, 113377.0], [67.3, 113396.0], [67.4, 113484.0], [67.5, 113521.0], [67.6, 113937.0], [67.7, 113959.0], [67.8, 114017.0], [67.9, 114045.0], [68.0, 114104.0], [68.1, 114315.0], [68.2, 114372.0], [68.3, 114457.0], [68.4, 114698.0], [68.5, 115072.0], [68.6, 115210.0], [68.7, 115226.0], [68.8, 115274.0], [68.9, 115338.0], [69.0, 115481.0], [69.1, 115526.0], [69.2, 115548.0], [69.3, 115642.0], [69.4, 116051.0], [69.5, 116287.0], [69.6, 116387.0], [69.7, 116508.0], [69.8, 117078.0], [69.9, 117136.0], [70.0, 117295.0], [70.1, 117492.0], [70.2, 117576.0], [70.3, 117609.0], [70.4, 117632.0], [70.5, 117676.0], [70.6, 117769.0], [70.7, 117962.0], [70.8, 118012.0], [70.9, 118268.0], [71.0, 118351.0], [71.1, 118692.0], [71.2, 118787.0], [71.3, 118819.0], [71.4, 118923.0], [71.5, 118935.0], [71.6, 118949.0], [71.7, 118971.0], [71.8, 119070.0], [71.9, 119131.0], [72.0, 119192.0], [72.1, 119871.0], [72.2, 120071.0], [72.3, 120098.0], [72.4, 120144.0], [72.5, 120183.0], [72.6, 120236.0], [72.7, 120342.0], [72.8, 120379.0], [72.9, 120415.0], [73.0, 120426.0], [73.1, 120561.0], [73.2, 120594.0], [73.3, 120843.0], [73.4, 120872.0], [73.5, 121046.0], [73.6, 121300.0], [73.7, 121452.0], [73.8, 121484.0], [73.9, 121686.0], [74.0, 121706.0], [74.1, 122059.0], [74.2, 122119.0], [74.3, 122178.0], [74.4, 122298.0], [74.5, 122380.0], [74.6, 122650.0], [74.7, 122729.0], [74.8, 122971.0], [74.9, 123320.0], [75.0, 123377.0], [75.1, 123465.0], [75.2, 123483.0], [75.3, 123523.0], [75.4, 123576.0], [75.5, 123669.0], [75.6, 123728.0], [75.7, 123745.0], [75.8, 123774.0], [75.9, 123800.0], [76.0, 123807.0], [76.1, 123823.0], [76.2, 123879.0], [76.3, 123899.0], [76.4, 123949.0], [76.5, 123968.0], [76.6, 123986.0], [76.7, 124001.0], [76.8, 124021.0], [76.9, 124050.0], [77.0, 124072.0], [77.1, 124301.0], [77.2, 124419.0], [77.3, 124592.0], [77.4, 124632.0], [77.5, 124840.0], [77.6, 124976.0], [77.7, 125087.0], [77.8, 125105.0], [77.9, 125180.0], [78.0, 125211.0], [78.1, 125252.0], [78.2, 125272.0], [78.3, 125283.0], [78.4, 125407.0], [78.5, 125472.0], [78.6, 125734.0], [78.7, 125809.0], [78.8, 125935.0], [78.9, 125977.0], [79.0, 126000.0], [79.1, 126125.0], [79.2, 126496.0], [79.3, 126597.0], [79.4, 126634.0], [79.5, 126668.0], [79.6, 126788.0], [79.7, 126994.0], [79.8, 127064.0], [79.9, 127149.0], [80.0, 127169.0], [80.1, 127197.0], [80.2, 127306.0], [80.3, 127645.0], [80.4, 127674.0], [80.5, 127968.0], [80.6, 127982.0], [80.7, 128034.0], [80.8, 128115.0], [80.9, 128190.0], [81.0, 128263.0], [81.1, 128425.0], [81.2, 128459.0], [81.3, 128489.0], [81.4, 128499.0], [81.5, 128534.0], [81.6, 128591.0], [81.7, 128638.0], [81.8, 128707.0], [81.9, 128847.0], [82.0, 128886.0], [82.1, 128969.0], [82.2, 129272.0], [82.3, 129349.0], [82.4, 129466.0], [82.5, 129575.0], [82.6, 129651.0], [82.7, 129696.0], [82.8, 129802.0], [82.9, 129935.0], [83.0, 129984.0], [83.1, 130318.0], [83.2, 130336.0], [83.3, 130443.0], [83.4, 130484.0], [83.5, 130502.0], [83.6, 130982.0], [83.7, 131284.0], [83.8, 131375.0], [83.9, 131401.0], [84.0, 131421.0], [84.1, 131465.0], [84.2, 131684.0], [84.3, 131713.0], [84.4, 131757.0], [84.5, 131891.0], [84.6, 132109.0], [84.7, 132208.0], [84.8, 132234.0], [84.9, 132270.0], [85.0, 132299.0], [85.1, 132407.0], [85.2, 132455.0], [85.3, 132595.0], [85.4, 132637.0], [85.5, 132827.0], [85.6, 132868.0], [85.7, 132940.0], [85.8, 132961.0], [85.9, 133003.0], [86.0, 133048.0], [86.1, 133083.0], [86.2, 133109.0], [86.3, 133127.0], [86.4, 133154.0], [86.5, 133255.0], [86.6, 133474.0], [86.7, 133669.0], [86.8, 133930.0], [86.9, 133974.0], [87.0, 134240.0], [87.1, 134258.0], [87.2, 134284.0], [87.3, 134335.0], [87.4, 134600.0], [87.5, 134623.0], [87.6, 134693.0], [87.7, 135177.0], [87.8, 135325.0], [87.9, 135359.0], [88.0, 135362.0], [88.1, 135386.0], [88.2, 135408.0], [88.3, 135423.0], [88.4, 135803.0], [88.5, 136015.0], [88.6, 136045.0], [88.7, 136075.0], [88.8, 136110.0], [88.9, 136118.0], [89.0, 136138.0], [89.1, 136181.0], [89.2, 136194.0], [89.3, 136205.0], [89.4, 136214.0], [89.5, 136223.0], [89.6, 136256.0], [89.7, 136340.0], [89.8, 136370.0], [89.9, 136400.0], [90.0, 136459.0], [90.1, 136546.0], [90.2, 136566.0], [90.3, 136623.0], [90.4, 136659.0], [90.5, 136687.0], [90.6, 136709.0], [90.7, 136735.0], [90.8, 136753.0], [90.9, 136785.0], [91.0, 136801.0], [91.1, 136849.0], [91.2, 136933.0], [91.3, 136997.0], [91.4, 137068.0], [91.5, 137175.0], [91.6, 137269.0], [91.7, 137335.0], [91.8, 137406.0], [91.9, 137432.0], [92.0, 137449.0], [92.1, 137541.0], [92.2, 137546.0], [92.3, 137639.0], [92.4, 137741.0], [92.5, 137855.0], [92.6, 137932.0], [92.7, 138251.0], [92.8, 138338.0], [92.9, 138840.0], [93.0, 138947.0], [93.1, 139012.0], [93.2, 139168.0], [93.3, 139472.0], [93.4, 139480.0], [93.5, 139496.0], [93.6, 139501.0], [93.7, 139521.0], [93.8, 139532.0], [93.9, 139558.0], [94.0, 139573.0], [94.1, 139591.0], [94.2, 139611.0], [94.3, 139640.0], [94.4, 139664.0], [94.5, 139672.0], [94.6, 139684.0], [94.7, 139699.0], [94.8, 139741.0], [94.9, 139781.0], [95.0, 139809.0], [95.1, 139873.0], [95.2, 139919.0], [95.3, 139971.0], [95.4, 139999.0], [95.5, 140198.0], [95.6, 140225.0], [95.7, 140281.0], [95.8, 140330.0], [95.9, 140346.0], [96.0, 140401.0], [96.1, 140436.0], [96.2, 140487.0], [96.3, 140522.0], [96.4, 140611.0], [96.5, 140668.0], [96.6, 140681.0], [96.7, 140698.0], [96.8, 140705.0], [96.9, 140717.0], [97.0, 140738.0], [97.1, 140754.0], [97.2, 140784.0], [97.3, 140917.0], [97.4, 140954.0], [97.5, 141021.0], [97.6, 141079.0], [97.7, 141129.0], [97.8, 141148.0], [97.9, 141168.0], [98.0, 141180.0], [98.1, 141349.0], [98.2, 141360.0], [98.3, 141578.0], [98.4, 141605.0], [98.5, 141672.0], [98.6, 141677.0], [98.7, 141831.0], [98.8, 141868.0], [98.9, 142204.0], [99.0, 142257.0], [99.1, 142415.0], [99.2, 142548.0], [99.3, 142857.0], [99.4, 142954.0], [99.5, 143063.0], [99.6, 143086.0], [99.7, 143557.0], [99.8, 143662.0], [99.9, 143805.0], [100.0, 144888.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 500.0, "maxY": 23.0, "series": [{"data": [[135200.0, 1.0], [141600.0, 8.0], [144800.0, 1.0], [132900.0, 5.0], [136100.0, 12.0], [142500.0, 2.0], [66700.0, 1.0], [68300.0, 1.0], [69900.0, 1.0], [71500.0, 5.0], [74700.0, 4.0], [77900.0, 1.0], [79500.0, 10.0], [82700.0, 1.0], [84300.0, 2.0], [89100.0, 1.0], [93900.0, 1.0], [98700.0, 1.0], [100300.0, 3.0], [101900.0, 2.0], [105100.0, 3.0], [106700.0, 3.0], [108300.0, 3.0], [109900.0, 3.0], [111500.0, 8.0], [113100.0, 1.0], [116300.0, 1.0], [117900.0, 3.0], [121100.0, 1.0], [122700.0, 2.0], [124300.0, 2.0], [125900.0, 6.0], [137000.0, 2.0], [140200.0, 5.0], [143400.0, 1.0], [137900.0, 4.0], [141100.0, 8.0], [37700.0, 4.0], [36900.0, 3.0], [41700.0, 6.0], [43300.0, 1.0], [44100.0, 1.0], [45700.0, 2.0], [46500.0, 3.0], [47300.0, 1.0], [52100.0, 3.0], [52900.0, 6.0], [53700.0, 3.0], [55300.0, 2.0], [59300.0, 3.0], [60100.0, 3.0], [65800.0, 1.0], [70600.0, 3.0], [72200.0, 8.0], [73800.0, 1.0], [75400.0, 2.0], [78600.0, 7.0], [85000.0, 4.0], [88200.0, 16.0], [93000.0, 23.0], [96200.0, 18.0], [99400.0, 3.0], [102600.0, 4.0], [105800.0, 4.0], [107400.0, 2.0], [109000.0, 2.0], [110600.0, 8.0], [112200.0, 7.0], [113800.0, 2.0], [115400.0, 2.0], [117000.0, 2.0], [118600.0, 1.0], [120200.0, 3.0], [123400.0, 6.0], [125000.0, 4.0], [126600.0, 5.0], [500.0, 3.0], [128200.0, 2.0], [129800.0, 3.0], [132400.0, 4.0], [138800.0, 1.0], [600.0, 1.0], [900.0, 1.0], [1000.0, 7.0], [1100.0, 8.0], [133300.0, 1.0], [136500.0, 5.0], [139700.0, 6.0], [142900.0, 3.0], [69700.0, 4.0], [71300.0, 1.0], [74500.0, 3.0], [77700.0, 1.0], [79300.0, 5.0], [84100.0, 6.0], [90500.0, 1.0], [98500.0, 1.0], [100100.0, 4.0], [104900.0, 4.0], [106500.0, 4.0], [108100.0, 1.0], [7100.0, 5.0], [111300.0, 1.0], [112900.0, 2.0], [114500.0, 1.0], [7200.0, 6.0], [7300.0, 5.0], [7400.0, 3.0], [117700.0, 3.0], [7600.0, 1.0], [120900.0, 2.0], [7700.0, 3.0], [7800.0, 3.0], [7900.0, 3.0], [124100.0, 1.0], [125700.0, 3.0], [8000.0, 5.0], [127300.0, 3.0], [128900.0, 3.0], [130500.0, 2.0], [8200.0, 4.0], [8600.0, 1.0], [134200.0, 6.0], [137400.0, 7.0], [8800.0, 1.0], [140600.0, 9.0], [143800.0, 1.0], [13000.0, 1.0], [13200.0, 2.0], [13400.0, 6.0], [13800.0, 2.0], [14000.0, 4.0], [14200.0, 5.0], [14400.0, 1.0], [14800.0, 1.0], [18800.0, 1.0], [19200.0, 6.0], [19600.0, 1.0], [20000.0, 1.0], [20800.0, 5.0], [25200.0, 4.0], [25600.0, 7.0], [26000.0, 3.0], [26800.0, 1.0], [30400.0, 15.0], [31600.0, 1.0], [32000.0, 2.0], [32800.0, 1.0], [135100.0, 1.0], [138300.0, 3.0], [36800.0, 2.0], [141500.0, 4.0], [37600.0, 3.0], [41600.0, 10.0], [43200.0, 3.0], [44000.0, 2.0], [45600.0, 2.0], [46400.0, 2.0], [48800.0, 1.0], [52000.0, 4.0], [52800.0, 4.0], [53600.0, 1.0], [56000.0, 2.0], [64800.0, 1.0], [65600.0, 8.0], [68800.0, 1.0], [70400.0, 1.0], [72000.0, 5.0], [73600.0, 1.0], [75200.0, 4.0], [78400.0, 6.0], [80000.0, 1.0], [83200.0, 1.0], [88000.0, 8.0], [89600.0, 1.0], [92800.0, 9.0], [96000.0, 8.0], [97600.0, 1.0], [102400.0, 2.0], [104000.0, 5.0], [105600.0, 12.0], [107200.0, 4.0], [108800.0, 4.0], [110400.0, 2.0], [115200.0, 7.0], [120000.0, 4.0], [121600.0, 2.0], [124800.0, 2.0], [126400.0, 1.0], [128000.0, 2.0], [129600.0, 4.0], [131200.0, 2.0], [137600.0, 3.0], [140800.0, 2.0], [132100.0, 3.0], [135300.0, 10.0], [68700.0, 1.0], [70300.0, 1.0], [71900.0, 1.0], [75100.0, 13.0], [78300.0, 3.0], [79900.0, 5.0], [83100.0, 1.0], [84700.0, 2.0], [87900.0, 6.0], [89500.0, 1.0], [92700.0, 4.0], [95900.0, 3.0], [100700.0, 3.0], [102300.0, 1.0], [105500.0, 15.0], [107100.0, 2.0], [111900.0, 1.0], [113500.0, 2.0], [115100.0, 2.0], [118300.0, 2.0], [119900.0, 1.0], [121500.0, 2.0], [124700.0, 1.0], [127900.0, 5.0], [129500.0, 3.0], [133000.0, 8.0], [136200.0, 10.0], [139400.0, 8.0], [142600.0, 1.0], [133900.0, 6.0], [137100.0, 3.0], [140300.0, 6.0], [143500.0, 3.0], [37100.0, 11.0], [37900.0, 5.0], [41100.0, 3.0], [43500.0, 3.0], [45900.0, 1.0], [46700.0, 7.0], [47500.0, 1.0], [49100.0, 1.0], [52300.0, 1.0], [53100.0, 6.0], [55500.0, 12.0], [58700.0, 4.0], [59500.0, 8.0], [60300.0, 4.0], [63500.0, 1.0], [65100.0, 3.0], [67800.0, 3.0], [71000.0, 1.0], [72600.0, 3.0], [74200.0, 3.0], [77400.0, 1.0], [79000.0, 15.0], [88600.0, 2.0], [90200.0, 2.0], [91800.0, 2.0], [93400.0, 1.0], [95000.0, 1.0], [96600.0, 1.0], [99800.0, 4.0], [101400.0, 1.0], [103000.0, 3.0], [106200.0, 2.0], [111000.0, 3.0], [112600.0, 1.0], [114200.0, 1.0], [117400.0, 3.0], [119000.0, 3.0], [120600.0, 1.0], [122200.0, 2.0], [123800.0, 11.0], [125400.0, 4.0], [127000.0, 3.0], [128600.0, 3.0], [130200.0, 1.0], [131600.0, 3.0], [134800.0, 2.0], [141200.0, 2.0], [144400.0, 1.0], [132500.0, 2.0], [138900.0, 3.0], [142100.0, 1.0], [68500.0, 2.0], [71700.0, 2.0], [74900.0, 10.0], [79700.0, 3.0], [82900.0, 1.0], [90900.0, 1.0], [92500.0, 1.0], [95700.0, 2.0], [97300.0, 1.0], [106900.0, 3.0], [108500.0, 4.0], [110100.0, 1.0], [111700.0, 4.0], [113300.0, 5.0], [116500.0, 1.0], [121300.0, 2.0], [122900.0, 3.0], [124500.0, 1.0], [126100.0, 2.0], [127700.0, 1.0], [129300.0, 2.0], [130900.0, 1.0], [133400.0, 1.0], [136600.0, 8.0], [139800.0, 5.0], [143000.0, 4.0], [18900.0, 3.0], [19300.0, 2.0], [20100.0, 2.0], [25300.0, 1.0], [25700.0, 8.0], [26100.0, 2.0], [30100.0, 1.0], [30500.0, 15.0], [31700.0, 1.0], [32100.0, 1.0], [32500.0, 1.0], [131100.0, 1.0], [134300.0, 3.0], [137500.0, 4.0], [140700.0, 12.0], [37000.0, 4.0], [37800.0, 3.0], [41000.0, 3.0], [41800.0, 2.0], [43400.0, 1.0], [45800.0, 1.0], [46600.0, 6.0], [47400.0, 1.0], [49000.0, 4.0], [53000.0, 4.0], [55400.0, 5.0], [58600.0, 1.0], [59400.0, 4.0], [60200.0, 3.0], [65000.0, 1.0], [66000.0, 2.0], [70800.0, 1.0], [72400.0, 3.0], [74000.0, 1.0], [75600.0, 2.0], [78800.0, 2.0], [85200.0, 5.0], [86800.0, 1.0], [88400.0, 6.0], [93200.0, 7.0], [96400.0, 7.0], [99600.0, 6.0], [102800.0, 6.0], [106000.0, 6.0], [107600.0, 2.0], [109200.0, 10.0], [110800.0, 1.0], [112400.0, 5.0], [114000.0, 5.0], [115600.0, 1.0], [117200.0, 2.0], [118800.0, 2.0], [120400.0, 5.0], [122000.0, 3.0], [123600.0, 3.0], [125200.0, 9.0], [126800.0, 1.0], [128400.0, 8.0], [133600.0, 1.0], [136800.0, 4.0], [131300.0, 3.0], [134500.0, 1.0], [137700.0, 3.0], [140900.0, 5.0], [65900.0, 1.0], [70700.0, 1.0], [72300.0, 5.0], [73900.0, 1.0], [75500.0, 5.0], [83500.0, 1.0], [85100.0, 2.0], [88300.0, 10.0], [93100.0, 13.0], [96300.0, 9.0], [99500.0, 3.0], [102700.0, 1.0], [105900.0, 10.0], [109100.0, 9.0], [112300.0, 8.0], [113900.0, 5.0], [115500.0, 6.0], [117100.0, 2.0], [118700.0, 3.0], [120300.0, 4.0], [121900.0, 1.0], [123500.0, 5.0], [125100.0, 5.0], [126700.0, 2.0], [128300.0, 2.0], [129900.0, 3.0], [132200.0, 8.0], [135400.0, 5.0], [141800.0, 3.0], [133100.0, 6.0], [136300.0, 6.0], [139500.0, 14.0], [37300.0, 6.0], [38900.0, 1.0], [38100.0, 3.0], [41300.0, 4.0], [42100.0, 1.0], [46900.0, 4.0], [50100.0, 1.0], [50900.0, 1.0], [52500.0, 7.0], [53300.0, 2.0], [55700.0, 4.0], [58900.0, 3.0], [59700.0, 6.0], [60500.0, 4.0], [63700.0, 1.0], [64500.0, 2.0], [65300.0, 3.0], [68200.0, 1.0], [69800.0, 1.0], [71400.0, 2.0], [73000.0, 1.0], [74600.0, 8.0], [77800.0, 2.0], [79400.0, 12.0], [84200.0, 5.0], [93800.0, 2.0], [95400.0, 1.0], [98600.0, 2.0], [100200.0, 7.0], [101800.0, 3.0], [105000.0, 2.0], [106600.0, 1.0], [108200.0, 2.0], [109800.0, 1.0], [111400.0, 5.0], [114600.0, 2.0], [116200.0, 4.0], [117800.0, 1.0], [121000.0, 1.0], [122600.0, 3.0], [124200.0, 1.0], [125800.0, 1.0], [137200.0, 3.0], [140400.0, 8.0], [143600.0, 1.0], [131700.0, 4.0], [141300.0, 3.0], [65700.0, 3.0], [68900.0, 2.0], [70500.0, 2.0], [72100.0, 7.0], [73700.0, 1.0], [75300.0, 3.0], [78500.0, 6.0], [84900.0, 2.0], [88100.0, 7.0], [89700.0, 1.0], [92900.0, 13.0], [96100.0, 15.0], [97700.0, 3.0], [99300.0, 1.0], [100900.0, 1.0], [102500.0, 5.0], [105700.0, 3.0], [107300.0, 5.0], [108900.0, 6.0], [110500.0, 4.0], [112100.0, 5.0], [115300.0, 2.0], [120100.0, 6.0], [121700.0, 1.0], [123300.0, 4.0], [124900.0, 1.0], [126500.0, 3.0], [128100.0, 4.0], [129700.0, 1.0], [8300.0, 1.0], [8700.0, 1.0], [132600.0, 2.0], [135800.0, 2.0], [139000.0, 3.0], [142200.0, 3.0], [13300.0, 8.0], [13500.0, 3.0], [13700.0, 1.0], [13900.0, 4.0], [14100.0, 3.0], [14300.0, 3.0], [14700.0, 1.0], [14900.0, 1.0], [18200.0, 3.0], [19000.0, 4.0], [19400.0, 1.0], [20200.0, 1.0], [20600.0, 1.0], [21000.0, 10.0], [25000.0, 3.0], [25800.0, 6.0], [30200.0, 8.0], [30600.0, 2.0], [31800.0, 6.0], [32200.0, 3.0], [133500.0, 2.0], [136700.0, 11.0], [139900.0, 6.0], [37200.0, 6.0], [38000.0, 5.0], [39600.0, 1.0], [41200.0, 6.0], [42000.0, 4.0], [45200.0, 1.0], [46800.0, 5.0], [47600.0, 1.0], [49200.0, 1.0], [50000.0, 1.0], [50800.0, 1.0], [52400.0, 2.0], [55600.0, 13.0], [58800.0, 3.0], [59600.0, 8.0], [60400.0, 2.0], [62000.0, 1.0], [63600.0, 1.0], [65200.0, 7.0], [68000.0, 3.0], [69600.0, 7.0], [71200.0, 5.0], [72800.0, 1.0], [74400.0, 4.0], [77600.0, 2.0], [79200.0, 4.0], [84000.0, 2.0], [85600.0, 3.0], [90400.0, 1.0], [93600.0, 1.0], [96800.0, 2.0], [100000.0, 8.0], [106400.0, 4.0], [111200.0, 1.0], [112800.0, 3.0], [114400.0, 2.0], [116000.0, 2.0], [117600.0, 6.0], [120800.0, 3.0], [124000.0, 8.0], [127200.0, 1.0], [128800.0, 5.0], [130400.0, 5.0], [132800.0, 4.0], [136000.0, 7.0], [139200.0, 1.0], [142400.0, 1.0], [136900.0, 5.0], [140100.0, 3.0], [67900.0, 2.0], [69500.0, 2.0], [71100.0, 2.0], [72700.0, 2.0], [74300.0, 4.0], [77500.0, 4.0], [79100.0, 9.0], [83900.0, 2.0], [88700.0, 2.0], [90300.0, 4.0], [93500.0, 1.0], [95100.0, 1.0], [96700.0, 5.0], [99900.0, 7.0], [106300.0, 2.0], [111100.0, 2.0], [112700.0, 4.0], [114300.0, 4.0], [115900.0, 1.0], [117500.0, 3.0], [119100.0, 6.0], [120700.0, 1.0], [122300.0, 3.0], [123900.0, 9.0], [125500.0, 1.0], [127100.0, 7.0], [128700.0, 1.0], [130300.0, 6.0], [131400.0, 7.0], [134600.0, 6.0], [137800.0, 2.0], [141000.0, 5.0], [132300.0, 2.0], [138700.0, 1.0], [141900.0, 1.0], [38300.0, 1.0], [37500.0, 2.0], [40700.0, 1.0], [41500.0, 3.0], [45500.0, 1.0], [47100.0, 2.0], [51900.0, 6.0], [52700.0, 14.0], [53500.0, 3.0], [55100.0, 1.0], [55900.0, 2.0], [59100.0, 3.0], [59900.0, 3.0], [60700.0, 2.0], [64700.0, 2.0], [65500.0, 6.0], [67000.0, 1.0], [70200.0, 2.0], [73400.0, 1.0], [75000.0, 2.0], [76600.0, 1.0], [78200.0, 3.0], [84600.0, 1.0], [89400.0, 1.0], [92600.0, 5.0], [95800.0, 2.0], [99000.0, 1.0], [100600.0, 2.0], [105400.0, 2.0], [108600.0, 4.0], [111800.0, 4.0], [113400.0, 3.0], [115000.0, 1.0], [116600.0, 2.0], [118200.0, 4.0], [119800.0, 1.0], [121400.0, 4.0], [124600.0, 3.0], [127800.0, 1.0], [129400.0, 2.0], [131000.0, 1.0], [133200.0, 3.0], [136400.0, 3.0], [139600.0, 15.0], [142800.0, 2.0], [137300.0, 3.0], [140500.0, 2.0], [143700.0, 2.0], [70900.0, 1.0], [72500.0, 1.0], [77300.0, 2.0], [78900.0, 5.0], [86900.0, 1.0], [88500.0, 3.0], [90100.0, 1.0], [91700.0, 1.0], [93300.0, 8.0], [94900.0, 3.0], [96500.0, 2.0], [99700.0, 6.0], [102900.0, 7.0], [106100.0, 2.0], [109300.0, 6.0], [114100.0, 1.0], [118900.0, 10.0], [120500.0, 4.0], [122100.0, 4.0], [123700.0, 8.0], [125300.0, 1.0], [126900.0, 2.0], [128500.0, 6.0], [131800.0, 3.0], [138200.0, 1.0], [18300.0, 2.0], [19100.0, 5.0], [20700.0, 4.0], [25100.0, 2.0], [25900.0, 3.0], [30300.0, 19.0], [31900.0, 4.0], [32300.0, 1.0], [132700.0, 2.0], [135900.0, 1.0], [139100.0, 1.0], [142300.0, 2.0], [38200.0, 4.0], [37400.0, 1.0], [39800.0, 1.0], [40600.0, 3.0], [41400.0, 1.0], [42200.0, 1.0], [43800.0, 1.0], [47000.0, 5.0], [51000.0, 1.0], [52600.0, 11.0], [55800.0, 3.0], [59000.0, 2.0], [59800.0, 5.0], [60600.0, 5.0], [64600.0, 3.0], [65400.0, 11.0], [68400.0, 2.0], [71600.0, 1.0], [74800.0, 3.0], [76400.0, 1.0], [79600.0, 1.0], [84400.0, 8.0], [89200.0, 1.0], [94000.0, 2.0], [95600.0, 1.0], [102000.0, 2.0], [105200.0, 4.0], [106800.0, 3.0], [108400.0, 3.0], [111600.0, 12.0], [114800.0, 1.0], [116400.0, 1.0], [118000.0, 1.0], [124400.0, 3.0], [126000.0, 3.0], [127600.0, 3.0], [129200.0, 4.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 144800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 2321.0, "series": [{"data": [], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 20.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 2321.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 159.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 72.51388888888886, "minX": 1.6304625E12, "maxY": 468.42187500000006, "series": [{"data": [[1.63046262E12, 102.50490196078431], [1.63046256E12, 320.5043103448277], [1.6304625E12, 468.42187500000006]], "isOverall": false, "label": "addFavorite", "isController": false}, {"data": [[1.63046262E12, 90.0], [1.63046256E12, 290.509009009009], [1.6304625E12, 449.38383838383834]], "isOverall": false, "label": "listFavoriteByPage", "isController": false}, {"data": [[1.63046262E12, 88.01142857142861], [1.63046256E12, 285.01369863013707], [1.6304625E12, 445.8018867924528]], "isOverall": false, "label": "deleteFavorite", "isController": false}, {"data": [[1.63046262E12, 99.00507614213198], [1.63046256E12, 299.5245098039219], [1.6304625E12, 451.0303030303031]], "isOverall": false, "label": "deleteAllFavorite", "isController": false}, {"data": [[1.63046262E12, 72.51388888888886], [1.63046256E12, 274.0849420849423], [1.6304625E12, 451.25773195876286]], "isOverall": false, "label": "checkFavorite", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63046262E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1989.125, "minX": 1.0, "maxY": 144423.0, "series": [{"data": [[2.0, 143805.0], [3.0, 143774.0], [4.0, 144423.0], [6.0, 144228.0], [7.0, 142996.0], [8.0, 143662.0], [9.0, 142677.0], [10.0, 143063.0], [11.0, 143086.0], [12.0, 143048.0], [13.0, 142257.0], [14.0, 143557.0], [15.0, 142231.0], [16.0, 142204.0], [17.0, 143530.0], [18.0, 143068.0], [19.0, 142169.0], [20.0, 142857.0], [21.0, 142954.0], [23.0, 142877.5], [24.0, 143468.0], [25.0, 142381.0], [26.0, 141360.0], [27.0, 141349.0], [28.0, 142548.0], [29.0, 141984.0], [30.0, 142544.0], [31.0, 141207.0], [33.0, 141851.0], [32.0, 141168.0], [35.0, 141831.0], [34.0, 141129.0], [37.0, 141159.0], [36.0, 141868.0], [39.0, 141149.0], [38.0, 142415.0], [41.0, 142345.0], [40.0, 141148.0], [43.0, 141079.0], [42.0, 140985.0], [45.0, 141687.0], [44.0, 141692.0], [47.0, 140954.0], [46.0, 140940.0], [49.0, 141672.0], [48.0, 140917.0], [51.0, 141628.0], [50.0, 141677.0], [53.0, 141662.0], [52.0, 140887.0], [55.0, 141675.0], [54.0, 141586.0], [57.0, 141605.0], [56.0, 141578.0], [59.0, 141551.0], [58.0, 141563.0], [61.0, 140740.0], [60.0, 140811.0], [63.0, 140717.0], [62.0, 140778.0], [67.0, 140706.0], [66.0, 140754.0], [65.0, 140717.0], [64.0, 140717.0], [71.0, 140694.0], [70.0, 140698.0], [69.0, 140704.5], [75.0, 139975.0], [74.0, 140683.33333333334], [79.0, 140681.0], [78.0, 140738.0], [77.0, 139971.0], [76.0, 140677.0], [83.0, 141237.0], [82.0, 140640.0], [81.0, 139925.0], [80.0, 140668.0], [87.0, 139887.0], [86.0, 139919.0], [85.0, 140279.0], [91.0, 141180.0], [90.0, 141168.0], [89.0, 140611.0], [88.0, 139866.0], [95.0, 141095.0], [94.0, 139778.0], [93.0, 140541.0], [92.0, 139809.0], [99.0, 139781.0], [98.0, 141130.0], [97.0, 140487.0], [96.0, 139873.0], [103.0, 140450.0], [102.0, 139855.0], [101.0, 139741.0], [100.0, 141079.0], [107.0, 140494.0], [106.0, 140436.0], [105.0, 140522.0], [104.0, 141061.0], [111.0, 139695.0], [110.0, 141021.0], [109.0, 140492.0], [108.0, 139700.0], [115.0, 139673.0], [114.0, 140422.0], [113.0, 139735.5], [119.0, 140379.0], [118.0, 139670.0], [117.0, 140401.0], [116.0, 139663.0], [123.0, 140421.0], [122.0, 139632.0], [121.0, 139765.0], [120.0, 140965.0], [126.0, 139591.0], [125.0, 140333.0], [124.0, 139611.0], [135.0, 139501.0], [134.0, 140264.0], [133.0, 139521.0], [132.0, 139523.0], [131.0, 139544.0], [130.0, 140346.0], [129.0, 139940.0], [128.0, 140332.0], [143.0, 140158.0], [142.0, 140784.0], [141.0, 140162.0], [140.0, 140243.0], [139.0, 140281.0], [138.0, 139488.0], [137.0, 140225.0], [136.0, 139498.0], [151.0, 138928.0], [150.0, 139687.0], [149.0, 139699.0], [148.0, 140330.0], [147.0, 138947.0], [146.0, 139839.0], [144.0, 140745.0], [159.0, 139534.0], [158.0, 139608.0], [157.0, 139000.0], [156.0, 139672.0], [155.0, 139580.0], [154.0, 139664.0], [153.0, 139623.0], [152.0, 139640.0], [167.0, 139532.0], [166.0, 139472.0], [165.0, 139488.0], [164.0, 139558.0], [163.0, 139573.0], [162.0, 139560.0], [161.0, 140201.0], [160.0, 138840.0], [175.0, 139168.0], [174.0, 138380.0], [173.0, 139200.0], [172.0, 139484.0], [170.0, 139503.0], [169.0, 139520.0], [168.0, 139456.0], [183.0, 138955.0], [182.0, 138338.0], [181.0, 138754.0], [180.0, 138251.0], [179.0, 139670.0], [178.0, 138320.0], [177.0, 139012.0], [176.0, 139023.0], [190.0, 137449.0], [189.0, 136735.0], [188.0, 136785.0], [187.0, 137639.0], [186.0, 137639.0], [185.0, 136823.0], [184.0, 137621.0], [199.0, 136659.0], [198.0, 137406.0], [197.0, 136821.0], [196.0, 137418.0], [195.0, 137125.0], [193.0, 137210.66666666666], [207.0, 137335.0], [206.0, 137314.0], [205.0, 136608.0], [204.0, 137932.0], [203.0, 136617.0], [202.0, 137956.0], [201.0, 137958.0], [200.0, 137432.0], [215.0, 137855.0], [214.0, 137269.0], [213.0, 137349.0], [212.0, 137296.0], [211.0, 136721.0], [210.0, 136566.0], [209.0, 136686.0], [208.0, 136687.0], [223.0, 136373.0], [222.0, 137210.0], [221.0, 137126.0], [220.0, 137741.0], [219.0, 137791.0], [218.0, 136459.0], [217.0, 137823.0], [216.0, 137901.0], [231.0, 136369.0], [230.0, 136396.0], [229.0, 136400.0], [228.0, 136446.0], [227.0, 137068.0], [226.0, 136522.0], [225.0, 137709.0], [224.0, 136370.0], [239.0, 136933.0], [238.0, 136205.0], [237.0, 136213.0], [236.0, 137063.0], [235.0, 137541.0], [234.0, 137543.0], [233.0, 136223.0], [232.0, 136997.0], [247.0, 137516.0], [246.0, 136147.0], [245.0, 136161.0], [244.0, 136914.0], [243.0, 136194.0], [242.0, 136986.0], [241.0, 136196.0], [240.0, 136203.0], [255.0, 136801.0], [254.0, 136045.0], [253.0, 136849.0], [252.0, 136799.0], [251.0, 136970.0], [250.0, 137444.0], [249.0, 136114.0], [248.0, 136122.0], [270.0, 136279.0], [271.0, 136215.0], [269.0, 136311.0], [268.0, 137172.0], [267.0, 135803.0], [266.0, 136541.0], [265.0, 137175.0], [264.0, 136546.0], [263.0, 136635.0], [257.0, 136685.0], [256.0, 136772.0], [259.0, 136709.0], [258.0, 136750.0], [262.0, 136561.0], [261.0, 136623.0], [260.0, 136753.0], [286.0, 136069.0], [287.0, 135360.0], [285.0, 136077.0], [284.0, 136118.0], [283.0, 136110.0], [282.0, 135409.0], [281.0, 136118.0], [280.0, 136182.0], [279.0, 136181.0], [272.0, 136256.0], [278.0, 136340.0], [277.0, 136138.0], [276.0, 136363.25], [302.0, 135415.0], [303.0, 135423.0], [301.0, 135370.0], [300.0, 135393.0], [299.0, 134693.0], [298.0, 135895.0], [297.0, 136023.0], [296.0, 135908.0], [295.0, 135177.0], [289.0, 136049.0], [288.0, 135339.0], [291.0, 136075.0], [290.0, 135325.0], [294.0, 135362.0], [293.0, 135252.0], [292.0, 136015.0], [317.0, 134335.0], [318.0, 133546.0], [316.0, 134302.0], [307.0, 135331.0], [306.0, 135001.5], [304.0, 135359.0], [315.0, 133590.0], [314.0, 134311.0], [313.0, 134596.0], [312.0, 135451.0], [311.0, 134606.0], [310.0, 135386.0], [309.0, 134623.0], [308.0, 135408.0], [334.0, 133974.0], [335.0, 133930.0], [333.0, 134608.0], [332.0, 134600.0], [331.0, 133244.0], [330.0, 133962.0], [329.0, 133255.0], [328.0, 133350.0], [327.0, 134258.0], [321.0, 134876.0], [320.0, 134246.0], [323.0, 134856.0], [322.0, 134284.0], [326.0, 133474.0], [325.0, 134240.0], [324.0, 134274.0], [350.0, 132282.0], [351.0, 132270.0], [349.0, 133003.0], [348.0, 133669.0], [347.0, 133054.0], [346.0, 133048.0], [345.0, 133056.0], [344.0, 133118.0], [343.0, 133084.0], [337.0, 133912.0], [336.0, 133976.0], [339.0, 133154.0], [338.0, 133149.0], [342.0, 133110.0], [341.0, 133109.0], [340.0, 133963.0], [366.0, 132868.0], [367.0, 132109.0], [365.0, 132884.0], [364.0, 132360.0], [363.0, 133017.0], [362.0, 132962.0], [361.0, 132940.0], [360.0, 132934.0], [359.0, 132961.0], [353.0, 132259.0], [352.0, 132389.0], [355.0, 132234.0], [354.0, 132407.0], [358.0, 132208.0], [357.0, 132209.0], [356.0, 132952.0], [382.0, 132594.0], [383.0, 131713.0], [381.0, 131741.0], [380.0, 132637.0], [379.0, 131757.0], [378.0, 133127.0], [377.0, 132595.0], [376.0, 131789.0], [375.0, 131853.0], [369.0, 132299.0], [368.0, 132109.0], [371.0, 131891.0], [370.0, 132849.0], [374.0, 132626.0], [373.0, 133212.0], [372.0, 131895.0], [398.0, 131401.0], [399.0, 131412.0], [397.0, 131421.0], [396.0, 131439.0], [395.0, 131435.0], [394.0, 131465.0], [393.0, 132827.0], [392.0, 132248.0], [391.0, 133002.0], [385.0, 132455.0], [384.0, 133083.0], [387.0, 131695.0], [386.0, 132486.0], [390.0, 131684.0], [389.0, 132447.0], [388.0, 131684.0], [412.0, 130681.5], [415.0, 130394.0], [414.0, 130502.0], [413.0, 130443.0], [408.0, 130484.0], [407.0, 131296.0], [401.0, 131388.0], [400.0, 131397.0], [403.0, 132751.0], [402.0, 131375.0], [406.0, 130519.0], [405.0, 132141.0], [404.0, 132736.0], [430.0, 129661.0], [431.0, 129651.0], [429.0, 128886.0], [428.0, 128911.0], [427.0, 130283.0], [426.0, 128940.0], [425.0, 129983.0], [424.0, 130313.0], [423.0, 131483.0], [417.0, 131161.0], [416.0, 130376.0], [419.0, 130318.0], [418.0, 130336.0], [422.0, 130982.0], [421.0, 131038.0], [420.0, 130326.0], [445.0, 128598.0], [446.0, 129466.0], [444.0, 129935.0], [435.0, 129597.0], [434.0, 128822.0], [433.0, 129668.0], [432.0, 128847.0], [443.0, 129984.0], [442.0, 129486.0], [441.0, 128834.0], [440.0, 129575.0], [439.0, 128707.0], [438.0, 129521.0], [437.0, 129696.0], [436.0, 128969.0], [462.0, 128498.0], [463.0, 128591.0], [460.0, 129200.0], [451.0, 128516.0], [450.0, 129895.0], [449.0, 128695.0], [448.0, 129361.0], [459.0, 129770.0], [458.0, 129286.0], [457.0, 129802.0], [456.0, 128484.0], [455.0, 129272.0], [454.0, 129283.0], [453.0, 129882.0], [452.0, 128515.0], [478.0, 127160.0], [479.0, 127137.0], [477.0, 128534.0], [476.0, 128495.0], [475.0, 127968.0], [474.0, 127197.0], [473.0, 128575.0], [472.0, 127970.0], [471.0, 127982.0], [465.0, 128034.0], [464.0, 128050.0], [467.0, 128620.0], [466.0, 128638.0], [470.0, 127985.0], [469.0, 127988.0], [468.0, 127380.0], [494.0, 127169.0], [495.0, 127789.0], [493.0, 127857.0], [492.0, 127032.0], [491.0, 128425.0], [490.0, 127064.0], [489.0, 127205.0], [488.0, 128380.0], [487.0, 127077.0], [481.0, 128499.0], [480.0, 127311.0], [483.0, 127306.0], [482.0, 128489.0], [486.0, 128437.0], [485.0, 128459.0], [484.0, 128482.0], [510.0, 126623.0], [511.0, 126649.0], [509.0, 126143.0], [508.0, 126788.0], [507.0, 128115.0], [506.0, 128190.0], [505.0, 128186.0], [504.0, 126848.0], [503.0, 126994.0], [497.0, 126990.0], [496.0, 128375.0], [499.0, 127674.0], [498.0, 127661.0], [502.0, 127645.0], [501.0, 128247.0], [500.0, 128263.0], [540.0, 124840.0], [542.0, 126000.0], [538.0, 126023.0], [536.0, 125097.0], [534.0, 126236.0], [532.0, 126528.0], [530.0, 125211.0], [528.0, 125252.0], [526.0, 126055.0], [514.0, 127196.0], [512.0, 125986.0], [518.0, 125792.0], [516.0, 125958.0], [524.0, 125277.0], [522.0, 126667.0], [520.0, 126708.0], [572.0, 125260.0], [574.0, 123975.5], [570.0, 125275.0], [568.0, 123942.0], [566.0, 123959.0], [564.0, 124122.0], [562.0, 123990.0], [560.0, 124236.0], [558.0, 124894.0], [546.0, 124592.0], [544.0, 125407.0], [550.0, 124456.0], [548.0, 125918.0], [556.0, 124419.0], [554.0, 124339.0], [552.0, 125734.0], [604.0, 123476.0], [606.0, 123523.0], [602.0, 123760.0], [600.0, 124976.0], [598.0, 123669.0], [596.0, 125049.0], [594.0, 123728.0], [592.0, 123731.0], [590.0, 125105.0], [578.0, 125192.0], [576.0, 123986.0], [582.0, 123807.0], [580.0, 123816.0], [588.0, 123782.0], [586.0, 125161.0], [584.0, 124577.5], [636.0, 123465.0], [638.0, 122059.0], [634.0, 123507.0], [632.0, 122161.0], [630.0, 122178.0], [628.0, 122329.0], [626.0, 123745.0], [624.0, 123800.0], [622.0, 123823.0], [614.0, 124040.0], [612.0, 124069.0], [620.0, 123949.0], [618.0, 122632.0], [616.0, 122650.0], [668.0, 120514.0], [670.0, 120295.0], [666.0, 120466.0], [664.0, 121706.0], [662.0, 120415.0], [660.0, 120561.0], [658.0, 122077.0], [656.0, 120723.0], [654.0, 122119.0], [642.0, 123321.0], [640.0, 122034.0], [646.0, 121484.0], [644.0, 123320.0], [652.0, 121046.0], [650.0, 122248.0], [648.0, 121110.0], [700.0, 118904.0], [702.0, 120111.0], [698.0, 120144.0], [696.0, 120098.0], [694.0, 118804.0], [692.0, 120183.0], [690.0, 120197.0], [688.0, 120236.0], [686.0, 120379.0], [674.0, 121545.0], [672.0, 120421.0], [678.0, 120406.0], [676.0, 120426.0], [684.0, 121348.0], [682.0, 121451.0], [680.0, 121452.0], [732.0, 118787.0], [734.0, 117251.0], [730.0, 117632.0], [728.0, 118942.0], [726.0, 117754.0], [724.0, 117761.0], [722.0, 117769.0], [720.0, 119032.0], [718.0, 119057.0], [706.0, 118735.0], [704.0, 120091.0], [710.0, 117995.0], [708.0, 119871.0], [716.0, 117892.0], [714.0, 119152.0], [712.0, 117987.0], [762.0, 116051.0], [766.0, 115548.0], [760.0, 117492.0], [742.0, 118260.0], [740.0, 118297.0], [738.0, 118351.0], [736.0, 117136.0], [758.0, 117476.0], [756.0, 116294.0], [754.0, 117576.0], [752.0, 117609.0], [750.0, 117621.0], [748.0, 117660.0], [746.0, 117676.0], [744.0, 118268.0], [792.0, 114232.0], [796.0, 114072.0], [798.0, 115245.0], [794.0, 115274.0], [788.0, 115547.0], [786.0, 115527.0], [782.0, 114582.0], [770.0, 115481.0], [768.0, 116622.0], [774.0, 115294.0], [772.0, 115338.0], [780.0, 114698.0], [778.0, 114896.0], [776.0, 116270.0], [828.0, 112355.0], [830.0, 113484.0], [826.0, 113521.0], [824.0, 112366.0], [822.0, 112413.0], [820.0, 112428.0], [818.0, 112430.0], [816.0, 112736.0], [814.0, 113959.0], [802.0, 115210.0], [800.0, 114098.0], [806.0, 113944.0], [804.0, 114017.0], [812.0, 112784.0], [810.0, 113118.0], [808.0, 113884.0], [860.0, 111632.0], [862.0, 111672.0], [858.0, 112905.0], [856.0, 111739.0], [854.0, 111882.0], [852.0, 112973.0], [850.0, 113348.0], [848.0, 112161.0], [846.0, 112167.0], [832.0, 113454.0], [836.0, 112196.0], [834.0, 112283.0], [844.0, 112167.0], [842.0, 112232.0], [892.0, 111265.0], [880.0, 111482.0], [882.0, 111539.0], [884.0, 111509.0], [894.0, 111102.0], [890.0, 111426.0], [888.0, 111558.0], [864.0, 111850.0], [866.0, 111710.0], [868.0, 111649.0], [870.0, 111664.0], [878.0, 111638.0], [876.0, 111474.0], [874.0, 111687.0], [872.0, 111509.0], [886.0, 111561.0], [924.0, 109359.0], [912.0, 110448.0], [914.0, 110597.0], [916.0, 110114.0], [926.0, 109262.0], [922.0, 109250.0], [920.0, 109305.0], [896.0, 112289.0], [898.0, 111095.0], [900.0, 110814.0], [902.0, 110660.0], [910.0, 110524.0], [908.0, 110611.0], [906.0, 110630.0], [904.0, 110552.0], [918.0, 109837.0], [956.0, 108803.0], [944.0, 109201.0], [946.0, 108954.0], [948.0, 108936.0], [958.0, 108609.0], [954.0, 108893.0], [952.0, 109121.0], [930.0, 109146.0], [932.0, 109176.0], [934.0, 109267.0], [942.0, 109095.0], [940.0, 109106.0], [938.0, 109200.0], [936.0, 109217.0], [950.0, 108926.0], [988.0, 106966.0], [976.0, 107219.0], [978.0, 107292.0], [980.0, 107237.0], [990.0, 106843.0], [986.0, 107232.0], [984.0, 107321.0], [960.0, 108563.0], [962.0, 108506.0], [964.0, 108638.0], [966.0, 108451.0], [974.0, 107308.0], [972.0, 108292.0], [970.0, 108222.0], [968.0, 108326.0], [982.0, 107178.0], [1020.0, 105954.0], [1008.0, 106382.0], [1010.0, 106101.0], [1012.0, 106123.0], [1022.0, 105926.0], [1018.0, 106024.0], [1016.0, 106049.0], [992.0, 107621.0], [994.0, 106979.0], [996.0, 107417.0], [998.0, 106544.0], [1006.0, 106461.0], [1004.0, 106559.0], [1000.0, 106617.0], [1014.0, 105986.0], [1080.0, 104023.0], [1056.0, 105506.0], [1060.0, 105630.0], [1064.0, 105419.0], [1084.0, 103030.0], [1076.0, 105052.0], [1072.0, 104991.0], [1024.0, 105905.0], [1028.0, 105753.0], [1032.0, 105671.0], [1036.0, 105762.0], [1052.0, 105599.0], [1048.0, 105548.0], [1044.0, 105670.0], [1040.0, 105611.0], [1068.0, 105123.0], [1144.0, 100230.0], [1120.0, 100786.0], [1124.0, 100621.0], [1128.0, 100111.0], [1148.0, 100012.0], [1140.0, 100077.0], [1136.0, 100059.0], [1088.0, 102940.0], [1092.0, 102936.0], [1096.0, 102999.0], [1100.0, 102618.0], [1116.0, 101950.0], [1112.0, 102071.0], [1108.0, 102483.0], [1104.0, 102563.0], [1132.0, 100219.0], [1208.0, 96421.0], [1212.0, 96250.0], [1184.0, 97694.0], [1188.0, 96718.0], [1192.0, 96748.0], [1204.0, 96466.0], [1200.0, 96391.0], [1164.0, 99663.0], [1160.0, 99688.0], [1156.0, 99809.0], [1152.0, 99888.0], [1180.0, 98653.0], [1176.0, 99707.0], [1172.0, 99437.0], [1168.0, 99612.0], [1196.0, 96469.0], [1272.0, 93261.0], [1276.0, 94069.0], [1248.0, 96020.0], [1252.0, 96183.0], [1256.0, 95873.0], [1268.0, 94939.0], [1264.0, 94984.0], [1228.0, 96151.0], [1224.0, 96156.0], [1220.0, 96250.0], [1216.0, 96273.0], [1244.0, 96144.0], [1240.0, 96174.0], [1236.0, 96282.0], [1232.0, 96151.0], [1260.0, 95766.0], [1332.0, 92966.0], [1340.0, 93004.0], [1312.0, 93068.0], [1316.0, 92960.0], [1320.0, 93065.0], [1328.0, 92898.0], [1292.0, 93147.0], [1288.0, 93188.0], [1284.0, 93227.0], [1280.0, 93218.0], [1308.0, 93046.0], [1304.0, 93177.0], [1300.0, 93058.0], [1296.0, 93087.0], [1324.0, 92940.0], [1400.0, 88251.0], [1376.0, 89138.0], [1380.0, 88785.0], [1384.0, 88723.0], [1404.0, 88243.0], [1396.0, 88317.0], [1392.0, 88406.0], [1344.0, 92941.0], [1348.0, 92824.0], [1352.0, 92786.0], [1356.0, 92537.0], [1372.0, 90143.0], [1368.0, 90320.0], [1364.0, 90545.0], [1360.0, 91827.0], [1388.0, 88340.0], [1464.0, 84428.0], [1440.0, 86986.0], [1444.0, 85084.0], [1448.0, 85090.0], [1468.0, 84487.0], [1460.0, 84474.0], [1456.0, 84770.0], [1408.0, 88295.0], [1412.0, 88261.0], [1416.0, 88120.0], [1420.0, 88237.0], [1436.0, 87964.5], [1432.0, 88074.0], [1428.0, 87984.0], [1424.0, 88113.0], [1452.0, 84980.0], [1520.0, 79158.0], [1528.0, 79356.0], [1532.0, 79042.0], [1524.0, 79115.0], [1476.0, 84133.0], [1480.0, 84245.0], [1484.0, 83503.0], [1496.0, 79745.0], [1492.0, 79592.0], [1488.0, 82739.0], [1592.0, 77846.0], [1568.0, 78465.0], [1572.0, 78930.0], [1576.0, 78843.0], [1596.0, 77591.0], [1588.0, 77540.0], [1584.0, 78623.0], [1536.0, 79065.0], [1540.0, 79060.0], [1544.0, 78982.0], [1548.0, 79004.0], [1564.0, 78542.0], [1560.0, 78560.0], [1556.0, 78675.0], [1552.0, 79504.0], [1580.0, 78251.0], [1656.0, 74567.0], [1632.0, 74871.0], [1636.0, 74923.0], [1640.0, 74812.0], [1660.0, 74345.0], [1652.0, 74968.0], [1648.0, 74705.0], [1600.0, 76608.0], [1604.0, 75697.0], [1608.0, 75233.0], [1612.0, 75182.0], [1628.0, 75475.0], [1624.0, 75122.0], [1620.0, 75118.0], [1616.0, 75133.0], [1644.0, 75044.0], [1720.0, 71255.0], [1716.0, 71578.0], [1724.0, 71613.0], [1696.0, 72392.0], [1700.0, 72146.0], [1704.0, 72135.0], [1708.0, 72226.0], [1712.0, 72048.0], [1664.0, 74288.0], [1668.0, 74660.0], [1672.0, 74317.0], [1676.0, 73888.0], [1692.0, 72210.0], [1688.0, 72436.0], [1684.0, 72486.0], [1680.0, 72392.0], [1784.0, 65820.0], [1760.0, 69501.0], [1764.0, 68856.0], [1768.0, 68030.0], [1772.0, 68302.0], [1780.0, 66715.0], [1776.0, 67886.0], [1728.0, 71335.0], [1732.0, 71293.0], [1736.0, 70936.0], [1740.0, 70696.0], [1756.0, 69684.0], [1752.0, 69610.5], [1748.0, 69905.0], [1744.0, 70797.0], [1848.0, 60639.0], [1844.0, 60530.0], [1852.0, 60578.0], [1824.0, 65237.0], [1828.0, 64872.0], [1832.0, 64543.0], [1836.0, 63644.0], [1840.0, 60558.0], [1792.0, 65307.0], [1796.0, 65465.0], [1800.0, 65670.0], [1804.0, 65652.0], [1820.0, 65329.0], [1816.0, 65229.0], [1812.0, 65550.0], [1808.0, 65587.0], [1912.0, 58862.0], [1908.0, 59152.0], [1916.0, 56071.0], [1888.0, 59574.0], [1892.0, 59708.0], [1896.0, 59657.0], [1900.0, 59083.0], [1904.0, 58917.0], [1856.0, 60339.0], [1860.0, 60225.0], [1864.0, 60196.0], [1868.0, 59954.0], [1884.0, 59553.0], [1880.0, 59661.0], [1876.0, 59771.0], [1872.0, 59641.0], [1976.0, 53154.0], [1972.0, 52873.0], [1980.0, 52965.0], [1952.0, 55418.0], [1956.0, 55606.0], [1960.0, 53665.5], [1964.0, 53559.0], [1920.0, 55611.0], [1924.0, 55757.0], [1928.0, 55844.0], [1932.0, 55650.0], [1948.0, 55681.0], [1944.0, 55704.0], [1940.0, 55529.0], [1936.0, 55467.0], [2040.0, 50040.0], [2036.0, 50959.0], [2044.0, 49091.0], [2016.0, 52608.0], [2020.0, 52434.0], [2024.0, 52101.0], [2028.0, 52056.0], [2032.0, 51987.0], [1984.0, 52937.0], [1988.0, 52772.0], [1992.0, 52913.0], [1996.0, 52695.0], [2012.0, 52551.0], [2008.0, 52754.0], [2004.0, 52778.0], [2000.0, 52660.0], [2064.0, 46665.0], [2152.0, 40646.0], [2160.0, 38175.0], [2072.0, 46939.0], [2056.0, 47069.0], [2048.0, 47535.0], [2104.0, 43268.0], [2096.0, 44098.0], [2088.0, 45693.0], [2080.0, 46680.0], [2112.0, 41840.0], [2120.0, 41655.0], [2136.0, 41311.0], [2168.0, 37948.0], [2288.0, 30381.0], [2296.0, 30223.0], [2240.0, 31681.0], [2248.0, 30540.0], [2256.0, 30505.0], [2264.0, 30352.5], [2280.0, 30401.0], [2272.0, 30425.0], [2200.0, 37231.0], [2192.0, 37503.0], [2184.0, 37629.0], [2176.0, 37953.5], [2232.0, 31875.0], [2224.0, 32220.0], [2216.0, 37008.0], [2208.0, 37108.0], [2320.0, 25812.0], [2400.0, 14309.0], [2408.0, 14060.0], [2424.0, 13461.0], [2312.0, 25746.0], [2304.0, 26041.0], [2328.0, 25827.0], [2360.0, 20721.0], [2352.0, 20857.0], [2336.0, 25162.0], [2416.0, 13872.0], [2368.0, 19263.0], [2376.0, 19142.0], [2384.0, 18997.0], [2392.0, 18333.0], [2480.0, 7175.0], [2432.0, 13345.0], [2440.0, 3028.75], [2456.0, 7837.0], [2472.0, 7332.0], [2464.0, 7308.0], [2073.0, 46733.0], [2161.0, 38273.0], [2153.0, 40753.0], [2145.0, 41158.0], [2065.0, 46876.0], [2057.0, 47001.0], [2049.0, 47661.0], [2105.0, 43243.0], [2097.0, 43870.0], [2089.0, 45747.0], [2081.0, 46772.0], [2113.0, 41799.0], [2121.0, 41837.0], [2129.0, 41612.666666666664], [2137.0, 41264.0], [2169.0, 37986.0], [2297.0, 30222.0], [2249.0, 30533.0], [2257.0, 30548.0], [2265.0, 30307.0], [2289.0, 30394.0], [2281.0, 30405.0], [2273.0, 30369.0], [2201.0, 37227.0], [2185.0, 37571.0], [2177.0, 37708.0], [2233.0, 31872.0], [2225.0, 32218.0], [2217.0, 37042.0], [2209.0, 37110.0], [2321.0, 25929.0], [2329.0, 25618.0], [2313.0, 25739.0], [2305.0, 26008.0], [2361.0, 20227.0], [2353.0, 20802.0], [2337.0, 25155.0], [2401.0, 14399.0], [2409.0, 14215.0], [2417.0, 13964.0], [2369.0, 19258.0], [2377.0, 19187.0], [2385.0, 18970.0], [2393.0, 14815.0], [2425.0, 13387.0], [2433.0, 13301.0], [2441.0, 8698.0], [2449.0, 8075.0], [2457.0, 7883.0], [2473.0, 7225.0], [2465.0, 7368.0], [1081.0, 104015.0], [1057.0, 105513.0], [1061.0, 105464.0], [1065.0, 105259.0], [1077.0, 104940.0], [1073.0, 105247.0], [1037.0, 105651.0], [1033.0, 105814.0], [1029.0, 105846.0], [1025.0, 105948.0], [1053.0, 105824.0], [1045.0, 105548.0], [1041.0, 105595.0], [1069.0, 105076.0], [1145.0, 99952.0], [1121.0, 100680.0], [1125.0, 101435.0], [1129.0, 100232.0], [1149.0, 99919.0], [1141.0, 100092.0], [1137.0, 100155.0], [1089.0, 102924.0], [1097.0, 102863.0], [1101.0, 102579.0], [1117.0, 101822.0], [1113.0, 102050.0], [1109.0, 102462.0], [1105.0, 102590.0], [1133.0, 100207.0], [1209.0, 96391.0], [1185.0, 97751.0], [1189.0, 96729.0], [1193.0, 97374.0], [1213.0, 96239.0], [1205.0, 96348.0], [1201.0, 96722.0], [1153.0, 99944.0], [1157.0, 99826.0], [1161.0, 99733.0], [1165.0, 99752.0], [1181.0, 99014.0], [1177.0, 99676.0], [1173.0, 99407.0], [1169.0, 99541.0], [1197.0, 96537.0], [1273.0, 93941.0], [1249.0, 96145.0], [1253.0, 95988.0], [1257.0, 96014.0], [1277.0, 93263.0], [1269.0, 93694.0], [1265.0, 95163.0], [1217.0, 96236.0], [1221.0, 96180.0], [1225.0, 96202.0], [1229.0, 96194.0], [1245.0, 96135.0], [1241.0, 96220.0], [1237.0, 96081.0], [1233.0, 96176.0], [1261.0, 95971.0], [1337.0, 93131.0], [1313.0, 93080.0], [1317.0, 93074.0], [1321.0, 93026.0], [1341.0, 92975.0], [1333.0, 93567.0], [1329.0, 92950.0], [1309.0, 93007.0], [1281.0, 93356.0], [1285.0, 93216.0], [1289.0, 93186.0], [1293.0, 93457.0], [1305.0, 93018.0], [1301.0, 93081.0], [1297.0, 93101.0], [1401.0, 88314.0], [1377.0, 89416.0], [1381.0, 88665.0], [1385.0, 88387.0], [1405.0, 88337.0], [1397.0, 88282.0], [1393.0, 88476.0], [1345.0, 92754.0], [1349.0, 93048.0], [1353.0, 93311.0], [1357.0, 92725.0], [1373.0, 89676.0], [1369.0, 90361.0], [1365.0, 90321.0], [1361.0, 91744.0], [1389.0, 88320.0], [1465.0, 84343.0], [1441.0, 85657.0], [1445.0, 85213.0], [1449.0, 85290.0], [1469.0, 84487.0], [1461.0, 84491.0], [1457.0, 84494.0], [1409.0, 88275.0], [1413.0, 88233.0], [1417.0, 88277.0], [1421.0, 88143.0], [1437.0, 88011.0], [1433.0, 88082.0], [1429.0, 87966.0], [1425.0, 88031.0], [1453.0, 84781.0], [1521.0, 79246.0], [1529.0, 79383.0], [1505.0, 79493.5], [1533.0, 79133.0], [1525.0, 79207.0], [1473.0, 84405.0], [1477.0, 84132.0], [1481.0, 84024.0], [1485.0, 84025.0], [1497.0, 79574.0], [1493.0, 79511.0], [1489.0, 82905.0], [1509.0, 79470.5], [1593.0, 77648.0], [1569.0, 78447.0], [1573.0, 78383.0], [1577.0, 79132.0], [1597.0, 77612.0], [1589.0, 77724.0], [1585.0, 78612.0], [1537.0, 79069.0], [1541.0, 79358.0], [1545.0, 79045.0], [1549.0, 79048.0], [1565.0, 78983.0], [1561.0, 79097.0], [1557.0, 78599.0], [1553.0, 79258.0], [1581.0, 78644.0], [1657.0, 74362.0], [1633.0, 74716.0], [1637.0, 74784.0], [1641.0, 74622.0], [1661.0, 74481.0], [1653.0, 74412.0], [1649.0, 74930.0], [1601.0, 76485.0], [1605.0, 75483.0], [1609.0, 75178.0], [1613.0, 75172.0], [1629.0, 75276.0], [1625.0, 75534.0], [1621.0, 75122.0], [1617.0, 75336.0], [1645.0, 74516.0], [1721.0, 71402.0], [1725.0, 71198.0], [1697.0, 72802.0], [1701.0, 72191.0], [1705.0, 72126.0], [1709.0, 72038.0], [1717.0, 71587.0], [1713.0, 71958.0], [1665.0, 74936.0], [1669.0, 74283.0], [1673.0, 73757.0], [1677.0, 73059.0], [1693.0, 72217.0], [1689.0, 72230.0], [1685.0, 72262.0], [1681.0, 72772.0], [1785.0, 66012.0], [1761.0, 68926.0], [1765.0, 68569.0], [1769.0, 68222.0], [1773.0, 68041.0], [1781.0, 65941.0], [1777.0, 67964.0], [1729.0, 71741.0], [1733.0, 70652.0], [1737.0, 70384.0], [1741.0, 70533.0], [1757.0, 69738.0], [1753.0, 69768.0], [1749.0, 69622.0], [1745.0, 70469.0], [1849.0, 60654.0], [1853.0, 60218.0], [1825.0, 65591.0], [1829.0, 64705.0], [1833.0, 64646.0], [1837.0, 63566.0], [1845.0, 60423.0], [1841.0, 60508.0], [1793.0, 65706.0], [1797.0, 65683.0], [1801.0, 65422.0], [1805.0, 65650.0], [1821.0, 65201.0], [1817.0, 65062.0], [1813.0, 65305.0], [1809.0, 65625.0], [1913.0, 58741.0], [1917.0, 55665.0], [1889.0, 59557.0], [1893.0, 59524.0], [1897.0, 59457.0], [1901.0, 59132.0], [1909.0, 58627.0], [1905.0, 58955.0], [1857.0, 59790.0], [1861.0, 60228.0], [1865.0, 60156.0], [1869.0, 59860.0], [1885.0, 59348.0], [1881.0, 59420.0], [1877.0, 59585.0], [1873.0, 59619.0], [1977.0, 53087.0], [1981.0, 53031.0], [1953.0, 55579.0], [1957.0, 55512.0], [1961.0, 53580.0], [1965.0, 53617.0], [1973.0, 53063.0], [1969.0, 53233.5], [1921.0, 55901.0], [1925.0, 55615.0], [1929.0, 55563.0], [1933.0, 55544.0], [1949.0, 55452.0], [1945.0, 55472.0], [1941.0, 55834.0], [2041.0, 49216.0], [2045.0, 49003.0], [2017.0, 52625.0], [2021.0, 52423.0], [2025.0, 52023.0], [2029.0, 52034.0], [2037.0, 51000.0], [2033.0, 51993.0], [1985.0, 52747.0], [1989.0, 52722.0], [1993.0, 52905.0], [1997.0, 52707.0], [2009.0, 52717.0], [2005.0, 52760.0], [2001.0, 52592.0], [2146.0, 41126.0], [2170.0, 38071.0], [2162.0, 38143.0], [2154.0, 39803.0], [2074.0, 46768.0], [2066.0, 46850.0], [2058.0, 47160.0], [2050.0, 47405.0], [2106.0, 42269.0], [2098.0, 43565.0], [2082.0, 46569.0], [2114.0, 41734.0], [2122.0, 41742.0], [2130.0, 41625.0], [2138.0, 41289.0], [2290.0, 30460.0], [2298.0, 30226.0], [2242.0, 30555.0], [2250.0, 30507.0], [2258.0, 30505.0], [2266.0, 30286.0], [2274.0, 30396.0], [2202.0, 37115.0], [2194.0, 37323.5], [2186.0, 37400.0], [2178.0, 37817.0], [2234.0, 31857.0], [2226.0, 32057.0], [2218.0, 36846.0], [2210.0, 37060.0], [2314.0, 25670.0], [2330.0, 25736.0], [2306.0, 25923.0], [2362.0, 20146.0], [2354.0, 20769.0], [2338.0, 25067.0], [2402.0, 14217.0], [2410.0, 13992.0], [2418.0, 13721.0], [2370.0, 19243.0], [2386.0, 19114.0], [2394.0, 14905.0], [2426.0, 13441.0], [2434.0, 13281.0], [2442.0, 8343.0], [2450.0, 8022.0], [2458.0, 7714.0], [2474.0, 7189.0], [2466.0, 7385.0], [2075.0, 46748.0], [2163.0, 38234.0], [2155.0, 39663.0], [2147.0, 41120.0], [2067.0, 46788.0], [2059.0, 46997.0], [2051.0, 47369.0], [2107.0, 42157.0], [2099.0, 43503.0], [2083.0, 46459.0], [2115.0, 41613.0], [2123.0, 41560.0], [2131.0, 41625.0], [2139.0, 41280.0], [2291.0, 30305.0], [2283.0, 30381.0], [2243.0, 30585.0], [2259.0, 30513.0], [2267.0, 30290.0], [2299.0, 30246.0], [2275.0, 30403.0], [2203.0, 37110.0], [2195.0, 37179.0], [2187.0, 37341.0], [2179.0, 37729.0], [2235.0, 31850.0], [2227.0, 31979.0], [2219.0, 36810.0], [2211.0, 36981.0], [2323.0, 25747.0], [2331.0, 25279.0], [2315.0, 25695.0], [2363.0, 20039.0], [2355.0, 20856.0], [2339.0, 25060.0], [2403.0, 14260.0], [2411.0, 14044.0], [2419.0, 13553.0], [2371.0, 19334.0], [2379.0, 19060.0], [2387.0, 18875.0], [2395.0, 14742.0], [2427.0, 13514.0], [2443.0, 8249.0], [2435.0, 13346.0], [2451.0, 7941.0], [2459.0, 7793.0], [2475.0, 7251.0], [2467.0, 7235.0], [541.0, 124647.0], [543.0, 124605.0], [539.0, 125472.0], [537.0, 125591.0], [535.0, 126496.0], [531.0, 125212.0], [529.0, 126597.0], [527.0, 126634.0], [515.0, 125809.0], [513.0, 127183.0], [519.0, 126125.0], [517.0, 127149.0], [525.0, 125438.0], [523.0, 125444.0], [521.0, 126668.0], [571.0, 123890.0], [575.0, 125241.0], [569.0, 125283.0], [551.0, 124446.0], [549.0, 124632.0], [547.0, 125935.0], [545.0, 125977.0], [567.0, 125272.0], [565.0, 123968.0], [563.0, 123993.0], [561.0, 125383.0], [559.0, 124023.0], [557.0, 124050.0], [555.0, 124301.0], [553.0, 125739.0], [605.0, 123430.0], [607.0, 123583.0], [603.0, 123485.0], [601.0, 123617.0], [599.0, 123859.0], [597.0, 123686.0], [595.0, 125074.0], [593.0, 125087.0], [591.0, 123728.0], [577.0, 123968.0], [581.0, 123804.0], [579.0, 125180.0], [589.0, 123774.0], [587.0, 123795.0], [585.0, 123881.0], [637.0, 123445.0], [639.0, 123377.0], [635.0, 122298.0], [633.0, 123483.0], [631.0, 122177.0], [629.0, 123570.0], [627.0, 122380.0], [625.0, 122729.0], [623.0, 123818.0], [611.0, 122981.5], [609.0, 124178.0], [615.0, 124017.0], [613.0, 124001.0], [621.0, 123899.0], [619.0, 122937.0], [617.0, 123950.0], [669.0, 120594.0], [671.0, 120248.0], [667.0, 121686.0], [665.0, 121694.0], [663.0, 120622.0], [661.0, 120564.0], [659.0, 120859.0], [657.0, 120872.0], [655.0, 120911.0], [643.0, 121952.0], [641.0, 123315.0], [647.0, 122699.0], [645.0, 122722.0], [653.0, 120985.0], [651.0, 120843.0], [649.0, 122309.0], [701.0, 120086.0], [703.0, 118819.0], [699.0, 118965.0], [697.0, 119186.0], [695.0, 118943.0], [693.0, 120179.0], [691.0, 118908.0], [689.0, 119121.0], [687.0, 119131.0], [675.0, 120352.0], [673.0, 121530.0], [679.0, 120177.0], [677.0, 120342.0], [685.0, 120393.0], [683.0, 121300.0], [681.0, 121461.0], [733.0, 117564.0], [735.0, 117143.0], [731.0, 118752.0], [729.0, 118935.0], [727.0, 118932.0], [725.0, 118949.0], [723.0, 118971.0], [721.0, 118923.0], [719.0, 119070.0], [707.0, 119903.0], [705.0, 120071.0], [711.0, 119192.0], [709.0, 118692.0], [717.0, 117962.0], [715.0, 118012.0], [713.0, 119193.0], [765.0, 115520.5], [767.0, 116635.0], [763.0, 115642.0], [761.0, 116287.0], [759.0, 117496.0], [757.0, 116298.0], [755.0, 116387.0], [753.0, 116492.0], [751.0, 116508.0], [739.0, 117091.0], [737.0, 118351.0], [743.0, 118283.0], [741.0, 117295.0], [749.0, 117595.0], [747.0, 117618.0], [745.0, 117078.0], [797.0, 115214.0], [799.0, 114045.0], [795.0, 115242.0], [793.0, 114104.0], [791.0, 114386.0], [789.0, 114319.0], [787.0, 115554.0], [785.0, 114378.5], [783.0, 114372.0], [771.0, 115462.0], [769.0, 115354.0], [775.0, 115226.0], [773.0, 115180.0], [781.0, 114642.0], [779.0, 115990.0], [777.0, 116039.0], [829.0, 113508.0], [831.0, 112315.0], [827.0, 112355.0], [825.0, 112367.0], [823.0, 112384.0], [821.0, 112374.0], [819.0, 112333.0], [817.0, 112727.0], [815.0, 113937.0], [803.0, 113997.0], [801.0, 114017.0], [807.0, 115072.0], [805.0, 115166.0], [813.0, 113979.0], [811.0, 112887.0], [809.0, 113826.0], [861.0, 112851.0], [863.0, 112855.0], [859.0, 111924.0], [857.0, 111675.0], [855.0, 111875.0], [853.0, 111757.0], [851.0, 111853.0], [849.0, 112170.0], [847.0, 113377.0], [835.0, 113441.0], [833.0, 112246.0], [839.0, 112321.0], [837.0, 112286.0], [845.0, 113393.0], [843.0, 113377.0], [841.0, 112814.5], [893.0, 111386.0], [895.0, 111134.0], [881.0, 112638.0], [883.0, 111508.0], [885.0, 111527.0], [891.0, 112434.0], [889.0, 111434.0], [879.0, 111491.0], [865.0, 111721.0], [867.0, 112775.0], [869.0, 111668.0], [871.0, 111629.0], [877.0, 111660.0], [875.0, 111617.0], [873.0, 111600.0], [887.0, 111502.0], [925.0, 109266.0], [927.0, 109304.0], [913.0, 110490.0], [915.0, 109970.0], [917.0, 109901.0], [923.0, 109337.0], [921.0, 109252.0], [911.0, 110519.0], [897.0, 111044.0], [899.0, 111085.0], [901.0, 110624.0], [903.0, 110647.0], [909.0, 110655.0], [907.0, 110622.0], [905.0, 110605.0], [919.0, 109905.0], [957.0, 108634.0], [959.0, 108669.0], [945.0, 108956.0], [947.0, 108978.0], [949.0, 108893.0], [955.0, 109010.0], [953.0, 108843.0], [943.0, 109165.0], [929.0, 109249.0], [931.0, 109215.0], [933.0, 109305.0], [935.0, 109226.0], [941.0, 109159.0], [939.0, 109187.0], [937.0, 109109.0], [951.0, 108904.0], [989.0, 106870.0], [991.0, 106758.0], [977.0, 107374.0], [979.0, 107197.0], [981.0, 107680.0], [987.0, 106940.0], [985.0, 107324.0], [975.0, 107302.0], [961.0, 108516.0], [963.0, 108575.0], [965.0, 108389.0], [967.0, 108421.0], [973.0, 108167.0], [971.0, 108332.0], [969.0, 108414.0], [983.0, 107452.0], [1021.0, 105941.0], [1023.0, 105940.0], [1009.0, 106266.0], [1011.0, 106098.0], [1013.0, 106249.0], [1019.0, 106075.0], [1017.0, 106026.0], [1007.0, 106366.0], [993.0, 106812.0], [995.0, 106720.0], [997.0, 106700.0], [999.0, 106486.0], [1005.0, 106442.0], [1003.0, 106535.5], [1001.0, 106476.0], [1015.0, 105995.0], [1082.0, 104075.0], [1086.0, 103029.5], [1062.0, 105549.0], [1066.0, 105104.0], [1078.0, 104076.0], [1074.0, 105211.0], [1054.0, 105501.0], [1026.0, 105919.0], [1030.0, 106014.0], [1034.0, 105756.0], [1038.0, 105617.0], [1050.0, 105563.0], [1046.0, 105589.0], [1042.0, 105688.0], [1070.0, 104984.0], [1146.0, 99966.0], [1150.0, 99903.0], [1122.0, 100751.0], [1126.0, 100203.0], [1130.0, 100107.0], [1142.0, 100031.0], [1138.0, 100318.0], [1118.0, 101822.0], [1090.0, 102907.0], [1094.0, 102866.5], [1098.0, 102794.0], [1102.0, 102814.0], [1114.0, 101907.0], [1110.0, 102398.0], [1106.0, 102583.0], [1134.0, 100257.0], [1202.0, 96472.0], [1214.0, 96268.0], [1186.0, 97720.0], [1190.0, 96881.0], [1194.0, 96416.0], [1206.0, 96473.0], [1166.0, 99711.0], [1162.0, 99594.0], [1158.0, 99703.0], [1154.0, 100097.0], [1182.0, 98550.0], [1178.0, 98665.0], [1174.0, 99416.0], [1170.0, 99546.0], [1198.0, 96518.0], [1266.0, 95012.0], [1278.0, 93286.0], [1250.0, 96191.0], [1254.0, 95981.0], [1258.0, 95854.0], [1274.0, 93283.0], [1230.0, 96135.0], [1226.0, 96281.0], [1222.0, 96344.0], [1218.0, 96258.0], [1246.0, 96076.0], [1242.0, 96217.0], [1238.0, 96203.0], [1234.0, 96159.0], [1262.0, 95621.0], [1334.0, 92888.0], [1330.0, 93010.0], [1342.0, 92820.0], [1314.0, 93098.0], [1318.0, 92975.0], [1322.0, 93057.0], [1338.0, 92825.0], [1294.0, 93119.0], [1290.0, 93170.0], [1286.0, 93349.0], [1310.0, 93358.0], [1302.0, 93030.0], [1298.0, 93075.0], [1326.0, 92972.5], [1402.0, 88352.0], [1406.0, 88227.0], [1378.0, 89269.0], [1382.0, 88517.0], [1386.0, 88472.0], [1398.0, 88581.0], [1394.0, 88299.0], [1374.0, 89564.0], [1346.0, 92895.0], [1350.0, 92671.0], [1354.0, 92656.0], [1358.0, 92653.0], [1370.0, 90204.0], [1366.0, 90351.0], [1362.0, 91864.0], [1390.0, 88324.0], [1466.0, 84274.0], [1470.0, 84265.0], [1442.0, 85247.0], [1446.0, 85005.0], [1450.0, 84986.0], [1462.0, 85150.0], [1458.0, 85125.0], [1438.0, 87957.0], [1410.0, 88242.0], [1414.0, 88194.0], [1418.0, 88410.0], [1422.0, 88138.0], [1434.0, 87978.0], [1430.0, 88013.0], [1426.0, 88133.0], [1454.0, 85260.0], [1522.0, 79144.0], [1534.0, 79122.0], [1530.0, 79316.0], [1526.0, 79195.0], [1498.0, 79941.0], [1474.0, 84196.0], [1478.0, 84235.0], [1482.0, 83970.0], [1486.0, 83249.0], [1494.0, 79467.0], [1490.0, 80081.0], [1518.0, 79639.6923076923], [1594.0, 77455.0], [1598.0, 77359.0], [1570.0, 79050.0], [1574.0, 78304.0], [1578.0, 78488.0], [1590.0, 77500.0], [1586.0, 78211.0], [1566.0, 78510.0], [1538.0, 79007.0], [1542.0, 79098.0], [1550.0, 79378.0], [1562.0, 79106.0], [1558.0, 78669.0], [1554.0, 78632.0], [1582.0, 78444.0], [1658.0, 74330.0], [1662.0, 74467.0], [1634.0, 74682.0], [1638.0, 74834.0], [1654.0, 74956.0], [1650.0, 74474.0], [1630.0, 75539.0], [1602.0, 75319.0], [1606.0, 75271.0], [1610.0, 75388.0], [1614.0, 75537.0], [1622.0, 75111.0], [1618.0, 75673.0], [1642.0, 74959.0], [1726.0, 71564.0], [1698.0, 72161.0], [1702.0, 72515.0], [1706.0, 72052.0], [1710.0, 72733.0], [1722.0, 71222.0], [1718.0, 71781.0], [1714.0, 72016.0], [1666.0, 74666.0], [1670.0, 74086.0], [1674.0, 73653.0], [1678.0, 73429.0], [1694.0, 72242.0], [1690.0, 72276.0], [1686.0, 72652.0], [1682.0, 72354.0], [1782.0, 66046.0], [1778.0, 67878.0], [1786.0, 65357.0], [1762.0, 68562.0], [1766.0, 68728.0], [1770.0, 68096.0], [1774.0, 67903.0], [1790.0, 65473.666666666664], [1730.0, 71500.0], [1734.0, 71092.0], [1738.0, 70204.0], [1742.0, 70638.0], [1758.0, 69640.0], [1754.0, 69708.0], [1750.0, 69744.0], [1746.0, 69595.0], [1854.0, 60605.0], [1826.0, 64683.0], [1830.0, 64542.0], [1834.0, 64642.0], [1838.0, 62029.0], [1850.0, 60662.0], [1846.0, 60301.0], [1842.0, 60363.0], [1794.0, 65464.0], [1798.0, 65439.0], [1802.0, 65429.0], [1806.0, 65585.0], [1814.0, 65289.0], [1810.0, 65749.0], [1918.0, 55585.0], [1890.0, 59301.0], [1894.0, 59470.0], [1898.0, 59444.0], [1902.0, 59026.0], [1914.0, 58702.0], [1910.0, 58776.0], [1906.0, 58724.0], [1858.0, 59780.0], [1862.0, 59927.0], [1866.0, 59706.0], [1870.0, 59839.0], [1886.0, 59344.0], [1882.0, 59586.0], [1878.0, 59999.0], [1874.0, 59866.0], [1982.0, 52954.0], [1954.0, 55565.0], [1958.0, 55172.0], [1962.0, 53767.0], [1966.0, 53395.0], [1978.0, 52886.0], [1974.0, 53119.0], [1922.0, 55702.0], [1926.0, 55598.0], [1930.0, 55651.0], [1934.0, 55618.0], [1950.0, 55552.0], [1946.0, 55854.0], [1942.0, 55593.0], [1938.0, 55430.5], [2046.0, 49068.0], [2022.0, 52151.0], [2026.0, 51921.0], [2030.0, 51997.0], [2042.0, 49140.0], [2038.0, 50802.0], [2034.0, 52030.0], [1986.0, 52785.0], [1990.0, 52692.0], [1994.0, 52823.0], [1998.0, 52630.0], [2014.0, 52643.0], [2010.0, 52526.0], [2006.0, 52565.0], [2002.0, 52573.0], [2068.0, 46840.0], [2060.0, 46730.0], [2156.0, 38932.0], [2164.0, 38303.0], [2148.0, 41010.0], [2052.0, 47101.0], [2108.0, 42020.0], [2092.0, 45646.666666666664], [2084.0, 46566.0], [2116.0, 41605.0], [2132.0, 41596.0], [2140.0, 41358.0], [2172.0, 37925.0], [2284.0, 30345.0], [2292.0, 30324.0], [2252.0, 30491.5], [2300.0, 30146.0], [2260.0, 30433.0], [2276.0, 30333.0], [2204.0, 37144.0], [2196.0, 37189.0], [2188.0, 37189.0], [2180.0, 37677.0], [2236.0, 31809.0], [2228.0, 32134.0], [2220.0, 32825.0], [2212.0, 36959.0], [2324.0, 25740.0], [2428.0, 13463.0], [2316.0, 25935.0], [2308.0, 25917.5], [2364.0, 20111.0], [2356.0, 20866.0], [2340.0, 25046.0], [2404.0, 14136.0], [2412.0, 14042.0], [2420.0, 13450.0], [2372.0, 19262.0], [2380.0, 19043.0], [2388.0, 18252.0], [2396.0, 14482.0], [2436.0, 13371.0], [2476.0, 7244.0], [2444.0, 8253.0], [2452.0, 8086.0], [2460.0, 7746.0], [2077.0, 46656.0], [2165.0, 13094.666666666666], [2157.0, 38280.0], [2149.0, 41067.0], [2069.0, 46827.0], [2061.0, 47018.0], [2053.0, 47074.0], [2109.0, 42039.0], [2101.0, 43488.5], [2093.0, 45235.0], [2085.0, 46508.0], [2117.0, 41767.0], [2125.0, 41703.0], [2133.0, 41292.0], [2141.0, 41226.0], [2173.0, 37856.0], [2293.0, 30471.0], [2285.0, 30323.0], [2245.0, 30504.0], [2253.0, 30446.0], [2301.0, 26828.0], [2277.0, 30400.0], [2205.0, 37146.0], [2197.0, 37381.0], [2189.0, 37330.0], [2181.0, 37734.0], [2237.0, 31880.0], [2229.0, 31936.0], [2221.0, 32573.0], [2213.0, 37174.0], [2405.0, 14160.0], [2333.0, 25279.0], [2325.0, 25794.0], [2317.0, 25647.0], [2365.0, 19686.0], [2357.0, 20770.0], [2413.0, 13914.0], [2421.0, 13521.0], [2373.0, 19401.0], [2381.0, 18955.0], [2389.0, 18340.0], [2397.0, 14291.0], [2429.0, 13365.0], [2445.0, 4683.0], [2437.0, 13342.0], [2453.0, 7873.0], [2461.0, 7691.0], [2477.0, 7175.0], [2469.0, 7341.0], [1083.0, 103052.0], [1075.0, 104951.0], [1087.0, 102989.0], [1059.0, 105525.5], [1063.0, 105608.0], [1067.0, 105260.0], [1079.0, 104014.0], [1035.0, 105678.0], [1031.0, 105819.0], [1027.0, 105942.0], [1055.0, 105509.0], [1051.0, 105550.0], [1047.0, 105588.0], [1043.0, 105624.0], [1071.0, 105182.0], [1147.0, 100031.0], [1151.0, 99961.0], [1123.0, 100724.0], [1127.0, 100204.0], [1131.0, 100364.0], [1143.0, 99972.0], [1139.0, 100173.0], [1119.0, 100984.0], [1095.0, 102886.0], [1091.0, 102886.0], [1099.0, 102625.0], [1103.0, 102626.0], [1115.0, 101828.0], [1111.0, 102510.0], [1107.0, 102670.0], [1135.0, 100332.0], [1211.0, 96278.0], [1215.0, 96226.0], [1187.0, 96722.0], [1191.0, 96822.0], [1195.0, 96604.0], [1207.0, 96347.0], [1203.0, 96340.0], [1183.0, 97726.0], [1155.0, 100081.0], [1159.0, 99859.0], [1163.0, 99636.0], [1167.0, 99601.0], [1179.0, 98700.0], [1175.0, 99394.0], [1171.0, 99714.0], [1199.0, 96490.0], [1275.0, 93308.0], [1279.0, 93343.0], [1251.0, 96041.0], [1255.0, 96069.0], [1259.0, 95783.0], [1271.0, 93807.0], [1267.0, 94916.0], [1247.0, 96055.0], [1219.0, 96319.0], [1223.0, 96245.0], [1227.0, 96179.0], [1231.0, 96331.0], [1243.0, 96218.0], [1235.0, 96125.0], [1263.0, 95488.0], [1339.0, 92833.0], [1343.0, 92774.0], [1315.0, 92977.0], [1319.0, 92941.0], [1335.0, 93022.0], [1331.0, 92972.0], [1283.0, 93677.5], [1287.0, 93164.0], [1291.0, 93170.0], [1295.0, 93194.0], [1307.0, 93099.5], [1303.0, 93035.0], [1299.0, 93167.0], [1327.0, 93040.0], [1323.0, 92913.0], [1403.0, 88565.0], [1407.0, 88304.0], [1379.0, 88633.0], [1383.0, 88410.0], [1387.0, 88345.0], [1399.0, 88260.0], [1395.0, 88299.0], [1375.0, 89754.0], [1347.0, 92871.0], [1351.0, 92655.0], [1355.0, 92936.0], [1359.0, 92608.0], [1371.0, 90212.0], [1367.0, 90408.0], [1363.0, 90902.0], [1391.0, 88411.0], [1467.0, 84371.0], [1471.0, 84171.0], [1443.0, 85620.0], [1447.0, 85061.0], [1451.0, 85606.0], [1463.0, 84287.0], [1459.0, 84440.0], [1439.0, 86889.0], [1411.0, 88252.0], [1415.0, 88138.0], [1419.0, 88239.0], [1423.0, 88066.0], [1431.0, 87958.0], [1427.0, 88084.0], [1455.0, 85259.0], [1523.0, 79636.0], [1535.0, 79020.0], [1531.0, 79073.0], [1527.0, 79178.0], [1499.0, 79426.0], [1475.0, 84433.0], [1479.0, 84154.0], [1483.0, 83919.0], [1487.0, 83164.0], [1495.0, 79505.0], [1491.0, 79707.0], [1519.0, 79220.0], [1595.0, 77822.0], [1599.0, 77363.0], [1571.0, 78390.0], [1575.0, 78867.0], [1579.0, 78485.0], [1591.0, 77567.0], [1587.0, 77966.0], [1567.0, 78489.0], [1539.0, 79004.0], [1543.0, 79563.0], [1547.0, 79002.0], [1551.0, 78988.0], [1563.0, 78521.0], [1559.0, 78562.0], [1555.0, 78656.0], [1583.0, 78241.0], [1659.0, 74776.0], [1663.0, 74551.0], [1635.0, 74661.0], [1639.0, 74654.0], [1643.0, 74931.0], [1655.0, 74996.0], [1651.0, 74662.0], [1631.0, 75097.0], [1603.0, 75543.0], [1607.0, 75194.0], [1611.0, 75574.0], [1615.0, 75159.0], [1627.0, 75184.5], [1623.0, 75116.0], [1619.0, 75132.0], [1647.0, 74928.5], [1723.0, 71223.0], [1727.0, 71193.0], [1703.0, 72300.0], [1707.0, 72087.0], [1711.0, 72673.0], [1719.0, 71281.0], [1715.0, 71581.0], [1695.0, 72184.0], [1667.0, 74275.0], [1671.0, 74629.0], [1675.0, 73957.0], [1679.0, 72626.0], [1691.0, 72216.0], [1687.0, 72443.0], [1683.0, 72361.0], [1791.0, 65460.0], [1787.0, 65663.0], [1763.0, 68906.0], [1767.0, 68411.0], [1771.0, 68443.0], [1775.0, 67830.0], [1783.0, 65793.0], [1779.0, 67028.0], [1759.0, 69631.0], [1731.0, 71491.0], [1735.0, 70808.0], [1739.0, 70207.0], [1743.0, 70523.0], [1755.0, 69675.0], [1747.0, 69807.0], [1851.0, 60474.0], [1855.0, 60334.0], [1827.0, 65139.0], [1831.0, 64757.0], [1835.0, 63734.0], [1839.0, 60723.0], [1847.0, 60678.0], [1843.0, 60705.0], [1823.0, 65187.5], [1795.0, 65468.0], [1799.0, 65624.0], [1803.0, 65264.0], [1807.0, 65657.0], [1819.0, 65558.0], [1815.0, 65299.0], [1811.0, 65521.0], [1915.0, 56077.0], [1919.0, 55928.0], [1891.0, 59677.0], [1895.0, 59523.0], [1899.0, 59187.0], [1903.0, 58931.0], [1911.0, 58899.0], [1907.0, 58869.0], [1887.0, 59852.0], [1859.0, 60135.0], [1863.0, 59729.0], [1867.0, 59688.0], [1871.0, 59861.0], [1883.0, 59553.0], [1879.0, 59670.0], [1875.0, 59683.0], [1979.0, 52888.0], [1983.0, 52753.0], [1955.0, 55401.0], [1963.0, 53763.0], [1967.0, 53109.0], [1975.0, 53028.0], [1971.0, 53140.5], [1951.0, 55546.0], [1923.0, 55649.0], [1927.0, 55615.0], [1931.0, 55731.0], [1935.0, 55363.0], [1947.0, 55687.0], [1943.0, 55694.0], [1939.0, 55624.0], [2043.0, 49084.0], [2047.0, 48824.0], [2019.0, 52697.0], [2023.0, 52313.0], [2027.0, 52108.0], [2031.0, 51953.0], [2039.0, 50182.0], [2035.0, 51959.0], [2015.0, 52503.0], [1987.0, 52789.0], [1991.0, 52742.0], [1995.0, 52910.0], [1999.0, 52683.0], [2011.0, 52699.0], [2007.0, 52570.0], [2003.0, 52773.0], [2078.0, 46603.0], [2126.0, 41797.0], [2158.0, 38287.0], [2150.0, 40669.0], [2062.0, 47058.0], [2054.0, 46965.0], [2110.0, 42038.0], [2102.0, 43329.0], [2094.0, 44117.0], [2086.0, 45995.0], [2166.0, 19292.5], [2174.0, 37915.0], [2118.0, 41692.0], [2134.0, 41319.0], [2142.0, 41155.0], [2286.0, 30466.0], [2246.0, 30518.0], [2254.0, 30633.0], [2262.0, 30398.0], [2270.0, 30339.333333333332], [2302.0, 26107.0], [2206.0, 37161.0], [2198.0, 37230.0], [2190.0, 37227.0], [2182.0, 37771.0], [2238.0, 31758.0], [2230.0, 31950.0], [2222.0, 32252.0], [2214.0, 37032.0], [2318.0, 25654.0], [2310.0, 25847.5], [2334.0, 25257.0], [2366.0, 19250.0], [2358.0, 20685.0], [2350.0, 21052.6], [2406.0, 14171.0], [2414.0, 13921.0], [2422.0, 13412.0], [2374.0, 19222.0], [2382.0, 19084.0], [2390.0, 18219.0], [2398.0, 14387.0], [2430.0, 13287.0], [2446.0, 4601.5], [2438.0, 13088.0], [2454.0, 7928.0], [2462.0, 7402.0], [2478.0, 7180.0], [2470.0, 7323.0], [2071.0, 46713.5], [2151.0, 40653.0], [2159.0, 38186.0], [2079.0, 46480.0], [2063.0, 46991.0], [2055.0, 46853.0], [2111.0, 42018.0], [2095.0, 44039.0], [2087.0, 45850.0], [2119.0, 41687.0], [2135.0, 41494.0], [2143.0, 41351.0], [2167.0, 38021.0], [2287.0, 30396.0], [2303.0, 26144.0], [2247.0, 30605.0], [2255.0, 30543.0], [2271.0, 30508.0], [2295.0, 30326.5], [2279.0, 30376.5], [2207.0, 37268.0], [2199.0, 37249.0], [2191.0, 37374.0], [2183.0, 37669.0], [2239.0, 31971.0], [2231.0, 32037.0], [2223.0, 32336.0], [2215.0, 36929.0], [2319.0, 25712.0], [2327.0, 10911.6], [2311.0, 25788.0], [2335.0, 25228.0], [2367.0, 19303.0], [2359.0, 20799.0], [2351.0, 20859.0], [2407.0, 14095.0], [2415.0, 13872.0], [2423.0, 13493.0], [2431.0, 13389.0], [2375.0, 19194.0], [2383.0, 19080.0], [2391.0, 18287.0], [2399.0, 14288.0], [2447.0, 3489.0], [2439.0, 1989.125], [2455.0, 7982.0], [2463.0, 7412.0], [2479.0, 7159.0], [2471.0, 7243.0], [1.0, 143799.0]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[1249.7403999999985, 89297.42000000009]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2480.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 3202.45, "minX": 1.6304625E12, "maxY": 15193.0, "series": [{"data": [[1.63046262E12, 11694.35], [1.63046256E12, 15193.0], [1.6304625E12, 5851.666666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63046262E12, 6322.116666666667], [1.63046256E12, 7992.116666666667], [1.6304625E12, 3202.45]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63046262E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 28557.39784946237, "minX": 1.6304625E12, "maxY": 128488.76640711904, "series": [{"data": [[1.63046262E12, 128488.76640711904], [1.63046256E12, 83145.21038732387], [1.6304625E12, 28557.39784946237]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046262E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 28102.716129032255, "minX": 1.6304625E12, "maxY": 128488.38820912135, "series": [{"data": [[1.63046262E12, 128488.38820912135], [1.63046256E12, 83144.27552816887], [1.6304625E12, 28102.716129032255]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046262E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 582.3634408602147, "minX": 1.6304625E12, "maxY": 2152.5150166852054, "series": [{"data": [[1.63046262E12, 2152.5150166852054], [1.63046256E12, 808.0897887323947], [1.6304625E12, 582.3634408602147]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046262E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 524.0, "minX": 1.6304625E12, "maxY": 144888.0, "series": [{"data": [[1.63046262E12, 144888.0], [1.63046256E12, 110814.0], [1.6304625E12, 51000.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63046262E12, 140620.2], [1.63046256E12, 106101.0], [1.6304625E12, 46575.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63046262E12, 143531.08], [1.63046256E12, 110556.5], [1.6304625E12, 47587.920000000006]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63046262E12, 141398.19999999998], [1.63046256E12, 108823.0], [1.6304625E12, 46882.299999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63046262E12, 111044.0], [1.63046256E12, 51921.0], [1.6304625E12, 524.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63046262E12, 128886.0], [1.63046256E12, 84474.0], [1.6304625E12, 25827.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63046262E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 7982.0, "minX": 1.0, "maxY": 142996.0, "series": [{"data": [[2.0, 50959.0], [33.0, 59396.0], [32.0, 89737.5], [34.0, 79366.0], [35.0, 123321.0], [37.0, 86797.0], [36.0, 84494.0], [41.0, 139837.5], [40.0, 112409.0], [43.0, 70959.5], [46.0, 127983.5], [3.0, 91827.0], [49.0, 111638.0], [53.0, 124456.0], [55.0, 105600.0], [56.0, 96281.0], [58.0, 84105.0], [63.0, 79005.5], [4.0, 97723.0], [68.0, 139687.0], [79.0, 136799.0], [5.0, 142996.0], [6.0, 18875.0], [7.0, 60714.0], [8.0, 84353.0], [9.0, 103067.0], [10.0, 125792.0], [11.0, 55702.0], [12.0, 139095.5], [13.0, 32699.0], [14.0, 69744.0], [15.0, 110611.0], [16.0, 119172.0], [17.0, 117492.0], [18.0, 126090.0], [19.0, 46664.0], [20.0, 73957.0], [21.0, 38003.5], [22.0, 19190.5], [24.0, 115568.5], [25.0, 100207.0], [26.0, 131375.0], [27.0, 7982.0], [28.0, 91413.5], [29.0, 133974.0], [30.0, 125608.0], [31.0, 120723.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 39663.0], [33.0, 55704.0], [9.0, 43487.0], [36.0, 60339.0], [10.0, 21053.0], [41.0, 37278.0], [3.0, 50182.0], [13.0, 107566.0], [55.0, 105247.0], [14.0, 68411.0], [56.0, 96722.0], [60.0, 30402.0], [63.0, 78983.0], [1.0, 67028.0], [16.0, 71677.0], [68.0, 139000.0], [5.0, 95163.0], [20.0, 129983.0], [21.0, 38303.0], [6.0, 26828.0], [25.0, 109065.5], [26.0, 72016.0], [27.0, 66715.0], [7.0, 73705.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 79.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 142996.0, "series": [{"data": [[2.0, 50959.0], [33.0, 59396.0], [32.0, 89737.5], [34.0, 79366.0], [35.0, 123321.0], [37.0, 86797.0], [36.0, 84494.0], [41.0, 139837.5], [40.0, 112409.0], [43.0, 70959.5], [46.0, 127983.5], [3.0, 91827.0], [49.0, 111638.0], [53.0, 124456.0], [55.0, 105600.0], [56.0, 96281.0], [58.0, 84105.0], [63.0, 79005.5], [4.0, 97723.0], [68.0, 139687.0], [79.0, 136799.0], [5.0, 142996.0], [6.0, 18875.0], [7.0, 60714.0], [8.0, 84353.0], [9.0, 103066.5], [10.0, 125792.0], [11.0, 55702.0], [12.0, 139095.5], [13.0, 32699.0], [14.0, 69744.0], [15.0, 110611.0], [16.0, 119172.0], [17.0, 117492.0], [18.0, 126090.0], [19.0, 46664.0], [20.0, 73957.0], [21.0, 38003.5], [22.0, 19190.5], [24.0, 115568.5], [25.0, 100207.0], [26.0, 131375.0], [27.0, 7982.0], [28.0, 91413.0], [29.0, 133974.0], [30.0, 125608.0], [31.0, 120723.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 39663.0], [33.0, 55704.0], [9.0, 43487.0], [36.0, 60339.0], [10.0, 0.0], [41.0, 37276.5], [3.0, 50182.0], [13.0, 107565.5], [55.0, 105247.0], [14.0, 68411.0], [56.0, 96721.0], [60.0, 30401.0], [63.0, 78983.0], [1.0, 67028.0], [16.0, 71677.0], [68.0, 138999.0], [5.0, 95161.0], [20.0, 129983.0], [21.0, 38303.0], [6.0, 26824.0], [25.0, 109065.0], [26.0, 72016.0], [27.0, 66715.0], [7.0, 73705.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 79.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 41.666666666666664, "minX": 1.6304625E12, "maxY": 41.666666666666664, "series": [{"data": [[1.6304625E12, 41.666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.6304625E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6304625E12, "maxY": 18.15, "series": [{"data": [[1.63046262E12, 14.916666666666666], [1.63046256E12, 18.15], [1.6304625E12, 5.95]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.6304625E12, 0.16666666666666666]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.63046262E12, 0.06666666666666667], [1.63046256E12, 0.7833333333333333], [1.6304625E12, 1.6333333333333333]], "isOverall": false, "label": "500", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63046262E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6304625E12, "maxY": 18.15, "series": [{"data": [[1.63046262E12, 0.06666666666666667], [1.63046256E12, 0.7833333333333333], [1.6304625E12, 1.8]], "isOverall": false, "label": "HTTP请求-failure", "isController": false}, {"data": [[1.63046262E12, 14.916666666666666], [1.63046256E12, 18.15], [1.6304625E12, 5.95]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046262E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.6304625E12, "maxY": 18.15, "series": [{"data": [[1.63046262E12, 14.916666666666666], [1.63046256E12, 18.15], [1.6304625E12, 5.95]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63046262E12, 0.06666666666666667], [1.63046256E12, 0.7833333333333333], [1.6304625E12, 1.8]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63046262E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

