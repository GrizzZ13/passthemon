/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 134.0, "minX": 0.0, "maxY": 65791.0, "series": [{"data": [[0.0, 134.0], [0.1, 262.0], [0.2, 282.0], [0.3, 307.0], [0.4, 424.0], [0.5, 612.0], [0.6, 646.0], [0.7, 813.0], [0.8, 906.0], [0.9, 970.0], [1.0, 1100.0], [1.1, 1147.0], [1.2, 1631.0], [1.3, 2271.0], [1.4, 2297.0], [1.5, 2316.0], [1.6, 2833.0], [1.7, 2978.0], [1.8, 2996.0], [1.9, 3075.0], [2.0, 3090.0], [2.1, 3108.0], [2.2, 3243.0], [2.3, 3677.0], [2.4, 3774.0], [2.5, 3957.0], [2.6, 3983.0], [2.7, 4002.0], [2.8, 4053.0], [2.9, 4114.0], [3.0, 4120.0], [3.1, 4128.0], [3.2, 4134.0], [3.3, 4182.0], [3.4, 4190.0], [3.5, 4200.0], [3.6, 4210.0], [3.7, 4217.0], [3.8, 4229.0], [3.9, 4237.0], [4.0, 4241.0], [4.1, 4256.0], [4.2, 4270.0], [4.3, 4288.0], [4.4, 4292.0], [4.5, 4300.0], [4.6, 4303.0], [4.7, 4310.0], [4.8, 4332.0], [4.9, 4338.0], [5.0, 4344.0], [5.1, 4349.0], [5.2, 4355.0], [5.3, 4401.0], [5.4, 4428.0], [5.5, 4457.0], [5.6, 4477.0], [5.7, 4500.0], [5.8, 4514.0], [5.9, 4535.0], [6.0, 4573.0], [6.1, 4596.0], [6.2, 4604.0], [6.3, 4611.0], [6.4, 4616.0], [6.5, 4629.0], [6.6, 4639.0], [6.7, 4651.0], [6.8, 4667.0], [6.9, 4766.0], [7.0, 4795.0], [7.1, 4806.0], [7.2, 4826.0], [7.3, 4861.0], [7.4, 4871.0], [7.5, 4883.0], [7.6, 4892.0], [7.7, 4897.0], [7.8, 4904.0], [7.9, 4919.0], [8.0, 4926.0], [8.1, 4932.0], [8.2, 4942.0], [8.3, 4956.0], [8.4, 4977.0], [8.5, 4986.0], [8.6, 5006.0], [8.7, 5029.0], [8.8, 5043.0], [8.9, 5071.0], [9.0, 5089.0], [9.1, 5106.0], [9.2, 5120.0], [9.3, 5130.0], [9.4, 5138.0], [9.5, 5153.0], [9.6, 5180.0], [9.7, 5211.0], [9.8, 5400.0], [9.9, 5482.0], [10.0, 5505.0], [10.1, 5515.0], [10.2, 5523.0], [10.3, 5531.0], [10.4, 5538.0], [10.5, 5545.0], [10.6, 5550.0], [10.7, 5556.0], [10.8, 5560.0], [10.9, 5566.0], [11.0, 5576.0], [11.1, 5589.0], [11.2, 5599.0], [11.3, 5614.0], [11.4, 5630.0], [11.5, 5652.0], [11.6, 5665.0], [11.7, 5684.0], [11.8, 5704.0], [11.9, 5727.0], [12.0, 5742.0], [12.1, 5752.0], [12.2, 5759.0], [12.3, 5765.0], [12.4, 5778.0], [12.5, 5796.0], [12.6, 5812.0], [12.7, 5835.0], [12.8, 5863.0], [12.9, 5883.0], [13.0, 5932.0], [13.1, 5964.0], [13.2, 5980.0], [13.3, 5993.0], [13.4, 6053.0], [13.5, 6239.0], [13.6, 6274.0], [13.7, 6313.0], [13.8, 6367.0], [13.9, 6395.0], [14.0, 6429.0], [14.1, 6441.0], [14.2, 6474.0], [14.3, 6490.0], [14.4, 6532.0], [14.5, 6587.0], [14.6, 6630.0], [14.7, 6672.0], [14.8, 6688.0], [14.9, 6706.0], [15.0, 6723.0], [15.1, 6751.0], [15.2, 6772.0], [15.3, 6787.0], [15.4, 6814.0], [15.5, 6832.0], [15.6, 6838.0], [15.7, 6845.0], [15.8, 6851.0], [15.9, 6862.0], [16.0, 6868.0], [16.1, 6875.0], [16.2, 6894.0], [16.3, 6992.0], [16.4, 7002.0], [16.5, 7013.0], [16.6, 7027.0], [16.7, 7075.0], [16.8, 7107.0], [16.9, 7138.0], [17.0, 7177.0], [17.1, 7185.0], [17.2, 7195.0], [17.3, 7235.0], [17.4, 7245.0], [17.5, 7251.0], [17.6, 7255.0], [17.7, 7261.0], [17.8, 7267.0], [17.9, 7278.0], [18.0, 7288.0], [18.1, 7299.0], [18.2, 7313.0], [18.3, 7342.0], [18.4, 7481.0], [18.5, 7547.0], [18.6, 7606.0], [18.7, 7622.0], [18.8, 7628.0], [18.9, 7633.0], [19.0, 7645.0], [19.1, 7666.0], [19.2, 7699.0], [19.3, 7775.0], [19.4, 7811.0], [19.5, 7856.0], [19.6, 7903.0], [19.7, 7957.0], [19.8, 7975.0], [19.9, 7990.0], [20.0, 8000.0], [20.1, 8006.0], [20.2, 8040.0], [20.3, 8075.0], [20.4, 8138.0], [20.5, 8174.0], [20.6, 8337.0], [20.7, 8372.0], [20.8, 8381.0], [20.9, 8440.0], [21.0, 8753.0], [21.1, 8786.0], [21.2, 9102.0], [21.3, 9288.0], [21.4, 10208.0], [21.5, 10259.0], [21.6, 10731.0], [21.7, 10937.0], [21.8, 11312.0], [21.9, 11590.0], [22.0, 11624.0], [22.1, 12028.0], [22.2, 13044.0], [22.3, 13375.0], [22.4, 13395.0], [22.5, 13548.0], [22.6, 13566.0], [22.7, 13584.0], [22.8, 13786.0], [22.9, 13906.0], [23.0, 14096.0], [23.1, 14391.0], [23.2, 14422.0], [23.3, 14513.0], [23.4, 14537.0], [23.5, 15033.0], [23.6, 15043.0], [23.7, 15046.0], [23.8, 15049.0], [23.9, 15054.0], [24.0, 15064.0], [24.1, 15310.0], [24.2, 15348.0], [24.3, 15361.0], [24.4, 15377.0], [24.5, 15395.0], [24.6, 15505.0], [24.7, 15568.0], [24.8, 15603.0], [24.9, 15719.0], [25.0, 15778.0], [25.1, 15795.0], [25.2, 15829.0], [25.3, 15880.0], [25.4, 15896.0], [25.5, 15912.0], [25.6, 16011.0], [25.7, 16027.0], [25.8, 16046.0], [25.9, 16063.0], [26.0, 16097.0], [26.1, 16134.0], [26.2, 16154.0], [26.3, 16163.0], [26.4, 16176.0], [26.5, 16227.0], [26.6, 16244.0], [26.7, 16265.0], [26.8, 16282.0], [26.9, 16288.0], [27.0, 16303.0], [27.1, 16346.0], [27.2, 16362.0], [27.3, 16380.0], [27.4, 16392.0], [27.5, 16398.0], [27.6, 16416.0], [27.7, 16426.0], [27.8, 16453.0], [27.9, 16522.0], [28.0, 16536.0], [28.1, 16586.0], [28.2, 16712.0], [28.3, 16727.0], [28.4, 16750.0], [28.5, 16767.0], [28.6, 16781.0], [28.7, 16792.0], [28.8, 16817.0], [28.9, 16867.0], [29.0, 16941.0], [29.1, 16959.0], [29.2, 16990.0], [29.3, 17082.0], [29.4, 17135.0], [29.5, 17185.0], [29.6, 17223.0], [29.7, 17365.0], [29.8, 17517.0], [29.9, 17798.0], [30.0, 18031.0], [30.1, 18044.0], [30.2, 18258.0], [30.3, 18321.0], [30.4, 18368.0], [30.5, 18388.0], [30.6, 18403.0], [30.7, 18442.0], [30.8, 18469.0], [30.9, 18635.0], [31.0, 18760.0], [31.1, 18796.0], [31.2, 18830.0], [31.3, 18867.0], [31.4, 18969.0], [31.5, 18988.0], [31.6, 18996.0], [31.7, 19008.0], [31.8, 19013.0], [31.9, 19019.0], [32.0, 19025.0], [32.1, 19035.0], [32.2, 19047.0], [32.3, 19076.0], [32.4, 19101.0], [32.5, 19267.0], [32.6, 19289.0], [32.7, 19510.0], [32.8, 19527.0], [32.9, 19743.0], [33.0, 19787.0], [33.1, 19922.0], [33.2, 20084.0], [33.3, 20169.0], [33.4, 20214.0], [33.5, 20408.0], [33.6, 20495.0], [33.7, 20513.0], [33.8, 20538.0], [33.9, 20670.0], [34.0, 20691.0], [34.1, 20993.0], [34.2, 21008.0], [34.3, 21016.0], [34.4, 21018.0], [34.5, 21019.0], [34.6, 21020.0], [34.7, 21021.0], [34.8, 21021.0], [34.9, 21022.0], [35.0, 21022.0], [35.1, 21022.0], [35.2, 21022.0], [35.3, 21023.0], [35.4, 21023.0], [35.5, 21023.0], [35.6, 21023.0], [35.7, 21024.0], [35.8, 21024.0], [35.9, 21024.0], [36.0, 21024.0], [36.1, 21025.0], [36.2, 21025.0], [36.3, 21025.0], [36.4, 21025.0], [36.5, 21025.0], [36.6, 21026.0], [36.7, 21026.0], [36.8, 21026.0], [36.9, 21026.0], [37.0, 21026.0], [37.1, 21026.0], [37.2, 21027.0], [37.3, 21027.0], [37.4, 21027.0], [37.5, 21027.0], [37.6, 21027.0], [37.7, 21027.0], [37.8, 21028.0], [37.9, 21028.0], [38.0, 21028.0], [38.1, 21028.0], [38.2, 21028.0], [38.3, 21028.0], [38.4, 21028.0], [38.5, 21029.0], [38.6, 21029.0], [38.7, 21029.0], [38.8, 21029.0], [38.9, 21029.0], [39.0, 21029.0], [39.1, 21029.0], [39.2, 21030.0], [39.3, 21030.0], [39.4, 21030.0], [39.5, 21030.0], [39.6, 21030.0], [39.7, 21030.0], [39.8, 21030.0], [39.9, 21030.0], [40.0, 21030.0], [40.1, 21031.0], [40.2, 21031.0], [40.3, 21031.0], [40.4, 21031.0], [40.5, 21031.0], [40.6, 21031.0], [40.7, 21031.0], [40.8, 21031.0], [40.9, 21031.0], [41.0, 21032.0], [41.1, 21032.0], [41.2, 21032.0], [41.3, 21032.0], [41.4, 21032.0], [41.5, 21032.0], [41.6, 21032.0], [41.7, 21032.0], [41.8, 21032.0], [41.9, 21032.0], [42.0, 21033.0], [42.1, 21033.0], [42.2, 21033.0], [42.3, 21033.0], [42.4, 21033.0], [42.5, 21033.0], [42.6, 21033.0], [42.7, 21033.0], [42.8, 21033.0], [42.9, 21033.0], [43.0, 21033.0], [43.1, 21033.0], [43.2, 21034.0], [43.3, 21034.0], [43.4, 21034.0], [43.5, 21034.0], [43.6, 21034.0], [43.7, 21034.0], [43.8, 21034.0], [43.9, 21034.0], [44.0, 21034.0], [44.1, 21034.0], [44.2, 21034.0], [44.3, 21034.0], [44.4, 21034.0], [44.5, 21034.0], [44.6, 21035.0], [44.7, 21035.0], [44.8, 21035.0], [44.9, 21035.0], [45.0, 21035.0], [45.1, 21035.0], [45.2, 21035.0], [45.3, 21035.0], [45.4, 21035.0], [45.5, 21035.0], [45.6, 21035.0], [45.7, 21035.0], [45.8, 21035.0], [45.9, 21035.0], [46.0, 21036.0], [46.1, 21036.0], [46.2, 21036.0], [46.3, 21036.0], [46.4, 21036.0], [46.5, 21036.0], [46.6, 21036.0], [46.7, 21036.0], [46.8, 21036.0], [46.9, 21036.0], [47.0, 21036.0], [47.1, 21036.0], [47.2, 21036.0], [47.3, 21036.0], [47.4, 21036.0], [47.5, 21036.0], [47.6, 21037.0], [47.7, 21037.0], [47.8, 21037.0], [47.9, 21037.0], [48.0, 21037.0], [48.1, 21037.0], [48.2, 21037.0], [48.3, 21037.0], [48.4, 21037.0], [48.5, 21037.0], [48.6, 21037.0], [48.7, 21037.0], [48.8, 21037.0], [48.9, 21037.0], [49.0, 21037.0], [49.1, 21037.0], [49.2, 21038.0], [49.3, 21038.0], [49.4, 21038.0], [49.5, 21038.0], [49.6, 21038.0], [49.7, 21038.0], [49.8, 21038.0], [49.9, 21038.0], [50.0, 21038.0], [50.1, 21038.0], [50.2, 21038.0], [50.3, 21038.0], [50.4, 21038.0], [50.5, 21038.0], [50.6, 21038.0], [50.7, 21038.0], [50.8, 21039.0], [50.9, 21039.0], [51.0, 21039.0], [51.1, 21039.0], [51.2, 21039.0], [51.3, 21039.0], [51.4, 21039.0], [51.5, 21039.0], [51.6, 21039.0], [51.7, 21039.0], [51.8, 21039.0], [51.9, 21039.0], [52.0, 21039.0], [52.1, 21039.0], [52.2, 21039.0], [52.3, 21040.0], [52.4, 21040.0], [52.5, 21040.0], [52.6, 21040.0], [52.7, 21040.0], [52.8, 21040.0], [52.9, 21040.0], [53.0, 21040.0], [53.1, 21040.0], [53.2, 21040.0], [53.3, 21040.0], [53.4, 21040.0], [53.5, 21040.0], [53.6, 21040.0], [53.7, 21040.0], [53.8, 21040.0], [53.9, 21040.0], [54.0, 21041.0], [54.1, 21041.0], [54.2, 21041.0], [54.3, 21041.0], [54.4, 21041.0], [54.5, 21041.0], [54.6, 21041.0], [54.7, 21041.0], [54.8, 21041.0], [54.9, 21041.0], [55.0, 21041.0], [55.1, 21041.0], [55.2, 21041.0], [55.3, 21041.0], [55.4, 21041.0], [55.5, 21041.0], [55.6, 21042.0], [55.7, 21042.0], [55.8, 21042.0], [55.9, 21042.0], [56.0, 21042.0], [56.1, 21042.0], [56.2, 21042.0], [56.3, 21042.0], [56.4, 21042.0], [56.5, 21042.0], [56.6, 21042.0], [56.7, 21042.0], [56.8, 21042.0], [56.9, 21042.0], [57.0, 21042.0], [57.1, 21042.0], [57.2, 21043.0], [57.3, 21043.0], [57.4, 21043.0], [57.5, 21043.0], [57.6, 21043.0], [57.7, 21043.0], [57.8, 21043.0], [57.9, 21043.0], [58.0, 21043.0], [58.1, 21043.0], [58.2, 21043.0], [58.3, 21043.0], [58.4, 21043.0], [58.5, 21043.0], [58.6, 21043.0], [58.7, 21043.0], [58.8, 21044.0], [58.9, 21044.0], [59.0, 21044.0], [59.1, 21044.0], [59.2, 21044.0], [59.3, 21044.0], [59.4, 21044.0], [59.5, 21044.0], [59.6, 21044.0], [59.7, 21044.0], [59.8, 21044.0], [59.9, 21044.0], [60.0, 21044.0], [60.1, 21044.0], [60.2, 21044.0], [60.3, 21044.0], [60.4, 21044.0], [60.5, 21045.0], [60.6, 21045.0], [60.7, 21045.0], [60.8, 21045.0], [60.9, 21045.0], [61.0, 21045.0], [61.1, 21045.0], [61.2, 21045.0], [61.3, 21045.0], [61.4, 21045.0], [61.5, 21045.0], [61.6, 21045.0], [61.7, 21045.0], [61.8, 21045.0], [61.9, 21045.0], [62.0, 21045.0], [62.1, 21045.0], [62.2, 21046.0], [62.3, 21046.0], [62.4, 21046.0], [62.5, 21046.0], [62.6, 21046.0], [62.7, 21046.0], [62.8, 21046.0], [62.9, 21046.0], [63.0, 21046.0], [63.1, 21046.0], [63.2, 21046.0], [63.3, 21046.0], [63.4, 21046.0], [63.5, 21047.0], [63.6, 21047.0], [63.7, 21047.0], [63.8, 21047.0], [63.9, 21047.0], [64.0, 21047.0], [64.1, 21047.0], [64.2, 21047.0], [64.3, 21047.0], [64.4, 21047.0], [64.5, 21047.0], [64.6, 21047.0], [64.7, 21047.0], [64.8, 21047.0], [64.9, 21047.0], [65.0, 21047.0], [65.1, 21048.0], [65.2, 21048.0], [65.3, 21048.0], [65.4, 21048.0], [65.5, 21048.0], [65.6, 21048.0], [65.7, 21048.0], [65.8, 21048.0], [65.9, 21048.0], [66.0, 21048.0], [66.1, 21048.0], [66.2, 21048.0], [66.3, 21048.0], [66.4, 21048.0], [66.5, 21048.0], [66.6, 21048.0], [66.7, 21049.0], [66.8, 21049.0], [66.9, 21049.0], [67.0, 21049.0], [67.1, 21049.0], [67.2, 21049.0], [67.3, 21049.0], [67.4, 21049.0], [67.5, 21049.0], [67.6, 21049.0], [67.7, 21049.0], [67.8, 21049.0], [67.9, 21049.0], [68.0, 21049.0], [68.1, 21049.0], [68.2, 21050.0], [68.3, 21050.0], [68.4, 21050.0], [68.5, 21050.0], [68.6, 21050.0], [68.7, 21050.0], [68.8, 21050.0], [68.9, 21050.0], [69.0, 21050.0], [69.1, 21050.0], [69.2, 21050.0], [69.3, 21050.0], [69.4, 21050.0], [69.5, 21050.0], [69.6, 21051.0], [69.7, 21051.0], [69.8, 21051.0], [69.9, 21051.0], [70.0, 21051.0], [70.1, 21051.0], [70.2, 21051.0], [70.3, 21051.0], [70.4, 21051.0], [70.5, 21051.0], [70.6, 21051.0], [70.7, 21051.0], [70.8, 21051.0], [70.9, 21052.0], [71.0, 21052.0], [71.1, 21052.0], [71.2, 21052.0], [71.3, 21052.0], [71.4, 21052.0], [71.5, 21052.0], [71.6, 21052.0], [71.7, 21052.0], [71.8, 21052.0], [71.9, 21053.0], [72.0, 21053.0], [72.1, 21053.0], [72.2, 21053.0], [72.3, 21053.0], [72.4, 21053.0], [72.5, 21053.0], [72.6, 21053.0], [72.7, 21053.0], [72.8, 21053.0], [72.9, 21054.0], [73.0, 21054.0], [73.1, 21054.0], [73.2, 21054.0], [73.3, 21054.0], [73.4, 21054.0], [73.5, 21054.0], [73.6, 21054.0], [73.7, 21054.0], [73.8, 21054.0], [73.9, 21055.0], [74.0, 21055.0], [74.1, 21055.0], [74.2, 21055.0], [74.3, 21055.0], [74.4, 21055.0], [74.5, 21055.0], [74.6, 21055.0], [74.7, 21055.0], [74.8, 21056.0], [74.9, 21056.0], [75.0, 21056.0], [75.1, 21056.0], [75.2, 21056.0], [75.3, 21056.0], [75.4, 21056.0], [75.5, 21056.0], [75.6, 21056.0], [75.7, 21057.0], [75.8, 21057.0], [75.9, 21057.0], [76.0, 21057.0], [76.1, 21057.0], [76.2, 21057.0], [76.3, 21057.0], [76.4, 21058.0], [76.5, 21058.0], [76.6, 21058.0], [76.7, 21058.0], [76.8, 21058.0], [76.9, 21058.0], [77.0, 21058.0], [77.1, 21059.0], [77.2, 21059.0], [77.3, 21059.0], [77.4, 21059.0], [77.5, 21059.0], [77.6, 21059.0], [77.7, 21059.0], [77.8, 21059.0], [77.9, 21060.0], [78.0, 21060.0], [78.1, 21060.0], [78.2, 21060.0], [78.3, 21060.0], [78.4, 21060.0], [78.5, 21060.0], [78.6, 21061.0], [78.7, 21061.0], [78.8, 21061.0], [78.9, 21061.0], [79.0, 21061.0], [79.1, 21061.0], [79.2, 21061.0], [79.3, 21062.0], [79.4, 21062.0], [79.5, 21062.0], [79.6, 21062.0], [79.7, 21062.0], [79.8, 21062.0], [79.9, 21063.0], [80.0, 21063.0], [80.1, 21063.0], [80.2, 21063.0], [80.3, 21063.0], [80.4, 21064.0], [80.5, 21064.0], [80.6, 21064.0], [80.7, 21064.0], [80.8, 21064.0], [80.9, 21065.0], [81.0, 21065.0], [81.1, 21065.0], [81.2, 21066.0], [81.3, 21066.0], [81.4, 21066.0], [81.5, 21067.0], [81.6, 21067.0], [81.7, 21068.0], [81.8, 21068.0], [81.9, 21069.0], [82.0, 21070.0], [82.1, 21070.0], [82.2, 21071.0], [82.3, 21074.0], [82.4, 21234.0], [82.5, 21258.0], [82.6, 21280.0], [82.7, 21343.0], [82.8, 21382.0], [82.9, 21515.0], [83.0, 21578.0], [83.1, 21601.0], [83.2, 21822.0], [83.3, 21894.0], [83.4, 21938.0], [83.5, 21957.0], [83.6, 21967.0], [83.7, 21969.0], [83.8, 21983.0], [83.9, 22066.0], [84.0, 22087.0], [84.1, 22231.0], [84.2, 22252.0], [84.3, 22271.0], [84.4, 22349.0], [84.5, 22423.0], [84.6, 22445.0], [84.7, 22482.0], [84.8, 22586.0], [84.9, 22611.0], [85.0, 23047.0], [85.1, 23100.0], [85.2, 23153.0], [85.3, 23175.0], [85.4, 23296.0], [85.5, 23424.0], [85.6, 23532.0], [85.7, 23610.0], [85.8, 23681.0], [85.9, 23731.0], [86.0, 23748.0], [86.1, 23762.0], [86.2, 23773.0], [86.3, 23798.0], [86.4, 23827.0], [86.5, 23858.0], [86.6, 23888.0], [86.7, 24009.0], [86.8, 24244.0], [86.9, 24481.0], [87.0, 24703.0], [87.1, 25165.0], [87.2, 25270.0], [87.3, 25455.0], [87.4, 25501.0], [87.5, 26244.0], [87.6, 26359.0], [87.7, 26380.0], [87.8, 26395.0], [87.9, 26584.0], [88.0, 26603.0], [88.1, 26625.0], [88.2, 26714.0], [88.3, 26784.0], [88.4, 26835.0], [88.5, 26877.0], [88.6, 27047.0], [88.7, 27108.0], [88.8, 27281.0], [88.9, 27422.0], [89.0, 27561.0], [89.1, 27582.0], [89.2, 27605.0], [89.3, 27746.0], [89.4, 27771.0], [89.5, 27783.0], [89.6, 27798.0], [89.7, 27819.0], [89.8, 27982.0], [89.9, 28062.0], [90.0, 28175.0], [90.1, 28377.0], [90.2, 28523.0], [90.3, 28611.0], [90.4, 28771.0], [90.5, 28887.0], [90.6, 28979.0], [90.7, 29061.0], [90.8, 29171.0], [90.9, 29249.0], [91.0, 29344.0], [91.1, 29424.0], [91.2, 29498.0], [91.3, 29571.0], [91.4, 29668.0], [91.5, 29752.0], [91.6, 29886.0], [91.7, 29910.0], [91.8, 29926.0], [91.9, 29935.0], [92.0, 29949.0], [92.1, 29963.0], [92.2, 29975.0], [92.3, 30052.0], [92.4, 30141.0], [92.5, 30213.0], [92.6, 30278.0], [92.7, 30298.0], [92.8, 30352.0], [92.9, 30383.0], [93.0, 30433.0], [93.1, 30508.0], [93.2, 30521.0], [93.3, 30523.0], [93.4, 30539.0], [93.5, 30584.0], [93.6, 30635.0], [93.7, 30715.0], [93.8, 30745.0], [93.9, 30784.0], [94.0, 30840.0], [94.1, 30899.0], [94.2, 30970.0], [94.3, 30991.0], [94.4, 31079.0], [94.5, 31159.0], [94.6, 31173.0], [94.7, 31269.0], [94.8, 31331.0], [94.9, 31348.0], [95.0, 31386.0], [95.1, 31518.0], [95.2, 31539.0], [95.3, 31553.0], [95.4, 31579.0], [95.5, 31630.0], [95.6, 31648.0], [95.7, 31678.0], [95.8, 31698.0], [95.9, 31723.0], [96.0, 31741.0], [96.1, 31772.0], [96.2, 31813.0], [96.3, 31914.0], [96.4, 31993.0], [96.5, 32008.0], [96.6, 32051.0], [96.7, 32071.0], [96.8, 32104.0], [96.9, 32210.0], [97.0, 32349.0], [97.1, 32507.0], [97.2, 32642.0], [97.3, 32734.0], [97.4, 32828.0], [97.5, 32956.0], [97.6, 33099.0], [97.7, 33375.0], [97.8, 33744.0], [97.9, 34241.0], [98.0, 34324.0], [98.1, 34469.0], [98.2, 35179.0], [98.3, 35433.0], [98.4, 35819.0], [98.5, 36285.0], [98.6, 36872.0], [98.7, 37562.0], [98.8, 37648.0], [98.9, 37779.0], [99.0, 38076.0], [99.1, 38401.0], [99.2, 38658.0], [99.3, 39191.0], [99.4, 39997.0], [99.5, 43873.0], [99.6, 45890.0], [99.7, 50072.0], [99.8, 50235.0], [99.9, 50287.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 10606.0, "series": [{"data": [[100.0, 18.0], [34100.0, 3.0], [33300.0, 11.0], [34500.0, 2.0], [33700.0, 7.0], [32900.0, 17.0], [35700.0, 4.0], [36500.0, 5.0], [35300.0, 1.0], [36100.0, 2.0], [36900.0, 2.0], [37700.0, 14.0], [38100.0, 5.0], [38500.0, 5.0], [37300.0, 1.0], [39300.0, 13.0], [39700.0, 3.0], [40100.0, 2.0], [45700.0, 1.0], [48100.0, 4.0], [50100.0, 13.0], [200.0, 41.0], [300.0, 25.0], [400.0, 9.0], [500.0, 7.0], [600.0, 45.0], [700.0, 3.0], [800.0, 22.0], [900.0, 36.0], [1000.0, 14.0], [1100.0, 23.0], [1500.0, 21.0], [1600.0, 10.0], [1900.0, 1.0], [2100.0, 2.0], [2300.0, 34.0], [2200.0, 40.0], [2800.0, 7.0], [2900.0, 40.0], [3000.0, 54.0], [3100.0, 18.0], [3200.0, 18.0], [3700.0, 15.0], [3600.0, 35.0], [3800.0, 7.0], [3900.0, 49.0], [4000.0, 36.0], [4100.0, 140.0], [4200.0, 219.0], [4300.0, 175.0], [65700.0, 1.0], [4600.0, 157.0], [4400.0, 89.0], [4500.0, 99.0], [4800.0, 152.0], [4700.0, 41.0], [4900.0, 183.0], [5100.0, 135.0], [5000.0, 107.0], [5200.0, 25.0], [5300.0, 3.0], [5600.0, 123.0], [5500.0, 268.0], [5400.0, 41.0], [5700.0, 171.0], [5800.0, 92.0], [6000.0, 21.0], [6100.0, 11.0], [5900.0, 81.0], [6300.0, 55.0], [6200.0, 43.0], [6400.0, 91.0], [6500.0, 44.0], [6600.0, 73.0], [6900.0, 33.0], [6700.0, 110.0], [6800.0, 191.0], [7000.0, 87.0], [7100.0, 99.0], [7200.0, 194.0], [7300.0, 53.0], [7400.0, 27.0], [7600.0, 136.0], [7500.0, 26.0], [7800.0, 45.0], [7700.0, 41.0], [7900.0, 88.0], [8100.0, 41.0], [8000.0, 77.0], [8300.0, 65.0], [8400.0, 18.0], [8500.0, 3.0], [8200.0, 4.0], [8700.0, 35.0], [8600.0, 5.0], [9200.0, 21.0], [8800.0, 7.0], [9000.0, 10.0], [9100.0, 2.0], [9700.0, 3.0], [9300.0, 1.0], [9600.0, 2.0], [9400.0, 5.0], [9500.0, 1.0], [9900.0, 1.0], [10100.0, 5.0], [9800.0, 1.0], [10200.0, 28.0], [10500.0, 11.0], [10400.0, 3.0], [10700.0, 1.0], [10600.0, 4.0], [10900.0, 41.0], [10800.0, 1.0], [11600.0, 27.0], [11700.0, 1.0], [11300.0, 8.0], [11500.0, 24.0], [12100.0, 3.0], [12200.0, 1.0], [12000.0, 5.0], [11900.0, 3.0], [12500.0, 3.0], [12400.0, 5.0], [12700.0, 1.0], [13300.0, 48.0], [13000.0, 3.0], [12900.0, 3.0], [12800.0, 3.0], [13400.0, 14.0], [13500.0, 57.0], [13600.0, 7.0], [13800.0, 6.0], [13700.0, 15.0], [14000.0, 6.0], [14100.0, 14.0], [13900.0, 25.0], [14300.0, 9.0], [14200.0, 3.0], [14500.0, 35.0], [14700.0, 10.0], [14400.0, 29.0], [14600.0, 1.0], [15200.0, 5.0], [15100.0, 7.0], [15000.0, 126.0], [15300.0, 93.0], [15800.0, 70.0], [15700.0, 50.0], [15400.0, 16.0], [15600.0, 24.0], [15500.0, 41.0], [16200.0, 120.0], [16000.0, 94.0], [15900.0, 31.0], [16300.0, 115.0], [16100.0, 98.0], [16600.0, 5.0], [16800.0, 41.0], [17000.0, 30.0], [17400.0, 9.0], [16400.0, 71.0], [17200.0, 22.0], [17600.0, 1.0], [17800.0, 4.0], [18000.0, 38.0], [18200.0, 22.0], [18400.0, 52.0], [19000.0, 166.0], [19200.0, 41.0], [18800.0, 49.0], [18600.0, 15.0], [19800.0, 12.0], [20400.0, 29.0], [20000.0, 19.0], [20200.0, 8.0], [21000.0, 10606.0], [21200.0, 72.0], [21400.0, 3.0], [20800.0, 8.0], [20600.0, 48.0], [22400.0, 57.0], [22000.0, 43.0], [21600.0, 13.0], [21800.0, 31.0], [22200.0, 62.0], [23400.0, 32.0], [23200.0, 13.0], [22600.0, 23.0], [23000.0, 26.0], [23600.0, 34.0], [23800.0, 67.0], [24400.0, 19.0], [24000.0, 8.0], [24200.0, 21.0], [24600.0, 15.0], [24800.0, 16.0], [25200.0, 19.0], [25400.0, 31.0], [26200.0, 19.0], [26600.0, 46.0], [25600.0, 11.0], [25800.0, 1.0], [26400.0, 2.0], [27000.0, 20.0], [26800.0, 40.0], [27600.0, 14.0], [27200.0, 17.0], [27400.0, 15.0], [28000.0, 35.0], [28400.0, 11.0], [27800.0, 35.0], [28200.0, 7.0], [28600.0, 18.0], [28800.0, 21.0], [29000.0, 21.0], [29400.0, 26.0], [29200.0, 27.0], [29600.0, 23.0], [30000.0, 26.0], [30200.0, 45.0], [30400.0, 33.0], [29800.0, 21.0], [30600.0, 27.0], [31200.0, 7.0], [31400.0, 14.0], [31600.0, 81.0], [30800.0, 32.0], [31000.0, 16.0], [32000.0, 75.0], [31800.0, 27.0], [32200.0, 18.0], [32400.0, 14.0], [32600.0, 19.0], [34400.0, 18.0], [32800.0, 23.0], [33600.0, 9.0], [33200.0, 6.0], [35200.0, 10.0], [36800.0, 3.0], [36000.0, 2.0], [37600.0, 25.0], [38800.0, 7.0], [38000.0, 6.0], [38400.0, 8.0], [40000.0, 15.0], [39200.0, 1.0], [40800.0, 1.0], [50000.0, 5.0], [52000.0, 1.0], [54000.0, 3.0], [34300.0, 29.0], [33900.0, 3.0], [34700.0, 4.0], [33100.0, 7.0], [33500.0, 1.0], [35100.0, 5.0], [35500.0, 6.0], [35900.0, 1.0], [36300.0, 4.0], [37500.0, 23.0], [38300.0, 12.0], [38700.0, 10.0], [37900.0, 3.0], [39900.0, 4.0], [39100.0, 1.0], [45900.0, 1.0], [47900.0, 1.0], [50300.0, 12.0], [64700.0, 1.0], [16500.0, 64.0], [16700.0, 127.0], [16900.0, 67.0], [17300.0, 25.0], [17100.0, 40.0], [17700.0, 18.0], [17500.0, 6.0], [18300.0, 71.0], [17900.0, 6.0], [18100.0, 7.0], [18500.0, 17.0], [19100.0, 16.0], [18900.0, 66.0], [18700.0, 32.0], [19300.0, 4.0], [19500.0, 41.0], [20300.0, 11.0], [19700.0, 35.0], [19900.0, 17.0], [20100.0, 37.0], [21500.0, 49.0], [21300.0, 43.0], [20900.0, 7.0], [21100.0, 1.0], [20500.0, 43.0], [20700.0, 7.0], [22100.0, 5.0], [21900.0, 110.0], [21700.0, 6.0], [22300.0, 26.0], [22500.0, 34.0], [23500.0, 21.0], [23100.0, 55.0], [22700.0, 2.0], [22900.0, 2.0], [23300.0, 6.0], [23700.0, 104.0], [23900.0, 19.0], [24100.0, 2.0], [24700.0, 4.0], [25100.0, 19.0], [25500.0, 6.0], [26500.0, 36.0], [26300.0, 52.0], [25700.0, 1.0], [26100.0, 1.0], [26700.0, 33.0], [27500.0, 52.0], [27100.0, 14.0], [27300.0, 15.0], [26900.0, 15.0], [28300.0, 20.0], [27900.0, 8.0], [28500.0, 23.0], [27700.0, 77.0], [28100.0, 9.0], [28900.0, 22.0], [28700.0, 15.0], [29100.0, 25.0], [29500.0, 28.0], [29300.0, 28.0], [29900.0, 128.0], [30100.0, 32.0], [30500.0, 103.0], [30300.0, 50.0], [30700.0, 63.0], [29700.0, 27.0], [31500.0, 81.0], [31100.0, 57.0], [31300.0, 66.0], [30900.0, 53.0], [31700.0, 79.0], [32100.0, 24.0], [31900.0, 33.0], [32500.0, 18.0], [32300.0, 13.0], [32700.0, 21.0], [33000.0, 14.0], [34600.0, 4.0], [34200.0, 10.0], [33400.0, 8.0], [33800.0, 7.0], [35400.0, 18.0], [35800.0, 7.0], [36600.0, 3.0], [36200.0, 20.0], [37400.0, 4.0], [38200.0, 3.0], [37800.0, 10.0], [38600.0, 13.0], [39800.0, 1.0], [40200.0, 3.0], [39000.0, 2.0], [43800.0, 3.0], [45800.0, 19.0], [48200.0, 10.0], [47800.0, 1.0], [50200.0, 34.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 65700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 84.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 14284.0, "series": [{"data": [[0.0, 84.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 125.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 7507.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 14284.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 8.181818181818183, "minX": 1.63133508E12, "maxY": 1987.7499999999998, "series": [{"data": [[1.63133508E12, 928.0050000000012]], "isOverall": false, "label": "sendEmail", "isController": false}, {"data": [[1.63133538E12, 1065.0820021299264], [1.63133544E12, 61.852459016393496]], "isOverall": false, "label": "getUsersByPage", "isController": false}, {"data": [[1.6313352E12, 985.9141104294476], [1.63133514E12, 1987.7499999999998]], "isOverall": false, "label": "getUserInfoByUserId", "isController": false}, {"data": [[1.63133526E12, 8.181818181818183], [1.6313352E12, 1001.742584213175]], "isOverall": false, "label": "getOtherInfo", "isController": false}, {"data": [[1.63133526E12, 1005.6029999999961]], "isOverall": false, "label": "getUserNameById", "isController": false}, {"data": [[1.63133532E12, 999.0850000000016]], "isOverall": false, "label": "followOther", "isController": false}, {"data": [[1.63133526E12, 1330.5014771048711], [1.63133532E12, 329.1130030959754]], "isOverall": false, "label": "editUser", "isController": false}, {"data": [[1.63133514E12, 1006.3385000000004]], "isOverall": false, "label": "reset", "isController": false}, {"data": [[1.63133514E12, 1008.3944999999982]], "isOverall": false, "label": "getUserByUserId", "isController": false}, {"data": [[1.63133508E12, 1005.8487437185931], [1.63133514E12, 10.0]], "isOverall": false, "label": "signup", "isController": false}, {"data": [[1.63133538E12, 990.3907928388725], [1.63133532E12, 1870.7555555555555]], "isOverall": false, "label": "unFollowOther", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63133544E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 422.0, "minX": 1.0, "maxY": 50255.0, "series": [{"data": [[2.0, 45892.5], [3.0, 39532.09090909091], [4.0, 45647.666666666664], [5.0, 41110.0], [6.0, 36540.5], [7.0, 30365.538461538465], [9.0, 40242.50000000001], [10.0, 25964.35714285714], [11.0, 41773.25], [12.0, 33373.8], [13.0, 31571.384615384617], [14.0, 25100.999999999996], [15.0, 29929.0], [16.0, 35559.333333333336], [17.0, 30390.0], [18.0, 47493.25], [19.0, 35795.0], [20.0, 34333.0], [21.0, 40739.71428571428], [22.0, 36087.222222222226], [23.0, 22328.3125], [24.0, 24518.5], [25.0, 26600.4347826087], [26.0, 33216.6], [27.0, 34416.9], [28.0, 29488.470588235294], [29.0, 45144.5], [30.0, 27177.625], [31.0, 30983.333333333332], [32.0, 25597.777777777777], [33.0, 32119.25], [35.0, 30117.20689655173], [37.0, 24917.81818181818], [36.0, 50255.0], [38.0, 32360.916666666664], [39.0, 45086.5], [41.0, 28029.0], [40.0, 31127.000000000004], [43.0, 22834.187499999996], [42.0, 33671.1], [44.0, 50248.0], [47.0, 50227.666666666664], [48.0, 34038.42857142857], [51.0, 32714.2], [50.0, 50205.5], [52.0, 40488.0], [53.0, 27806.0], [55.0, 23813.428571428572], [54.0, 30738.416666666668], [57.0, 22422.304347826084], [56.0, 20411.5], [59.0, 25612.777777777777], [58.0, 28880.717391304344], [60.0, 23162.3125], [61.0, 29485.222222222223], [63.0, 14123.333333333334], [62.0, 31447.8], [67.0, 27405.857142857145], [66.0, 33345.5], [65.0, 29422.02272727272], [64.0, 38496.0], [69.0, 20732.5], [71.0, 25502.6], [70.0, 24994.6], [68.0, 34243.5], [74.0, 18862.29411764706], [72.0, 20486.0], [75.0, 22429.0], [73.0, 23632.666666666668], [76.0, 19895.166666666664], [78.0, 28272.1052631579], [77.0, 26544.272727272724], [79.0, 22174.833333333332], [80.0, 24474.166666666664], [81.0, 30815.71428571429], [82.0, 27934.363636363632], [83.0, 19508.25], [85.0, 19485.666666666664], [87.0, 27705.15789473684], [86.0, 26565.833333333336], [84.0, 33734.4], [89.0, 26932.0], [90.0, 24854.4], [88.0, 27522.833333333332], [91.0, 29313.857142857145], [95.0, 33900.46153846154], [94.0, 36417.44444444444], [93.0, 29618.823529411766], [92.0, 24666.923076923078], [99.0, 25390.916666666668], [96.0, 40514.333333333336], [98.0, 40269.0], [97.0, 40888.0], [102.0, 21632.736842105263], [101.0, 21655.65], [100.0, 31507.3], [103.0, 22008.222222222223], [107.0, 27305.678571428572], [104.0, 28030.625], [105.0, 23260.26315789474], [106.0, 27091.333333333332], [111.0, 25540.42857142857], [110.0, 26319.5], [109.0, 21477.428571428572], [108.0, 25077.6], [113.0, 25916.0], [112.0, 23069.166666666664], [115.0, 25426.875], [114.0, 26049.714285714286], [119.0, 25413.25], [118.0, 26908.0], [117.0, 26816.08695652174], [116.0, 26103.3], [121.0, 20628.285714285714], [120.0, 24165.6], [123.0, 18212.76923076923], [122.0, 26200.5], [127.0, 28224.125], [126.0, 26976.777777777777], [124.0, 22280.76923076923], [125.0, 18641.583333333332], [134.0, 21815.125], [133.0, 21075.636363636368], [132.0, 23877.062500000004], [130.0, 25895.75], [129.0, 26834.000000000004], [128.0, 27102.36363636364], [135.0, 21694.0], [131.0, 29713.75], [143.0, 28878.444444444445], [142.0, 22818.666666666664], [141.0, 20992.666666666668], [139.0, 24507.714285714286], [138.0, 29059.0], [137.0, 22119.428571428572], [136.0, 26076.333333333336], [140.0, 23918.777777777777], [151.0, 21806.875], [150.0, 21869.4], [149.0, 22905.0], [148.0, 21859.666666666668], [146.0, 22303.153846153848], [145.0, 20963.142857142855], [144.0, 33915.85714285714], [147.0, 22893.666666666668], [157.0, 22190.2], [153.0, 27123.384615384617], [152.0, 16801.0], [159.0, 20441.21428571428], [158.0, 16813.0], [154.0, 23528.923076923074], [156.0, 34816.999999999985], [155.0, 32550.0], [167.0, 24816.666666666668], [166.0, 22255.25], [163.0, 21577.857142857145], [162.0, 23330.8], [165.0, 23964.2], [164.0, 25274.18181818182], [160.0, 37620.0], [161.0, 18652.565217391304], [175.0, 27942.999999999996], [174.0, 22710.1875], [172.0, 21472.285714285714], [171.0, 23796.052631578954], [173.0, 29832.714285714286], [170.0, 22202.571428571428], [168.0, 20317.8], [169.0, 31792.833333333336], [182.0, 22708.92], [181.0, 22920.909090909092], [179.0, 28830.2], [180.0, 26423.0], [178.0, 31553.88888888889], [177.0, 22041.473684210527], [176.0, 26807.230769230773], [183.0, 24162.80555555556], [185.0, 25884.681818181813], [189.0, 24553.352941176472], [188.0, 21482.57142857143], [187.0, 23932.25], [186.0, 26967.5], [184.0, 21749.0], [191.0, 20369.3125], [190.0, 36233.0], [194.0, 23871.8], [193.0, 13514.5], [199.0, 17951.90476190476], [198.0, 21358.454545454548], [197.0, 22740.45833333333], [196.0, 26454.666666666664], [192.0, 26620.0], [195.0, 20327.1], [202.0, 19985.8], [200.0, 24836.0], [204.0, 21042.222222222223], [203.0, 30946.166666666664], [207.0, 28646.4], [206.0, 29670.0], [205.0, 34567.5], [215.0, 22759.25], [214.0, 23723.14285714286], [211.0, 25454.5], [212.0, 23208.384615384613], [210.0, 24325.72727272727], [213.0, 23587.727272727272], [209.0, 34404.333333333336], [208.0, 36242.0], [222.0, 23458.444444444445], [218.0, 20352.500000000004], [217.0, 22581.666666666664], [216.0, 17344.5], [223.0, 20078.89285714285], [221.0, 24228.666666666668], [220.0, 24505.25], [219.0, 34818.0], [228.0, 19288.95652173913], [231.0, 30580.473684210527], [230.0, 23381.4], [229.0, 25201.5], [227.0, 22734.8], [226.0, 29694.999999999996], [225.0, 32503.0], [224.0, 33216.5], [238.0, 13879.272727272728], [236.0, 24426.6], [235.0, 27729.333333333332], [239.0, 29409.0], [237.0, 23673.6], [234.0, 24401.294117647056], [233.0, 34266.0], [232.0, 21698.153846153848], [242.0, 16578.166666666668], [241.0, 23745.769230769234], [240.0, 22713.625], [244.0, 22656.16], [243.0, 19291.095238095237], [247.0, 35447.0], [246.0, 34002.5], [245.0, 34261.0], [252.0, 19279.545454545452], [249.0, 15815.0], [251.0, 23182.727272727272], [254.0, 20140.941176470587], [253.0, 24156.71428571429], [255.0, 31252.5], [250.0, 34478.0], [248.0, 32790.5], [268.0, 23653.600000000002], [267.0, 23423.5], [266.0, 27701.5], [265.0, 27349.0], [264.0, 22063.285714285717], [263.0, 28591.0], [257.0, 28184.8], [256.0, 34224.0], [259.0, 21047.5], [258.0, 24497.666666666668], [262.0, 21333.777777777777], [271.0, 26494.25], [270.0, 33862.333333333336], [269.0, 32745.0], [261.0, 26436.875000000004], [260.0, 23025.10344827586], [275.0, 17880.083333333336], [279.0, 22647.22222222222], [280.0, 10970.294117647058], [287.0, 29002.75], [281.0, 29979.5], [283.0, 24453.0], [282.0, 25854.0], [278.0, 19782.000000000004], [276.0, 9675.888888888889], [277.0, 25241.214285714283], [274.0, 17415.499999999996], [273.0, 22124.375], [272.0, 20329.75], [286.0, 24005.727272727276], [284.0, 23009.777777777777], [285.0, 30915.25], [301.0, 16926.8], [302.0, 10716.76], [303.0, 25892.6], [300.0, 18850.0], [291.0, 21986.4], [290.0, 23254.5], [288.0, 28225.571428571428], [289.0, 24453.14285714286], [299.0, 29810.722222222223], [298.0, 19271.421052631576], [297.0, 28727.866666666665], [296.0, 27653.4], [295.0, 23751.0], [294.0, 26505.666666666668], [293.0, 28163.533333333336], [292.0, 23495.166666666664], [318.0, 13943.0], [319.0, 9285.133333333333], [317.0, 21297.6], [316.0, 4923.0], [315.0, 23983.33333333333], [314.0, 19141.0], [313.0, 18030.363636363632], [312.0, 11523.076923076924], [311.0, 21044.5], [305.0, 27028.5], [304.0, 29029.333333333332], [307.0, 29173.333333333332], [306.0, 25009.333333333332], [310.0, 27614.5], [309.0, 22009.714285714286], [308.0, 22928.437499999993], [333.0, 23231.052631578947], [326.0, 18837.05263157895], [331.0, 23518.071428571428], [330.0, 25063.142857142855], [327.0, 25991.75], [320.0, 20636.000000000004], [322.0, 19432.555555555555], [321.0, 31840.14285714286], [325.0, 21598.85714285714], [324.0, 23647.384615384617], [334.0, 30097.9375], [335.0, 32394.0], [328.0, 22882.999999999996], [329.0, 21918.666666666668], [332.0, 25045.647058823528], [323.0, 21037.0], [339.0, 21043.0], [343.0, 26477.882352941175], [347.0, 15966.666666666666], [340.0, 14672.375], [342.0, 20561.814814814818], [341.0, 19334.30555555556], [338.0, 19894.85714285714], [337.0, 23886.5], [336.0, 31688.0], [346.0, 26332.083333333336], [344.0, 23765.2], [345.0, 31883.333333333332], [351.0, 26585.75], [350.0, 31956.5], [348.0, 31895.75], [349.0, 31838.0], [366.0, 19297.615384615387], [367.0, 18924.470588235297], [361.0, 18931.5], [360.0, 22284.285714285714], [359.0, 20251.909090909092], [357.0, 17032.6], [358.0, 22550.19047619048], [356.0, 25052.6], [354.0, 13781.5], [353.0, 31653.25], [352.0, 31550.5], [355.0, 21070.166666666664], [365.0, 17851.58536585365], [364.0, 23938.999999999996], [363.0, 22438.000000000004], [362.0, 22055.578947368424], [382.0, 17288.31818181818], [369.0, 21094.42857142857], [375.0, 8621.333333333334], [374.0, 20138.25], [373.0, 20899.791666666664], [372.0, 16056.25], [371.0, 16119.782608695652], [370.0, 21179.624999999996], [368.0, 17532.888888888887], [383.0, 19883.0], [376.0, 21584.11111111111], [381.0, 16219.666666666666], [380.0, 22823.653846153844], [379.0, 21037.2], [378.0, 32037.0], [377.0, 21025.333333333332], [386.0, 18022.0], [388.0, 12549.150000000001], [387.0, 20403.0], [392.0, 18741.035714285717], [393.0, 26324.076923076922], [399.0, 26564.833333333332], [398.0, 18828.31818181818], [397.0, 24095.2], [395.0, 24901.333333333332], [394.0, 24091.0], [396.0, 26588.777777777777], [391.0, 20520.952380952385], [390.0, 22042.923076923078], [389.0, 23273.47058823529], [385.0, 20812.53846153846], [384.0, 15497.0], [403.0, 25353.5], [414.0, 16760.479999999996], [413.0, 25626.714285714286], [412.0, 23359.75], [411.0, 24523.277777777774], [408.0, 24610.090909090908], [415.0, 28104.833333333332], [409.0, 29128.11111111111], [410.0, 29613.666666666668], [407.0, 28663.11111111111], [405.0, 23163.052631578947], [406.0, 27041.285714285714], [404.0, 21082.076923076926], [402.0, 21613.428571428572], [400.0, 29591.090909090908], [401.0, 24021.6], [429.0, 21526.133333333335], [430.0, 16823.0], [420.0, 13266.166666666666], [421.0, 24287.0], [422.0, 24634.333333333336], [423.0, 27545.14285714286], [418.0, 17252.75], [417.0, 26340.5], [416.0, 20020.0], [428.0, 21045.521739130436], [419.0, 27154.75], [427.0, 21484.631578947367], [431.0, 23214.0], [426.0, 25237.222222222223], [425.0, 23160.600000000002], [424.0, 23393.444444444445], [435.0, 18679.6], [441.0, 20333.75], [443.0, 18618.53846153846], [442.0, 15782.833333333332], [438.0, 19712.100000000002], [436.0, 29260.64705882353], [437.0, 22160.777777777777], [434.0, 18357.5], [433.0, 25203.25], [439.0, 21037.0], [446.0, 18302.0], [444.0, 26008.777777777774], [445.0, 19965.5], [440.0, 22826.666666666664], [447.0, 26947.5], [460.0, 22746.833333333332], [462.0, 4979.0], [463.0, 4983.777777777778], [456.0, 28312.75], [461.0, 23765.176470588238], [459.0, 20126.750000000004], [458.0, 16462.428571428572], [455.0, 21511.529411764706], [450.0, 24273.333333333332], [449.0, 23220.0], [451.0, 18679.94736842105], [448.0, 25025.666666666664], [454.0, 19337.833333333336], [457.0, 24832.90909090909], [453.0, 24630.25], [452.0, 29694.499999999996], [479.0, 21136.166666666664], [471.0, 19201.909090909092], [468.0, 16040.75], [470.0, 19402.500000000004], [469.0, 17756.30769230769], [476.0, 27127.434782608696], [467.0, 23020.625], [466.0, 23005.0], [465.0, 24269.833333333332], [464.0, 21873.0], [475.0, 25949.25], [474.0, 25341.333333333332], [473.0, 26478.777777777777], [472.0, 21790.583333333332], [477.0, 27610.26923076923], [482.0, 17082.0], [484.0, 9269.857142857141], [485.0, 19937.2], [489.0, 17420.96], [491.0, 21916.58823529412], [490.0, 20884.375], [488.0, 20684.0], [487.0, 20062.928571428572], [486.0, 22400.363636363636], [483.0, 20517.142857142855], [492.0, 22028.6], [481.0, 18087.125], [480.0, 24198.0], [494.0, 21405.75], [493.0, 26881.772727272728], [511.0, 26163.5], [505.0, 18864.2], [506.0, 19800.6], [504.0, 18132.75], [503.0, 10950.636363636364], [502.0, 26407.52380952381], [496.0, 9688.5], [508.0, 22181.5], [510.0, 20633.7], [499.0, 28071.05], [498.0, 31230.5], [497.0, 31061.571428571428], [507.0, 21045.6], [501.0, 21357.636363636364], [500.0, 20550.000000000004], [540.0, 20467.62857142857], [528.0, 21089.916666666664], [530.0, 23625.866666666665], [534.0, 21878.71428571429], [532.0, 24695.3], [542.0, 14990.666666666666], [538.0, 19346.0], [536.0, 17843.14285714286], [512.0, 21035.333333333332], [514.0, 22139.777777777777], [518.0, 23473.75], [516.0, 21038.5], [524.0, 29010.2], [526.0, 24306.0], [522.0, 21165.428571428572], [520.0, 21966.666666666664], [546.0, 20816.06666666667], [558.0, 21997.81818181818], [544.0, 23457.75], [550.0, 16441.0], [562.0, 23610.499999999996], [560.0, 24854.4], [574.0, 16655.30769230769], [572.0, 19988.312499999996], [564.0, 21033.88888888889], [566.0, 23416.25], [570.0, 19909.4], [568.0, 31122.0], [556.0, 22273.4375], [554.0, 18988.115384615376], [552.0, 23098.875000000004], [606.0, 25486.363636363636], [600.0, 17840.0], [594.0, 23093.25], [592.0, 19808.25], [602.0, 15341.871794871793], [604.0, 21962.285714285714], [598.0, 11889.615384615385], [596.0, 16642.14285714286], [580.0, 18201.75], [576.0, 25783.25], [578.0, 30529.0], [582.0, 20300.88888888889], [590.0, 14639.8], [588.0, 18707.44444444445], [586.0, 13985.5], [584.0, 27835.25], [638.0, 15904.433333333329], [632.0, 19295.03125], [636.0, 21042.0], [634.0, 19515.5], [628.0, 6540.099999999999], [630.0, 21874.1], [626.0, 22573.727272727272], [624.0, 18390.5], [618.0, 24201.066666666666], [616.0, 27085.0], [614.0, 20581.166666666664], [612.0, 18256.195121951227], [610.0, 23955.0], [620.0, 22565.727272727272], [608.0, 25242.5], [622.0, 22169.7], [664.0, 18041.0], [656.0, 13853.500000000002], [670.0, 18852.444444444445], [658.0, 21902.454545454548], [660.0, 18328.5], [662.0, 21022.70588235294], [644.0, 13239.0], [646.0, 24412.769230769227], [648.0, 21500.0], [650.0, 20159.53846153846], [642.0, 22713.8], [652.0, 21057.555555555555], [640.0, 16660.0], [668.0, 21035.85714285714], [666.0, 28256.0], [696.0, 18469.0], [700.0, 13951.263157894738], [694.0, 23197.307692307688], [702.0, 23197.0], [690.0, 22383.933333333334], [688.0, 22297.857142857145], [692.0, 21049.428571428572], [698.0, 18462.333333333332], [678.0, 21042.764705882357], [676.0, 13309.689655172417], [674.0, 18480.615384615387], [672.0, 25752.25], [682.0, 23186.86666666667], [684.0, 22038.916666666668], [686.0, 25682.5], [680.0, 21039.714285714286], [732.0, 21795.0], [712.0, 21120.896551724134], [726.0, 18910.3], [724.0, 13660.166666666666], [734.0, 17885.500000000004], [718.0, 21452.21428571429], [706.0, 27466.5], [704.0, 21040.5], [708.0, 25216.0], [728.0, 21762.75], [710.0, 26257.0], [730.0, 21754.75], [722.0, 21340.727272727272], [720.0, 22769.8], [716.0, 21803.272727272728], [714.0, 21035.285714285714], [760.0, 20612.25], [766.0, 20819.846153846152], [752.0, 22066.333333333332], [754.0, 22581.666666666664], [762.0, 21800.875], [756.0, 14464.409090909088], [758.0, 22299.684210526317], [744.0, 11534.558823529409], [746.0, 15040.0], [742.0, 21914.105263157893], [740.0, 18647.0], [736.0, 22475.75], [738.0, 22414.545454545456], [750.0, 23220.833333333332], [748.0, 29638.0], [764.0, 22139.399999999998], [768.0, 18674.285714285717], [776.0, 21036.5], [778.0, 21801.363636363636], [774.0, 19899.230769230766], [772.0, 12849.8], [770.0, 20257.8], [782.0, 14556.291666666666], [780.0, 13596.594594594597], [792.0, 11170.5], [786.0, 10924.566666666668], [790.0, 23883.0], [784.0, 12136.0], [798.0, 21800.0], [794.0, 21025.0], [806.0, 21054.0], [814.0, 20230.899999999998], [808.0, 21579.533333333333], [810.0, 21053.8], [812.0, 21049.85], [828.0, 961.0], [830.0, 25156.5], [824.0, 25894.285714285717], [826.0, 29749.5], [804.0, 21214.46153846154], [802.0, 16537.722222222223], [800.0, 18764.500000000004], [820.0, 20510.714285714286], [818.0, 25369.666666666668], [816.0, 15385.0], [822.0, 21042.5], [838.0, 15495.0], [832.0, 22418.833333333336], [856.0, 23074.874999999996], [858.0, 23661.5], [860.0, 21052.375], [854.0, 21902.263157894737], [852.0, 26606.57142857143], [862.0, 19251.14285714286], [848.0, 21050.846153846156], [842.0, 23171.333333333332], [840.0, 15145.57142857143], [846.0, 21036.333333333336], [844.0, 26634.666666666668], [834.0, 18453.576923076922], [836.0, 21044.333333333332], [888.0, 21809.3], [880.0, 19806.857142857145], [894.0, 12842.857142857143], [890.0, 11406.76923076923], [870.0, 22376.0], [868.0, 8175.099999999999], [892.0, 22786.333333333332], [866.0, 9413.333333333334], [864.0, 14611.714285714284], [884.0, 14619.722222222223], [886.0, 19342.933333333334], [882.0, 15544.666666666666], [878.0, 16919.25], [874.0, 15295.733333333332], [872.0, 21370.923076923074], [876.0, 21033.25], [910.0, 18730.8], [908.0, 15262.55], [906.0, 13300.142857142857], [904.0, 14087.119999999999], [896.0, 18955.363636363636], [902.0, 18143.040000000005], [924.0, 21038.666666666668], [926.0, 23546.25], [922.0, 22949.75], [920.0, 7537.4], [912.0, 14961.235294117647], [916.0, 12734.5], [918.0, 21046.769230769227], [914.0, 22214.8], [900.0, 18542.6], [898.0, 26005.333333333332], [952.0, 15672.457142857138], [946.0, 5221.375000000001], [934.0, 21600.30769230769], [932.0, 21751.399999999998], [942.0, 19668.7], [930.0, 21031.0], [954.0, 21520.200000000004], [956.0, 21308.714285714283], [948.0, 12730.692307692309], [950.0, 18544.727272727272], [940.0, 6378.11111111111], [938.0, 13700.055555555551], [936.0, 5236.0], [958.0, 23735.6], [944.0, 18523.857142857145], [990.0, 21429.593749999996], [984.0, 7290.0], [982.0, 11829.916666666668], [970.0, 11572.724137931036], [968.0, 18296.666666666668], [978.0, 21057.0], [976.0, 20869.0], [980.0, 21055.11111111111], [988.0, 23015.388888888887], [986.0, 20858.0], [962.0, 13243.0], [964.0, 18104.8], [972.0, 21047.833333333332], [960.0, 23322.5], [974.0, 23557.571428571428], [1022.0, 17533.8], [1018.0, 11452.692307692309], [1020.0, 22009.85714285714], [1008.0, 18697.42857142857], [1014.0, 14325.600000000002], [1012.0, 22245.600000000002], [1010.0, 24817.4], [1004.0, 11868.916666666666], [1006.0, 24425.0], [1000.0, 15124.222222222224], [1002.0, 21061.916666666668], [1016.0, 21438.999999999996], [996.0, 9912.384615384615], [998.0, 10749.4], [994.0, 24436.5], [992.0, 21452.35294117647], [1080.0, 18221.333333333332], [1032.0, 15215.333333333334], [1084.0, 22984.333333333332], [1064.0, 20732.600000000002], [1068.0, 22630.75], [1060.0, 11485.458333333334], [1056.0, 18347.75], [1036.0, 11321.05], [1072.0, 21035.75], [1076.0, 21651.222222222223], [1028.0, 9205.222222222223], [1024.0, 7786.090909090909], [1052.0, 15089.333333333332], [1048.0, 21053.57142857143], [1044.0, 21034.0], [1040.0, 24123.0], [1096.0, 18659.833333333336], [1140.0, 10005.5], [1100.0, 9192.772727272728], [1136.0, 15186.4], [1092.0, 17023.4], [1088.0, 22683.14285714286], [1116.0, 8743.615384615385], [1108.0, 15264.857142857143], [1112.0, 21041.999999999996], [1104.0, 17213.687499999996], [1120.0, 7784.700000000001], [1148.0, 14430.7], [1144.0, 21454.789473684214], [1124.0, 16333.473684210527], [1128.0, 12590.77777777778], [1132.0, 15152.5], [1160.0, 17013.812500000004], [1188.0, 10901.142857142857], [1156.0, 18653.916666666668], [1152.0, 13357.375], [1192.0, 17270.9375], [1196.0, 19960.5], [1184.0, 6331.4], [1212.0, 21047.916666666664], [1204.0, 21054.0], [1164.0, 21047.333333333332], [1200.0, 20241.333333333332], [1180.0, 15716.666666666666], [1176.0, 16003.199999999999], [1172.0, 19012.571428571428], [1168.0, 19054.466666666667], [1268.0, 6843.5], [1248.0, 20101.75], [1276.0, 5511.0], [1272.0, 16118.722222222223], [1264.0, 6844.666666666667], [1256.0, 21051.999999999996], [1260.0, 21051.5], [1216.0, 8035.875000000001], [1240.0, 21311.095238095237], [1244.0, 19291.529411764706], [1236.0, 21030.3], [1232.0, 21028.75], [1220.0, 19640.75], [1224.0, 13376.371428571425], [1284.0, 16411.782608695652], [1292.0, 17248.23809523809], [1288.0, 20810.454545454544], [1328.0, 14293.777777777777], [1340.0, 19794.6], [1336.0, 21040.777777777777], [1332.0, 21094.894736842103], [1280.0, 17389.0625], [1308.0, 21052.5], [1304.0, 21057.714285714286], [1300.0, 20979.7], [1296.0, 19577.899999999998], [1312.0, 17660.6], [1316.0, 19843.714285714286], [1320.0, 15182.875], [1324.0, 21047.0], [1396.0, 13182.7], [1392.0, 11508.538461538461], [1356.0, 21057.0], [1400.0, 18689.384615384617], [1404.0, 7253.0], [1376.0, 11425.111111111111], [1380.0, 18092.5], [1384.0, 19193.2], [1344.0, 18405.833333333336], [1352.0, 21055.636363636364], [1348.0, 21046.26923076923], [1372.0, 19487.785714285714], [1368.0, 15534.6], [1364.0, 16833.5], [1360.0, 15289.181818181816], [1388.0, 8927.5], [1456.0, 18212.931034482757], [1460.0, 21022.0], [1464.0, 17895.30769230769], [1444.0, 17452.904761904763], [1440.0, 21034.952380952378], [1468.0, 19212.16129032258], [1448.0, 13458.90909090909], [1420.0, 7654.900000000001], [1416.0, 16277.142857142859], [1412.0, 19043.875], [1408.0, 20071.8], [1436.0, 13735.882352941177], [1428.0, 16586.185185185182], [1432.0, 6585.5], [1424.0, 21042.666666666668], [1528.0, 9674.0], [1504.0, 13856.2], [1516.0, 19411.375], [1512.0, 21042.823529411762], [1508.0, 15902.888888888885], [1532.0, 13061.888888888889], [1524.0, 12821.555555555555], [1520.0, 10621.333333333332], [1496.0, 11103.166666666666], [1500.0, 21036.42857142857], [1472.0, 19630.565217391308], [1476.0, 21045.27272727273], [1484.0, 11598.333333333332], [1480.0, 21051.0], [1492.0, 19992.333333333332], [1488.0, 17706.8], [1596.0, 15663.4], [1572.0, 9677.333333333332], [1580.0, 18561.484848484848], [1568.0, 20230.733333333337], [1576.0, 18786.142857142855], [1584.0, 8150.599999999999], [1592.0, 14925.4], [1588.0, 21064.0], [1552.0, 18663.95], [1544.0, 14856.153846153846], [1540.0, 16310.166666666668], [1556.0, 21047.5], [1536.0, 15530.39285714286], [1564.0, 21032.0], [1560.0, 18097.782608695652], [1548.0, 15392.277777777776], [1652.0, 12313.875], [1644.0, 19088.91666666667], [1648.0, 12577.545454545454], [1612.0, 21033.214285714283], [1624.0, 19938.666666666664], [1628.0, 16931.833333333336], [1600.0, 21037.5], [1604.0, 21057.0], [1620.0, 21039.2], [1660.0, 21039.6875], [1656.0, 16873.9375], [1632.0, 18020.150000000005], [1636.0, 7393.142857142857], [1640.0, 16321.588235294115], [1608.0, 16453.666666666668], [1672.0, 19022.375], [1700.0, 17724.65384615384], [1708.0, 21036.81818181818], [1664.0, 21051.875], [1692.0, 14505.666666666666], [1688.0, 14017.714285714288], [1668.0, 13855.75], [1712.0, 21045.4], [1676.0, 21299.222222222223], [1716.0, 15561.083333333334], [1696.0, 11448.250000000002], [1724.0, 21035.352941176472], [1720.0, 20278.153846153848], [1684.0, 5334.685714285714], [1680.0, 7523.0], [1784.0, 8207.631578947368], [1736.0, 15617.375], [1740.0, 13349.5], [1788.0, 16629.75], [1764.0, 5367.307692307692], [1760.0, 19298.3], [1768.0, 11710.642857142857], [1772.0, 18368.0], [1780.0, 3880.8571428571427], [1776.0, 21046.571428571428], [1732.0, 16864.333333333332], [1756.0, 19499.625], [1728.0, 21043.0], [1752.0, 11441.611111111111], [1748.0, 9086.857142857143], [1744.0, 12515.142857142857], [1796.0, 9957.666666666666], [1844.0, 14087.0], [1816.0, 5330.400000000001], [1820.0, 21044.0], [1828.0, 7644.5], [1832.0, 21041.14285714286], [1836.0, 21053.571428571428], [1792.0, 21053.333333333332], [1800.0, 17720.619047619046], [1804.0, 17701.466666666667], [1840.0, 21036.333333333332], [1848.0, 7628.333333333333], [1852.0, 6368.666666666667], [1824.0, 14493.631578947368], [1812.0, 12679.5], [1808.0, 14023.5], [1864.0, 21042.071428571428], [1916.0, 14161.5], [1912.0, 21054.0], [1908.0, 8936.5], [1904.0, 11930.857142857145], [1868.0, 21047.222222222223], [1896.0, 21041.999999999996], [1900.0, 21052.0], [1892.0, 21054.5], [1888.0, 13736.57142857143], [1860.0, 13391.07142857143], [1884.0, 11771.0], [1880.0, 21045.4], [1876.0, 6088.375], [1856.0, 16296.0], [1932.0, 11692.928571428572], [1968.0, 15501.857142857143], [1976.0, 16149.63636363636], [1952.0, 15920.6], [1980.0, 6300.529411764706], [1956.0, 6211.5714285714275], [1924.0, 17029.05882352941], [1928.0, 21035.600000000002], [1920.0, 13719.375], [1972.0, 21041.5], [1948.0, 14220.2], [1944.0, 21032.2], [1936.0, 20094.300000000003], [1940.0, 12413.0], [1960.0, 16403.071428571428], [1964.0, 5538.0], [2000.0, 19782.51724137931], [1996.0, 12015.25], [1988.0, 8768.42857142857], [1992.0, 21024.0], [1077.0, 8700.55], [1037.0, 14720.857142857141], [1073.0, 24143.75], [1069.0, 17958.36363636364], [1065.0, 11946.09756097561], [1061.0, 14926.971428571429], [1057.0, 15317.285714285716], [1081.0, 21040.0], [1085.0, 27104.0], [1033.0, 18657.6], [1029.0, 14668.07142857143], [1025.0, 7115.428571428572], [1053.0, 16847.117647058825], [1049.0, 19608.952380952378], [1045.0, 23964.0], [1041.0, 27712.0], [1093.0, 19406.352941176472], [1137.0, 11074.5], [1097.0, 15755.285714285716], [1101.0, 13591.285714285714], [1089.0, 21985.5], [1117.0, 3024.6666666666665], [1109.0, 18477.916666666664], [1113.0, 7814.809523809525], [1105.0, 10784.0], [1141.0, 12058.533333333333], [1121.0, 18302.666666666664], [1149.0, 16026.0], [1145.0, 12636.250000000002], [1129.0, 11588.782608695652], [1125.0, 23805.5], [1133.0, 21009.633333333335], [1161.0, 20384.52941176471], [1213.0, 19281.0], [1157.0, 21043.75], [1201.0, 20779.375], [1165.0, 21252.38235294118], [1205.0, 20138.000000000004], [1209.0, 8067.642857142856], [1153.0, 10547.090909090908], [1193.0, 16816.666666666668], [1197.0, 21047.777777777777], [1189.0, 12512.142857142857], [1185.0, 16602.571428571428], [1181.0, 15437.666666666664], [1177.0, 20200.75], [1173.0, 21043.583333333332], [1169.0, 9407.166666666668], [1273.0, 10345.1], [1277.0, 6591.043478260869], [1269.0, 20255.666666666668], [1265.0, 13022.857142857143], [1225.0, 21061.0], [1261.0, 16319.333333333334], [1249.0, 17253.615384615383], [1253.0, 20316.655172413793], [1257.0, 21042.5], [1241.0, 21053.25], [1237.0, 21029.375], [1233.0, 21026.75], [1217.0, 12030.866666666669], [1245.0, 13631.769230769232], [1221.0, 19394.499999999996], [1333.0, 4213.5], [1317.0, 17832.952380952378], [1321.0, 15410.666666666666], [1329.0, 18537.166666666668], [1341.0, 20538.699999999997], [1293.0, 9068.058823529413], [1289.0, 18030.0], [1285.0, 20489.76], [1281.0, 13171.090909090908], [1309.0, 21040.333333333332], [1305.0, 8832.6], [1297.0, 8000.4], [1301.0, 21043.0], [1313.0, 17664.0], [1325.0, 13125.235294117647], [1401.0, 16163.785714285716], [1397.0, 16076.5], [1405.0, 6997.6], [1381.0, 16708.176470588234], [1385.0, 14140.42857142857], [1377.0, 17077.642857142855], [1393.0, 18898.666666666668], [1345.0, 14007.750000000002], [1353.0, 4211.5], [1357.0, 8264.125], [1349.0, 5984.499999999999], [1373.0, 17686.090909090908], [1369.0, 21036.5], [1365.0, 18940.083333333332], [1361.0, 17878.0], [1389.0, 18565.499999999996], [1457.0, 10371.210526315788], [1441.0, 21041.800000000003], [1461.0, 21048.1], [1469.0, 21044.0], [1465.0, 10109.666666666666], [1449.0, 4347.0], [1445.0, 15525.5625], [1417.0, 17688.0], [1421.0, 19155.666666666668], [1413.0, 20166.733333333334], [1409.0, 17462.741935483868], [1437.0, 20419.428571428572], [1433.0, 16233.666666666668], [1425.0, 21039.541666666664], [1429.0, 6603.5], [1453.0, 4353.0], [1533.0, 8160.076923076923], [1521.0, 17727.153846153844], [1517.0, 8491.636363636362], [1513.0, 21042.333333333332], [1509.0, 19936.64285714286], [1505.0, 21049.0], [1529.0, 15113.782608695654], [1525.0, 13597.875], [1497.0, 10390.636363636362], [1501.0, 20313.928571428572], [1477.0, 15552.75], [1473.0, 19847.53846153846], [1481.0, 19116.2], [1485.0, 15893.166666666668], [1493.0, 12697.0], [1489.0, 17492.75], [1541.0, 18017.200000000004], [1593.0, 17484.774999999998], [1569.0, 15006.0], [1597.0, 15993.0], [1573.0, 21041.952380952385], [1577.0, 7051.9473684210525], [1565.0, 15622.0], [1557.0, 19422.578947368424], [1553.0, 21046.666666666668], [1537.0, 21038.0], [1549.0, 17717.21428571429], [1545.0, 6240.647058823531], [1589.0, 18004.1], [1585.0, 21048.0], [1581.0, 19742.69230769231], [1601.0, 6775.111111111111], [1649.0, 14192.111111111111], [1625.0, 6944.461538461539], [1621.0, 21042.0], [1617.0, 19037.5], [1629.0, 19324.666666666668], [1605.0, 21055.6], [1653.0, 21043.333333333332], [1657.0, 21034.75], [1661.0, 21041.125], [1641.0, 11522.466666666665], [1645.0, 21028.444444444445], [1637.0, 14989.307692307691], [1633.0, 21034.14285714286], [1613.0, 16281.406249999998], [1609.0, 11965.5], [1669.0, 11934.6], [1701.0, 14542.076923076922], [1709.0, 15870.666666666668], [1705.0, 21028.0], [1697.0, 17799.5], [1693.0, 20223.124999999996], [1689.0, 8104.333333333333], [1665.0, 21038.555555555555], [1673.0, 16805.25], [1677.0, 21639.625], [1713.0, 19744.55], [1717.0, 11788.888888888889], [1725.0, 20162.714285714283], [1721.0, 8891.538461538463], [1681.0, 19624.916666666664], [1685.0, 13301.5], [1781.0, 16625.166666666668], [1761.0, 19618.76923076923], [1785.0, 16359.75], [1789.0, 21053.0], [1765.0, 17919.0], [1773.0, 11160.529411764706], [1777.0, 11222.5], [1741.0, 11808.166666666668], [1737.0, 17276.68421052632], [1733.0, 18926.904761904763], [1757.0, 13283.2], [1729.0, 21049.555555555555], [1749.0, 18257.636363636364], [1753.0, 19820.2], [1745.0, 11464.666666666666], [1845.0, 11470.142857142857], [1829.0, 7621.52], [1833.0, 21048.875], [1837.0, 21040.666666666668], [1825.0, 14829.666666666664], [1841.0, 19925.583333333332], [1849.0, 18790.052631578943], [1853.0, 13388.285714285716], [1797.0, 13959.7], [1805.0, 11949.8], [1801.0, 17928.85714285714], [1813.0, 17051.428571428572], [1817.0, 19473.44444444445], [1821.0, 21046.25], [1809.0, 16147.210526315788], [1869.0, 21048.30769230769], [1913.0, 21037.0], [1909.0, 14545.4], [1905.0, 4882.900000000001], [1917.0, 21053.285714285717], [1865.0, 21046.0], [1857.0, 21037.2], [1861.0, 13401.666666666666], [1885.0, 15606.526315789471], [1893.0, 21037.0], [1901.0, 21050.0], [1897.0, 21051.0], [1889.0, 19642.5], [1873.0, 21041.285714285714], [1881.0, 19960.555555555555], [1877.0, 21053.0], [1929.0, 14769.136363636366], [1973.0, 12523.75], [1969.0, 3975.5], [1933.0, 19726.461538461535], [1925.0, 21042.0], [1921.0, 11884.571428571431], [1949.0, 17023.647058823528], [1945.0, 21038.100000000002], [1941.0, 18591.428571428572], [1937.0, 12620.695652173912], [1965.0, 21030.866666666665], [1953.0, 8619.75], [1981.0, 20035.16666666667], [1977.0, 3067.0], [1957.0, 7745.5714285714275], [1961.0, 5522.666666666667], [1997.0, 11201.454545454546], [1989.0, 5608.076923076924], [1985.0, 12099.166666666668], [1993.0, 21027.0], [539.0, 19397.473684210523], [543.0, 18878.8125], [529.0, 25958.999999999996], [533.0, 24201.499999999996], [535.0, 22190.375000000004], [531.0, 22979.85714285714], [541.0, 15563.714285714286], [537.0, 16475.25], [525.0, 22816.909090909092], [527.0, 26508.11111111111], [513.0, 22259.375000000004], [517.0, 23701.454545454544], [515.0, 17309.75], [519.0, 21041.222222222223], [523.0, 22706.444444444445], [521.0, 25919.5], [547.0, 5172.777777777777], [555.0, 19735.89473684211], [549.0, 16759.333333333332], [545.0, 24794.0], [559.0, 22291.714285714286], [573.0, 19203.61538461538], [565.0, 24851.4], [567.0, 30559.0], [563.0, 22624.14285714286], [575.0, 21026.0], [561.0, 23025.230769230766], [571.0, 23837.57142857143], [569.0, 22404.714285714286], [551.0, 16583.428571428572], [557.0, 19825.684210526313], [553.0, 18466.590909090915], [603.0, 21038.538461538465], [607.0, 22712.307692307695], [593.0, 20645.899999999998], [595.0, 21938.105263157893], [601.0, 21038.25], [605.0, 22743.25], [597.0, 22680.4], [599.0, 22119.333333333332], [591.0, 16399.210526315786], [577.0, 22608.5], [579.0, 30537.0], [581.0, 24379.333333333332], [583.0, 19674.636363636368], [589.0, 19840.94444444444], [587.0, 15838.714285714284], [585.0, 18747.2], [633.0, 22633.571428571428], [615.0, 19812.909090909092], [613.0, 24505.076923076922], [611.0, 27403.857142857145], [635.0, 18717.6], [637.0, 19883.5], [627.0, 21049.0], [631.0, 22034.555555555555], [629.0, 25976.2], [625.0, 27395.81818181818], [639.0, 23675.0], [617.0, 15215.0], [609.0, 15360.125], [619.0, 26354.333333333332], [623.0, 23751.333333333332], [621.0, 17935.399999999998], [645.0, 22817.2], [665.0, 18217.000000000004], [661.0, 15495.133333333331], [659.0, 13039.5], [657.0, 22607.266666666666], [663.0, 19418.833333333336], [651.0, 14379.9], [647.0, 22039.619047619046], [649.0, 19415.708333333332], [643.0, 19904.83333333334], [641.0, 23421.5], [653.0, 21289.454545454548], [655.0, 21026.0], [669.0, 21052.5], [671.0, 21054.5], [667.0, 19963.75], [697.0, 19883.384615384617], [703.0, 17348.11111111111], [693.0, 17054.166666666668], [695.0, 21709.153846153844], [689.0, 16478.466666666667], [691.0, 25413.5], [699.0, 19875.285714285717], [701.0, 29714.0], [677.0, 16865.899999999998], [679.0, 19835.0], [675.0, 23412.4], [673.0, 14968.4], [683.0, 21840.812500000004], [681.0, 23334.312500000004], [687.0, 21842.307692307695], [685.0, 22794.0], [729.0, 22662.0], [731.0, 21472.166666666668], [733.0, 29608.0], [735.0, 3736.0], [727.0, 8889.692307692307], [725.0, 25334.0], [717.0, 10932.307692307693], [707.0, 18869.428571428572], [705.0, 21046.0], [719.0, 23285.374999999996], [711.0, 21039.5], [709.0, 23933.0], [721.0, 17468.0], [723.0, 30290.0], [713.0, 17268.263157894737], [715.0, 14778.395833333338], [767.0, 13550.7], [761.0, 9911.666666666666], [753.0, 21571.0], [763.0, 15785.615384615387], [759.0, 14087.833333333334], [757.0, 17481.0], [755.0, 20065.083333333332], [745.0, 22509.73913043478], [747.0, 22284.85714285714], [749.0, 18643.8], [743.0, 19554.8125], [741.0, 21988.777777777777], [751.0, 20251.583333333332], [737.0, 23169.25], [739.0, 23911.666666666668], [765.0, 20772.590909090915], [769.0, 18730.296296296296], [771.0, 12080.5], [779.0, 15979.526315789473], [777.0, 15315.375], [775.0, 14549.5], [773.0, 23355.6], [783.0, 17801.823529411766], [781.0, 17950.750000000004], [791.0, 22565.25], [789.0, 21055.818181818184], [787.0, 29631.5], [785.0, 19446.399999999994], [799.0, 9833.304347826086], [797.0, 29756.25], [795.0, 23183.625], [825.0, 21040.733333333334], [831.0, 11674.777777777777], [815.0, 7761.259259259259], [813.0, 14508.8], [809.0, 18794.29411764706], [811.0, 24482.714285714286], [829.0, 25979.2], [827.0, 21048.249999999996], [807.0, 22112.5], [805.0, 21570.117647058825], [803.0, 21326.5], [801.0, 22516.5], [819.0, 16717.923076923078], [817.0, 10844.588235294119], [823.0, 15922.0], [821.0, 18748.8], [859.0, 18631.5], [863.0, 8976.125], [847.0, 12789.75], [835.0, 18140.5], [837.0, 26034.6], [833.0, 8982.035714285714], [839.0, 15983.75], [857.0, 21051.0], [861.0, 23174.25], [855.0, 16205.277777777777], [853.0, 21044.0], [851.0, 21052.818181818184], [849.0, 21067.2], [843.0, 17014.941176470587], [845.0, 23738.0], [841.0, 21044.0], [891.0, 15182.666666666666], [895.0, 9458.454545454546], [893.0, 12220.833333333332], [889.0, 19000.714285714286], [871.0, 21808.09090909091], [869.0, 13300.289473684206], [867.0, 9641.1], [865.0, 5748.25], [885.0, 24536.222222222223], [887.0, 22197.833333333336], [883.0, 16544.181818181816], [881.0, 20362.64285714285], [879.0, 13022.3], [875.0, 22307.833333333336], [873.0, 21817.909090909092], [877.0, 24122.0], [911.0, 19650.923076923078], [905.0, 14357.222222222223], [907.0, 8098.384615384617], [909.0, 15647.961538461535], [901.0, 12079.0], [913.0, 19568.272727272724], [921.0, 15176.812499999998], [923.0, 21122.583333333336], [925.0, 22579.428571428572], [927.0, 22754.4], [903.0, 19438.249999999996], [919.0, 21210.9], [917.0, 23752.666666666668], [899.0, 11896.25], [897.0, 10775.25], [955.0, 19784.3125], [935.0, 21043.4], [957.0, 15030.625], [933.0, 22844.25], [931.0, 22756.555555555555], [943.0, 21193.8], [929.0, 22655.11111111111], [941.0, 15672.55], [953.0, 18717.222222222223], [949.0, 21044.333333333332], [947.0, 16871.0], [951.0, 21498.11764705882], [939.0, 15422.555555555555], [937.0, 17610.35714285714], [959.0, 11875.666666666668], [945.0, 7293.0], [989.0, 21040.0], [971.0, 8992.3], [969.0, 20280.0], [983.0, 21602.829268292684], [979.0, 17610.235294117643], [977.0, 23735.14285714286], [991.0, 23195.333333333332], [981.0, 22303.833333333332], [987.0, 20912.5], [985.0, 21036.0], [975.0, 11207.285714285714], [973.0, 21042.928571428572], [965.0, 19043.785714285717], [961.0, 21047.0], [963.0, 27366.0], [967.0, 22020.0], [1009.0, 12403.0], [1023.0, 17675.0], [1013.0, 20948.375000000004], [1015.0, 21453.083333333336], [1011.0, 18918.750000000004], [1007.0, 9951.357142857141], [1001.0, 10261.33333333333], [1003.0, 22684.624999999996], [1005.0, 22539.88888888889], [999.0, 13620.15], [1017.0, 21038.0], [993.0, 24108.0], [995.0, 28234.0], [997.0, 14494.375], [1019.0, 20883.909090909092], [1021.0, 19436.46153846154], [1078.0, 21577.039999999994], [1074.0, 12825.0], [1038.0, 26989.0], [1082.0, 24499.6], [1066.0, 15823.125], [1062.0, 20700.625], [1058.0, 19792.25], [1086.0, 11389.125], [1034.0, 422.0], [1030.0, 15994.642857142857], [1026.0, 7382.333333333333], [1054.0, 12121.9], [1050.0, 23975.5], [1046.0, 18699.285714285714], [1042.0, 21032.0], [1090.0, 21516.363636363636], [1098.0, 16673.5], [1138.0, 5830.0], [1102.0, 19428.0], [1094.0, 20162.533333333333], [1118.0, 11936.5], [1114.0, 9752.4], [1110.0, 19982.384615384613], [1106.0, 14499.24], [1146.0, 15046.6], [1150.0, 16243.818181818182], [1142.0, 21604.666666666668], [1122.0, 18866.600000000002], [1126.0, 14224.928571428574], [1134.0, 14040.333333333332], [1130.0, 15955.22222222222], [1206.0, 20315.56], [1186.0, 4764.933333333333], [1158.0, 18415.0], [1194.0, 9478.666666666668], [1198.0, 20666.75], [1190.0, 11742.666666666666], [1214.0, 21048.75], [1210.0, 18970.874999999996], [1202.0, 20170.25], [1166.0, 21046.0], [1182.0, 5992.0], [1154.0, 22611.5], [1178.0, 12654.625], [1174.0, 21037.600000000002], [1170.0, 16411.714285714286], [1278.0, 5224.6], [1270.0, 20304.315789473683], [1266.0, 15762.75], [1230.0, 21061.0], [1226.0, 21047.5], [1274.0, 18109.041666666668], [1250.0, 8430.649999999998], [1262.0, 18006.0], [1258.0, 21050.5], [1254.0, 17526.411764705877], [1246.0, 12353.714285714286], [1242.0, 21046.666666666664], [1238.0, 21057.0], [1234.0, 21039.826086956524], [1218.0, 16232.999999999998], [1222.0, 15766.117647058822], [1290.0, 12245.0], [1294.0, 14487.5], [1338.0, 9022.8], [1334.0, 15202.461538461537], [1330.0, 21046.875], [1342.0, 20930.315789473683], [1286.0, 16809.416666666668], [1282.0, 9770.833333333334], [1302.0, 20895.70588235294], [1310.0, 11563.0], [1306.0, 21051.0], [1298.0, 21048.5], [1314.0, 17286.333333333332], [1322.0, 19744.46153846154], [1326.0, 21049.125], [1318.0, 14176.119999999999], [1398.0, 13496.416666666668], [1406.0, 13980.8], [1382.0, 10930.375], [1378.0, 19034.13043478261], [1386.0, 19282.9], [1394.0, 10701.8], [1358.0, 21044.0], [1374.0, 12962.166666666666], [1354.0, 7130.0], [1350.0, 21067.0], [1346.0, 20317.09090909091], [1370.0, 14146.5], [1366.0, 11139.125000000002], [1362.0, 18931.75], [1390.0, 18861.611111111113], [1462.0, 5928.272727272728], [1458.0, 18258.41666666667], [1422.0, 21036.4], [1446.0, 4341.0], [1442.0, 19201.749999999996], [1470.0, 21043.0], [1466.0, 19720.75], [1418.0, 18959.375], [1414.0, 18211.0], [1410.0, 16305.111111111111], [1430.0, 6822.5], [1434.0, 10720.571428571428], [1438.0, 21038.5], [1426.0, 21051.5], [1454.0, 17487.11111111111], [1534.0, 21037.0], [1522.0, 18067.599999999995], [1514.0, 21037.8], [1510.0, 19624.299999999996], [1506.0, 21048.0], [1518.0, 16899.882352941175], [1530.0, 12662.0], [1526.0, 9094.5], [1498.0, 19818.000000000004], [1502.0, 13856.0], [1478.0, 4931.0], [1474.0, 20838.222222222223], [1482.0, 19079.41176470588], [1486.0, 10356.857142857143], [1494.0, 19059.714285714283], [1490.0, 16022.074074074073], [1594.0, 4351.666666666667], [1598.0, 21035.5], [1570.0, 17990.8], [1574.0, 12252.0], [1578.0, 8242.4], [1590.0, 21041.272727272728], [1586.0, 15340.5], [1554.0, 16865.2], [1542.0, 17624.5], [1538.0, 16709.0], [1566.0, 20888.428571428572], [1558.0, 20595.2], [1546.0, 10076.1875], [1550.0, 16939.75], [1582.0, 14623.35], [1606.0, 21041.181818181816], [1646.0, 7671.923076923076], [1626.0, 19999.0], [1630.0, 17604.666666666668], [1602.0, 18535.000000000004], [1622.0, 21042.44444444444], [1618.0, 21031.166666666668], [1650.0, 19255.73333333333], [1658.0, 21036.714285714283], [1654.0, 21040.0], [1638.0, 12664.25], [1634.0, 17208.25], [1642.0, 7850.25806451613], [1610.0, 16814.95], [1614.0, 18775.434782608692], [1678.0, 9744.333333333332], [1706.0, 8422.625], [1710.0, 21030.75], [1698.0, 17750.7], [1694.0, 10636.699999999999], [1666.0, 21040.727272727272], [1690.0, 11448.25], [1686.0, 18870.333333333336], [1670.0, 13789.0], [1674.0, 17642.8], [1714.0, 16795.933333333334], [1718.0, 10533.799999999997], [1726.0, 21033.0], [1722.0, 18381.0], [1682.0, 16825.17391304348], [1786.0, 11222.058823529413], [1766.0, 21047.333333333332], [1762.0, 13400.545454545458], [1790.0, 21057.0], [1782.0, 2298.0], [1738.0, 9338.666666666668], [1742.0, 18651.230769230773], [1778.0, 21045.444444444445], [1734.0, 16650.666666666664], [1758.0, 17112.08695652174], [1730.0, 21040.333333333332], [1754.0, 8557.666666666668], [1750.0, 14684.70588235294], [1746.0, 21037.375], [1774.0, 17143.307692307688], [1770.0, 21068.0], [1806.0, 18479.409090909096], [1798.0, 7963.799999999999], [1818.0, 14501.466666666667], [1826.0, 14944.499999999998], [1830.0, 21039.0], [1834.0, 21034.312499999996], [1838.0, 21035.5], [1822.0, 10660.333333333334], [1794.0, 17890.11111111111], [1802.0, 13665.30303030303], [1842.0, 16562.666666666668], [1846.0, 16160.416666666668], [1850.0, 13535.166666666668], [1854.0, 13705.846153846154], [1810.0, 15196.5], [1814.0, 9882.666666666666], [1918.0, 7958.518518518518], [1914.0, 13892.739130434782], [1910.0, 21040.333333333332], [1906.0, 16260.0], [1870.0, 21051.399999999998], [1866.0, 21051.666666666668], [1890.0, 8341.38095238095], [1902.0, 21053.0], [1898.0, 14843.16666666667], [1894.0, 21039.875], [1878.0, 21056.25], [1874.0, 11517.6], [1886.0, 15597.076923076924], [1882.0, 16135.0], [1858.0, 18205.0], [1934.0, 14145.4], [1970.0, 3994.0344827586205], [1930.0, 12806.875], [1926.0, 21037.0], [1922.0, 18607.0], [1974.0, 10766.266666666666], [1982.0, 8926.300000000003], [1978.0, 15912.857142857143], [1950.0, 17633.6], [1946.0, 21054.333333333332], [1938.0, 19166.6], [1954.0, 12205.538461538461], [1958.0, 13292.333333333334], [1966.0, 15615.05], [1962.0, 5541.75], [1986.0, 21045.0], [1998.0, 7254.0], [1990.0, 8636.0], [1994.0, 4375.782608695652], [1079.0, 21050.5], [1059.0, 17922.5], [1071.0, 25063.666666666668], [1067.0, 24003.25], [1063.0, 21706.444444444445], [1087.0, 21039.0], [1083.0, 10119.0], [1035.0, 20940.7], [1031.0, 21645.727272727276], [1075.0, 24102.0], [1039.0, 27647.0], [1027.0, 21541.333333333332], [1055.0, 19268.22727272728], [1051.0, 18349.615384615383], [1047.0, 21816.812500000004], [1043.0, 25525.666666666668], [1095.0, 19783.0], [1099.0, 19196.466666666667], [1103.0, 7450.933333333334], [1139.0, 19929.666666666668], [1119.0, 17513.631578947367], [1091.0, 21724.444444444445], [1115.0, 14111.333333333332], [1111.0, 19671.884615384617], [1107.0, 18584.26315789474], [1143.0, 15463.714285714286], [1147.0, 17133.615384615383], [1151.0, 18540.263157894737], [1123.0, 770.6666666666666], [1135.0, 17388.076923076922], [1131.0, 25620.0], [1127.0, 22319.2], [1207.0, 21225.42857142857], [1215.0, 12133.9], [1211.0, 20645.833333333336], [1159.0, 18845.047619047622], [1167.0, 21054.0], [1203.0, 20157.0], [1163.0, 20463.666666666668], [1155.0, 19486.636363636364], [1199.0, 20289.5], [1187.0, 13941.125], [1191.0, 16342.875], [1195.0, 11569.5], [1183.0, 19853.785714285714], [1179.0, 17673.8], [1175.0, 21035.0], [1171.0, 21036.285714285714], [1267.0, 14961.142857142857], [1275.0, 11574.81818181818], [1271.0, 19511.65], [1279.0, 18679.166666666668], [1223.0, 21045.53333333333], [1263.0, 6847.5], [1259.0, 21044.5], [1255.0, 21040.277777777774], [1251.0, 20953.166666666668], [1247.0, 13612.533333333331], [1239.0, 21054.899999999998], [1243.0, 21044.363636363636], [1235.0, 21016.0], [1219.0, 9564.533333333333], [1291.0, 18936.285714285714], [1295.0, 12543.529411764708], [1331.0, 21265.52941176471], [1343.0, 19352.333333333332], [1335.0, 21050.0], [1339.0, 19005.0], [1311.0, 18626.571428571428], [1307.0, 21052.0], [1287.0, 16923.93103448276], [1283.0, 21044.300000000003], [1299.0, 21047.666666666668], [1303.0, 20658.78571428572], [1315.0, 19018.0], [1323.0, 13795.285714285716], [1327.0, 21045.875], [1319.0, 12616.833333333334], [1403.0, 4847.272727272727], [1399.0, 21051.6], [1407.0, 17207.428571428572], [1383.0, 12879.285714285714], [1387.0, 17415.0], [1379.0, 20603.058823529413], [1395.0, 12205.9], [1347.0, 14281.466666666667], [1375.0, 20486.772727272724], [1359.0, 19096.5], [1351.0, 19212.5], [1355.0, 21051.5], [1371.0, 13241.599999999999], [1367.0, 12259.227272727272], [1363.0, 19008.61290322581], [1391.0, 17685.52], [1459.0, 19085.352941176472], [1443.0, 13324.5], [1471.0, 12477.818181818182], [1463.0, 20638.399999999998], [1467.0, 19290.0], [1447.0, 13012.2], [1419.0, 13355.863636363636], [1423.0, 21044.5], [1415.0, 19641.0], [1411.0, 18350.3], [1439.0, 21049.187499999996], [1435.0, 13647.0], [1431.0, 6617.0], [1427.0, 21040.0], [1455.0, 18258.083333333332], [1451.0, 17333.555555555555], [1527.0, 12560.545454545454], [1523.0, 5990.0], [1507.0, 14812.166666666666], [1535.0, 21036.5], [1519.0, 16940.545454545456], [1511.0, 21035.0], [1531.0, 12139.09090909091], [1495.0, 20324.0], [1503.0, 19327.11111111111], [1499.0, 21140.2], [1475.0, 17909.0], [1479.0, 15487.666666666666], [1483.0, 7833.222222222222], [1487.0, 15126.21739130435], [1491.0, 19875.833333333332], [1551.0, 19920.2], [1575.0, 14387.166666666668], [1599.0, 4351.0], [1571.0, 18369.25], [1579.0, 18238.333333333332], [1539.0, 14857.000000000002], [1555.0, 18324.352941176472], [1567.0, 15934.863636363641], [1563.0, 21033.0], [1547.0, 18203.607142857145], [1543.0, 18967.666666666668], [1587.0, 16674.714285714286], [1591.0, 20151.4375], [1595.0, 18468.5], [1583.0, 10967.0], [1631.0, 13953.375], [1643.0, 12722.8], [1647.0, 10184.0], [1623.0, 10565.999999999998], [1619.0, 20437.1], [1627.0, 20806.478260869564], [1651.0, 9174.166666666666], [1655.0, 21055.0], [1659.0, 21038.666666666664], [1663.0, 14129.103448275862], [1639.0, 20760.7], [1635.0, 21054.5], [1615.0, 21039.0], [1611.0, 19362.1], [1607.0, 19713.1], [1667.0, 21047.11111111111], [1671.0, 17478.733333333337], [1675.0, 21029.6], [1703.0, 16965.25], [1711.0, 10598.06451612903], [1707.0, 21045.0], [1699.0, 21967.47058823529], [1691.0, 7974.0], [1687.0, 13504.526315789473], [1695.0, 16066.199999999999], [1679.0, 14684.125], [1715.0, 10124.666666666668], [1719.0, 19888.999999999996], [1727.0, 21049.0], [1723.0, 21033.666666666668], [1683.0, 7981.25], [1787.0, 21035.80769230769], [1779.0, 17843.7], [1791.0, 21055.5], [1763.0, 4975.133333333333], [1767.0, 19481.0], [1771.0, 8533.666666666668], [1783.0, 6427.0], [1739.0, 19050.73684210526], [1743.0, 5645.5], [1735.0, 7098.666666666667], [1731.0, 17651.727272727272], [1759.0, 19141.937500000004], [1755.0, 13371.25], [1751.0, 15862.818181818184], [1747.0, 17022.909090909096], [1775.0, 16787.642857142855], [1851.0, 12901.108108108107], [1827.0, 10983.75], [1855.0, 12156.75], [1831.0, 21035.0], [1835.0, 21043.75], [1839.0, 21040.69230769231], [1823.0, 13030.099999999999], [1843.0, 17314.333333333336], [1847.0, 9118.909090909092], [1799.0, 15368.399999999998], [1795.0, 6646.0], [1803.0, 17855.437499999996], [1807.0, 20047.5], [1815.0, 12055.5], [1819.0, 21038.11111111111], [1811.0, 6507.030303030303], [1911.0, 18390.166666666668], [1871.0, 21034.5], [1887.0, 13840.41304347826], [1915.0, 14154.5], [1907.0, 8314.2], [1867.0, 21047.555555555555], [1863.0, 21035.999999999996], [1859.0, 21025.5], [1883.0, 8895.538461538461], [1919.0, 18843.214285714286], [1903.0, 20212.210526315786], [1899.0, 21050.0], [1895.0, 19269.818181818184], [1891.0, 16858.571428571424], [1879.0, 21055.555555555555], [1975.0, 14733.363636363636], [1979.0, 12062.749999999996], [1971.0, 5202.296296296296], [1935.0, 17896.0], [1927.0, 21035.75], [1923.0, 16165.4], [1931.0, 15634.666666666668], [1951.0, 18598.928571428572], [1947.0, 21041.222222222223], [1943.0, 3792.714285714286], [1939.0, 21033.0], [1967.0, 4914.4], [1963.0, 5548.25], [1959.0, 13014.409090909092], [1955.0, 13020.666666666668], [1983.0, 3074.0], [1999.0, 20972.333333333332], [1991.0, 15244.666666666666], [1995.0, 17754.727272727276], [1987.0, 3667.0], [1.0, 46421.0]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[997.6044999999962, 18584.653090909174]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 2000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 341.71666666666664, "minX": 1.63133508E12, "maxY": 1031075.6833333333, "series": [{"data": [[1.63133508E12, 26614.266666666666], [1.63133526E12, 144306.86666666667], [1.6313352E12, 137687.73333333334], [1.63133538E12, 1031075.6833333333], [1.63133532E12, 27955.333333333332], [1.63133544E12, 121665.43333333333], [1.63133514E12, 160389.76666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63133508E12, 11435.5], [1.63133526E12, 341.71666666666664], [1.6313352E12, 6493.333333333333], [1.63133538E12, 18076.216666666667], [1.63133532E12, 109835.5], [1.63133544E12, 852.1333333333333], [1.63133514E12, 3369.5666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63133544E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 7987.748872180448, "minX": 1.63133508E12, "maxY": 47214.040983606545, "series": [{"data": [[1.63133508E12, 7987.748872180448], [1.63133526E12, 21030.23922734024], [1.6313352E12, 19953.634980988605], [1.63133538E12, 23589.3263762066], [1.63133532E12, 15595.568933482], [1.63133544E12, 47214.040983606545], [1.63133514E12, 22042.853478046403]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63133544E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 220.49153046062392, "minX": 1.63133508E12, "maxY": 35952.82786885246, "series": [{"data": [[1.63133508E12, 7672.288721804521], [1.63133526E12, 220.49153046062392], [1.6313352E12, 3913.3738910012744], [1.63133538E12, 16480.757370206076], [1.63133532E12, 11944.79970271275], [1.63133544E12, 35952.82786885246], [1.63133514E12, 3474.5725209669467]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63133544E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 3194.983606557376, "minX": 1.63133508E12, "maxY": 20673.931352154457, "series": [{"data": [[1.63133508E12, 4855.9355889724275], [1.63133526E12, 20673.931352154457], [1.6313352E12, 17256.63472750325], [1.63133538E12, 14899.553613357657], [1.63133532E12, 7276.949832775935], [1.63133544E12, 3194.983606557376], [1.63133514E12, 20463.22940305875]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63133544E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 154.0, "minX": 1.63133508E12, "maxY": 65791.0, "series": [{"data": [[1.63133508E12, 17735.0], [1.63133526E12, 35261.0], [1.6313352E12, 31416.0], [1.63133538E12, 36109.0], [1.63133532E12, 48279.0], [1.63133544E12, 65791.0], [1.63133514E12, 32131.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63133508E12, 5719.000000000003], [1.63133526E12, 35243.1], [1.6313352E12, 26387.0], [1.63133538E12, 31894.0], [1.63133532E12, 37580.0], [1.63133544E12, 50320.4], [1.63133514E12, 31657.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63133508E12, 15191.91], [1.63133526E12, 35261.0], [1.6313352E12, 31368.1], [1.63133538E12, 34418.2], [1.63133532E12, 40219.37], [1.63133544E12, 65548.81], [1.63133514E12, 32103.16]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63133508E12, 11627.1], [1.63133526E12, 35253.9], [1.6313352E12, 28383.75], [1.63133538E12, 32701.5], [1.63133532E12, 38606.8], [1.63133544E12, 51785.79999999999], [1.63133514E12, 32069.4]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63133508E12, 154.0], [1.63133526E12, 325.0], [1.6313352E12, 290.0], [1.63133538E12, 11564.0], [1.63133532E12, 285.0], [1.63133544E12, 37990.0], [1.63133514E12, 2977.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63133508E12, 4506.0], [1.63133526E12, 4651.5], [1.6313352E12, 21235.0], [1.63133538E12, 23755.0], [1.63133532E12, 6814.0], [1.63133544E12, 50170.0], [1.63133514E12, 30524.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63133544E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 291.0, "minX": 1.0, "maxY": 50251.5, "series": [{"data": [[513.0, 21608.0], [2.0, 47905.0], [567.0, 5585.0], [668.0, 4929.0], [673.0, 21261.0], [756.0, 4308.0], [3.0, 43884.0], [4.0, 22829.0], [6.0, 1103.0], [8.0, 3101.0], [10.0, 1636.5], [11.0, 38590.0], [12.0, 15794.0], [13.0, 27791.5], [14.0, 17720.5], [15.0, 31091.0], [16.0, 27062.0], [17.0, 48220.0], [18.0, 17380.0], [19.0, 35464.0], [20.0, 45837.5], [21.0, 4654.0], [25.0, 18358.5], [30.0, 9094.0], [31.0, 22149.5], [35.0, 3680.0], [34.0, 33798.5], [41.0, 39888.0], [43.0, 18026.0], [44.0, 2994.5], [45.0, 4793.5], [47.0, 11637.0], [48.0, 10232.0], [51.0, 34745.0], [50.0, 24020.0], [52.0, 28404.0], [54.0, 13910.5], [57.0, 21967.0], [58.0, 7697.0], [60.0, 4127.0], [63.0, 5103.0], [66.0, 26794.0], [67.0, 23359.0], [64.0, 50251.5], [70.0, 38264.5], [73.0, 27780.0], [76.0, 3314.0], [78.0, 26385.0], [83.0, 37561.0], [87.0, 8686.0], [89.0, 25456.0], [95.0, 30994.0], [98.0, 307.0], [96.0, 26621.5], [97.0, 27319.0], [100.0, 7017.5], [109.0, 30637.0], [120.0, 2298.0], [134.0, 23291.5], [133.0, 6784.0], [140.0, 19943.0], [145.0, 23702.0], [152.0, 28546.0], [165.0, 32554.0], [164.0, 31810.0], [183.0, 23259.0], [223.0, 31988.0], [231.0, 29665.0], [233.0, 20658.0], [244.0, 18809.5], [1.0, 37585.5], [299.0, 18992.0], [324.0, 15870.5], [367.0, 21959.0], [368.0, 5979.0], [406.0, 30521.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 21050.5], [513.0, 21036.0], [567.0, 5855.0], [595.0, 16409.0], [585.0, 21054.0], [668.0, 4980.0], [658.0, 21044.0], [673.0, 21048.0], [693.0, 21049.0], [3.0, 21031.0], [800.0, 14727.5], [808.0, 21033.0], [924.0, 21038.0], [982.0, 21044.0], [977.0, 21049.0], [1012.0, 21041.0], [5.0, 8861.0], [6.0, 14343.5], [8.0, 12498.5], [10.0, 16776.0], [12.0, 13787.0], [13.0, 19518.5], [14.0, 33375.5], [15.0, 24404.0], [17.0, 291.0], [18.0, 17347.0], [19.0, 9274.0], [21.0, 19539.0], [25.0, 12009.5], [27.0, 959.0], [30.0, 9661.0], [41.0, 21037.0], [43.0, 18302.0], [45.0, 16000.0], [47.0, 25620.0], [48.0, 10577.0], [50.0, 3089.5], [52.0, 28801.0], [54.0, 14118.5], [55.0, 3983.0], [58.0, 7924.0], [64.0, 21038.0], [66.0, 26747.0], [67.0, 21042.0], [71.0, 13391.0], [78.0, 16161.0], [83.0, 38190.0], [95.0, 13580.0], [100.0, 30289.5], [110.0, 7317.0], [109.0, 30728.0], [134.0, 7625.0], [133.0, 7029.0], [140.0, 21045.0], [159.0, 15046.0], [156.0, 21057.0], [152.0, 28606.5], [165.0, 16372.0], [164.0, 32003.5], [193.0, 21048.0], [223.0, 31642.0], [233.0, 21034.0], [242.0, 21060.0], [299.0, 19015.0], [324.0, 16091.0], [367.0, 21058.0], [368.0, 6262.0], [384.0, 21044.0], [406.0, 30398.0], [426.0, 21039.0], [419.0, 21040.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1012.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 50025.5, "series": [{"data": [[513.0, 21608.0], [2.0, 24135.0], [567.0, 5585.0], [668.0, 4929.0], [673.0, 21261.0], [756.0, 4308.0], [3.0, 2256.0], [4.0, 14460.5], [6.0, 1103.0], [8.0, 3101.0], [10.0, 1636.5], [11.0, 23960.0], [12.0, 15794.0], [13.0, 27791.5], [14.0, 17720.5], [15.0, 31091.0], [16.0, 27062.0], [17.0, 48220.0], [18.0, 17380.0], [19.0, 35317.0], [20.0, 22176.5], [21.0, 4654.0], [25.0, 18358.5], [30.0, 9094.0], [31.0, 13021.5], [35.0, 3680.0], [34.0, 33798.5], [41.0, 39888.0], [43.0, 18026.0], [44.0, 2994.5], [45.0, 4793.5], [47.0, 11637.0], [48.0, 10232.0], [51.0, 34745.0], [50.0, 24020.0], [52.0, 28404.0], [54.0, 13910.5], [57.0, 21967.0], [58.0, 7697.0], [60.0, 4127.0], [63.0, 5103.0], [66.0, 26794.0], [67.0, 23359.0], [64.0, 50025.5], [70.0, 38264.5], [73.0, 27780.0], [76.0, 3314.0], [78.0, 26385.0], [83.0, 37561.0], [87.0, 8686.0], [89.0, 25456.0], [95.0, 30994.0], [98.0, 307.0], [96.0, 26621.5], [97.0, 26881.0], [100.0, 7017.5], [109.0, 30454.0], [120.0, 2298.0], [134.0, 23291.5], [133.0, 6784.0], [140.0, 19943.0], [145.0, 23702.0], [152.0, 27603.0], [165.0, 31931.0], [164.0, 31305.5], [183.0, 23259.0], [223.0, 31988.0], [231.0, 29034.0], [233.0, 20658.0], [244.0, 18809.5], [1.0, 23683.5], [299.0, 18992.0], [324.0, 15870.5], [367.0, 21959.0], [368.0, 5979.0], [406.0, 30521.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [513.0, 0.0], [567.0, 5855.0], [595.0, 16409.0], [585.0, 0.0], [668.0, 0.0], [658.0, 0.0], [673.0, 0.0], [693.0, 0.0], [3.0, 0.0], [800.0, 3325.5], [808.0, 0.0], [924.0, 0.0], [982.0, 0.0], [977.0, 0.0], [1012.0, 0.0], [5.0, 8861.0], [6.0, 14343.5], [8.0, 12498.5], [10.0, 16776.0], [12.0, 13787.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [17.0, 291.0], [18.0, 0.0], [19.0, 9274.0], [21.0, 19536.0], [25.0, 11498.5], [27.0, 959.0], [30.0, 9661.0], [41.0, 0.0], [43.0, 18302.0], [45.0, 0.0], [47.0, 0.0], [48.0, 10577.0], [50.0, 3089.5], [52.0, 0.0], [54.0, 0.0], [55.0, 3983.0], [58.0, 7924.0], [64.0, 0.0], [66.0, 26747.0], [67.0, 0.0], [71.0, 13391.0], [78.0, 0.0], [83.0, 0.0], [95.0, 0.0], [100.0, 0.0], [110.0, 7317.0], [109.0, 0.0], [134.0, 7273.5], [133.0, 7029.0], [140.0, 0.0], [159.0, 15046.0], [156.0, 0.0], [152.0, 0.0], [165.0, 16372.0], [164.0, 0.0], [193.0, 0.0], [223.0, 0.0], [233.0, 0.0], [242.0, 0.0], [299.0, 0.0], [324.0, 16091.0], [367.0, 0.0], [368.0, 6252.0], [384.0, 0.0], [406.0, 0.0], [426.0, 0.0], [419.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1012.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 33.333333333333336, "minX": 1.63133508E12, "maxY": 100.0, "series": [{"data": [[1.63133508E12, 66.66666666666667], [1.63133526E12, 66.66666666666667], [1.6313352E12, 33.333333333333336], [1.63133538E12, 33.333333333333336], [1.63133532E12, 66.66666666666667], [1.63133514E12, 100.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63133538E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.06666666666666667, "minX": 1.63133508E12, "maxY": 58.31666666666667, "series": [{"data": [[1.63133508E12, 31.8], [1.63133526E12, 0.8333333333333334], [1.6313352E12, 15.733333333333333], [1.63133538E12, 43.81666666666667], [1.63133532E12, 26.2], [1.63133544E12, 2.033333333333333], [1.63133514E12, 8.183333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63133508E12, 33.166666666666664], [1.63133514E12, 0.16666666666666666]], "isOverall": false, "label": "400", "isController": false}, {"data": [[1.63133526E12, 54.75], [1.6313352E12, 46.266666666666666], [1.63133538E12, 16.133333333333333], [1.63133532E12, 0.06666666666666667], [1.63133514E12, 58.31666666666667]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.63133532E12, 13.283333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.63133508E12, 1.5333333333333334], [1.63133526E12, 0.5], [1.6313352E12, 3.75], [1.63133538E12, 3.933333333333333], [1.63133532E12, 5.3], [1.63133514E12, 0.9]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63133544E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.63133508E12, "maxY": 59.38333333333333, "series": [{"data": [[1.63133508E12, 34.7], [1.63133526E12, 55.25], [1.6313352E12, 50.016666666666666], [1.63133538E12, 20.066666666666666], [1.63133532E12, 18.65], [1.63133514E12, 59.38333333333333]], "isOverall": false, "label": "HTTP请求-failure", "isController": false}, {"data": [[1.63133508E12, 31.8], [1.63133526E12, 0.8333333333333334], [1.6313352E12, 15.733333333333333], [1.63133538E12, 43.81666666666667], [1.63133532E12, 26.2], [1.63133544E12, 2.033333333333333], [1.63133514E12, 8.183333333333334]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63133544E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.8333333333333334, "minX": 1.63133508E12, "maxY": 59.38333333333333, "series": [{"data": [[1.63133508E12, 31.8], [1.63133526E12, 0.8333333333333334], [1.6313352E12, 15.733333333333333], [1.63133538E12, 43.81666666666667], [1.63133532E12, 26.2], [1.63133544E12, 2.033333333333333], [1.63133514E12, 8.183333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63133508E12, 34.7], [1.63133526E12, 55.25], [1.6313352E12, 50.016666666666666], [1.63133538E12, 20.066666666666666], [1.63133532E12, 18.65], [1.63133514E12, 59.38333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63133544E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

