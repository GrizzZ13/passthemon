/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 31.0, "minX": 0.0, "maxY": 75554.0, "series": [{"data": [[0.0, 31.0], [0.1, 48.0], [0.2, 56.0], [0.3, 67.0], [0.4, 75.0], [0.5, 85.0], [0.6, 95.0], [0.7, 102.0], [0.8, 109.0], [0.9, 121.0], [1.0, 133.0], [1.1, 141.0], [1.2, 154.0], [1.3, 176.0], [1.4, 190.0], [1.5, 197.0], [1.6, 201.0], [1.7, 205.0], [1.8, 208.0], [1.9, 212.0], [2.0, 220.0], [2.1, 234.0], [2.2, 248.0], [2.3, 257.0], [2.4, 264.0], [2.5, 277.0], [2.6, 304.0], [2.7, 330.0], [2.8, 356.0], [2.9, 363.0], [3.0, 366.0], [3.1, 375.0], [3.2, 434.0], [3.3, 445.0], [3.4, 476.0], [3.5, 485.0], [3.6, 491.0], [3.7, 572.0], [3.8, 639.0], [3.9, 698.0], [4.0, 709.0], [4.1, 731.0], [4.2, 790.0], [4.3, 827.0], [4.4, 876.0], [4.5, 890.0], [4.6, 895.0], [4.7, 906.0], [4.8, 915.0], [4.9, 924.0], [5.0, 932.0], [5.1, 948.0], [5.2, 963.0], [5.3, 973.0], [5.4, 978.0], [5.5, 988.0], [5.6, 1008.0], [5.7, 1023.0], [5.8, 1038.0], [5.9, 1045.0], [6.0, 1069.0], [6.1, 1101.0], [6.2, 1118.0], [6.3, 1156.0], [6.4, 1187.0], [6.5, 1217.0], [6.6, 1230.0], [6.7, 1248.0], [6.8, 1257.0], [6.9, 1262.0], [7.0, 1266.0], [7.1, 1270.0], [7.2, 1274.0], [7.3, 1282.0], [7.4, 1287.0], [7.5, 1294.0], [7.6, 1300.0], [7.7, 1305.0], [7.8, 1310.0], [7.9, 1313.0], [8.0, 1317.0], [8.1, 1321.0], [8.2, 1326.0], [8.3, 1331.0], [8.4, 1334.0], [8.5, 1340.0], [8.6, 1344.0], [8.7, 1349.0], [8.8, 1352.0], [8.9, 1359.0], [9.0, 1365.0], [9.1, 1373.0], [9.2, 1384.0], [9.3, 1391.0], [9.4, 1400.0], [9.5, 1415.0], [9.6, 1424.0], [9.7, 1428.0], [9.8, 1439.0], [9.9, 1447.0], [10.0, 1452.0], [10.1, 1459.0], [10.2, 1464.0], [10.3, 1474.0], [10.4, 1485.0], [10.5, 1491.0], [10.6, 1497.0], [10.7, 1501.0], [10.8, 1510.0], [10.9, 1521.0], [11.0, 1527.0], [11.1, 1530.0], [11.2, 1535.0], [11.3, 1541.0], [11.4, 1546.0], [11.5, 1554.0], [11.6, 1560.0], [11.7, 1563.0], [11.8, 1567.0], [11.9, 1575.0], [12.0, 1583.0], [12.1, 1591.0], [12.2, 1599.0], [12.3, 1607.0], [12.4, 1613.0], [12.5, 1625.0], [12.6, 1629.0], [12.7, 1636.0], [12.8, 1642.0], [12.9, 1649.0], [13.0, 1653.0], [13.1, 1661.0], [13.2, 1666.0], [13.3, 1673.0], [13.4, 1684.0], [13.5, 1699.0], [13.6, 1709.0], [13.7, 1720.0], [13.8, 1731.0], [13.9, 1743.0], [14.0, 1751.0], [14.1, 1760.0], [14.2, 1772.0], [14.3, 1783.0], [14.4, 1788.0], [14.5, 1794.0], [14.6, 1806.0], [14.7, 1808.0], [14.8, 1816.0], [14.9, 1820.0], [15.0, 1826.0], [15.1, 1831.0], [15.2, 1838.0], [15.3, 1844.0], [15.4, 1850.0], [15.5, 1858.0], [15.6, 1866.0], [15.7, 1869.0], [15.8, 1877.0], [15.9, 1880.0], [16.0, 1887.0], [16.1, 1893.0], [16.2, 1897.0], [16.3, 1903.0], [16.4, 1911.0], [16.5, 1916.0], [16.6, 1923.0], [16.7, 1937.0], [16.8, 1941.0], [16.9, 1947.0], [17.0, 1955.0], [17.1, 1962.0], [17.2, 1967.0], [17.3, 1971.0], [17.4, 1977.0], [17.5, 1986.0], [17.6, 1996.0], [17.7, 2021.0], [17.8, 2047.0], [17.9, 2062.0], [18.0, 2077.0], [18.1, 2088.0], [18.2, 2105.0], [18.3, 2131.0], [18.4, 2162.0], [18.5, 2187.0], [18.6, 2206.0], [18.7, 2222.0], [18.8, 2252.0], [18.9, 2263.0], [19.0, 2277.0], [19.1, 2303.0], [19.2, 2333.0], [19.3, 2352.0], [19.4, 2380.0], [19.5, 2395.0], [19.6, 2401.0], [19.7, 2412.0], [19.8, 2417.0], [19.9, 2422.0], [20.0, 2426.0], [20.1, 2429.0], [20.2, 2434.0], [20.3, 2437.0], [20.4, 2439.0], [20.5, 2444.0], [20.6, 2449.0], [20.7, 2453.0], [20.8, 2456.0], [20.9, 2460.0], [21.0, 2465.0], [21.1, 2469.0], [21.2, 2477.0], [21.3, 2484.0], [21.4, 2491.0], [21.5, 2500.0], [21.6, 2507.0], [21.7, 2520.0], [21.8, 2530.0], [21.9, 2541.0], [22.0, 2546.0], [22.1, 2554.0], [22.2, 2562.0], [22.3, 2567.0], [22.4, 2571.0], [22.5, 2576.0], [22.6, 2582.0], [22.7, 2586.0], [22.8, 2593.0], [22.9, 2597.0], [23.0, 2603.0], [23.1, 2608.0], [23.2, 2613.0], [23.3, 2617.0], [23.4, 2624.0], [23.5, 2639.0], [23.6, 2645.0], [23.7, 2657.0], [23.8, 2659.0], [23.9, 2664.0], [24.0, 2672.0], [24.1, 2684.0], [24.2, 2725.0], [24.3, 2742.0], [24.4, 2773.0], [24.5, 2820.0], [24.6, 2873.0], [24.7, 2956.0], [24.8, 2994.0], [24.9, 3046.0], [25.0, 3063.0], [25.1, 3075.0], [25.2, 3081.0], [25.3, 3095.0], [25.4, 3107.0], [25.5, 3116.0], [25.6, 3123.0], [25.7, 3133.0], [25.8, 3140.0], [25.9, 3145.0], [26.0, 3155.0], [26.1, 3162.0], [26.2, 3176.0], [26.3, 3179.0], [26.4, 3192.0], [26.5, 3198.0], [26.6, 3210.0], [26.7, 3216.0], [26.8, 3224.0], [26.9, 3232.0], [27.0, 3240.0], [27.1, 3245.0], [27.2, 3252.0], [27.3, 3262.0], [27.4, 3269.0], [27.5, 3280.0], [27.6, 3287.0], [27.7, 3301.0], [27.8, 3310.0], [27.9, 3317.0], [28.0, 3324.0], [28.1, 3333.0], [28.2, 3349.0], [28.3, 3379.0], [28.4, 3401.0], [28.5, 3415.0], [28.6, 3425.0], [28.7, 3434.0], [28.8, 3440.0], [28.9, 3449.0], [29.0, 3461.0], [29.1, 3473.0], [29.2, 3485.0], [29.3, 3495.0], [29.4, 3502.0], [29.5, 3507.0], [29.6, 3513.0], [29.7, 3518.0], [29.8, 3524.0], [29.9, 3531.0], [30.0, 3536.0], [30.1, 3543.0], [30.2, 3548.0], [30.3, 3556.0], [30.4, 3559.0], [30.5, 3563.0], [30.6, 3566.0], [30.7, 3570.0], [30.8, 3574.0], [30.9, 3580.0], [31.0, 3584.0], [31.1, 3590.0], [31.2, 3597.0], [31.3, 3607.0], [31.4, 3617.0], [31.5, 3624.0], [31.6, 3637.0], [31.7, 3651.0], [31.8, 3658.0], [31.9, 3663.0], [32.0, 3667.0], [32.1, 3670.0], [32.2, 3672.0], [32.3, 3677.0], [32.4, 3680.0], [32.5, 3682.0], [32.6, 3686.0], [32.7, 3691.0], [32.8, 3701.0], [32.9, 3709.0], [33.0, 3719.0], [33.1, 3723.0], [33.2, 3727.0], [33.3, 3731.0], [33.4, 3737.0], [33.5, 3742.0], [33.6, 3746.0], [33.7, 3759.0], [33.8, 3773.0], [33.9, 3813.0], [34.0, 3842.0], [34.1, 3848.0], [34.2, 3856.0], [34.3, 3862.0], [34.4, 3871.0], [34.5, 3876.0], [34.6, 3882.0], [34.7, 3889.0], [34.8, 3905.0], [34.9, 3910.0], [35.0, 3939.0], [35.1, 4006.0], [35.2, 4072.0], [35.3, 4107.0], [35.4, 4118.0], [35.5, 4140.0], [35.6, 4189.0], [35.7, 4407.0], [35.8, 4537.0], [35.9, 4557.0], [36.0, 4576.0], [36.1, 4588.0], [36.2, 4601.0], [36.3, 4610.0], [36.4, 4619.0], [36.5, 4633.0], [36.6, 4723.0], [36.7, 4736.0], [36.8, 4746.0], [36.9, 4766.0], [37.0, 4780.0], [37.1, 4788.0], [37.2, 4797.0], [37.3, 4807.0], [37.4, 4816.0], [37.5, 4823.0], [37.6, 4829.0], [37.7, 4837.0], [37.8, 4845.0], [37.9, 4864.0], [38.0, 4907.0], [38.1, 4983.0], [38.2, 5023.0], [38.3, 5064.0], [38.4, 5082.0], [38.5, 5108.0], [38.6, 5151.0], [38.7, 5178.0], [38.8, 5184.0], [38.9, 5197.0], [39.0, 5203.0], [39.1, 5212.0], [39.2, 5219.0], [39.3, 5232.0], [39.4, 5238.0], [39.5, 5247.0], [39.6, 5255.0], [39.7, 5263.0], [39.8, 5275.0], [39.9, 5283.0], [40.0, 5307.0], [40.1, 5323.0], [40.2, 5351.0], [40.3, 5367.0], [40.4, 5390.0], [40.5, 5422.0], [40.6, 5482.0], [40.7, 5530.0], [40.8, 5558.0], [40.9, 5596.0], [41.0, 5617.0], [41.1, 5629.0], [41.2, 5640.0], [41.3, 5666.0], [41.4, 5705.0], [41.5, 5755.0], [41.6, 5791.0], [41.7, 5839.0], [41.8, 5863.0], [41.9, 5871.0], [42.0, 5902.0], [42.1, 5931.0], [42.2, 5950.0], [42.3, 6034.0], [42.4, 6068.0], [42.5, 6105.0], [42.6, 6159.0], [42.7, 6206.0], [42.8, 6228.0], [42.9, 6241.0], [43.0, 6252.0], [43.1, 6265.0], [43.2, 6281.0], [43.3, 6293.0], [43.4, 6380.0], [43.5, 6433.0], [43.6, 6468.0], [43.7, 6490.0], [43.8, 6493.0], [43.9, 6496.0], [44.0, 6498.0], [44.1, 6500.0], [44.2, 6502.0], [44.3, 6504.0], [44.4, 6506.0], [44.5, 6509.0], [44.6, 6511.0], [44.7, 6533.0], [44.8, 6554.0], [44.9, 6597.0], [45.0, 6667.0], [45.1, 6679.0], [45.2, 6692.0], [45.3, 6702.0], [45.4, 6709.0], [45.5, 6718.0], [45.6, 6727.0], [45.7, 6740.0], [45.8, 6755.0], [45.9, 6772.0], [46.0, 6792.0], [46.1, 6954.0], [46.2, 7016.0], [46.3, 7040.0], [46.4, 7057.0], [46.5, 7071.0], [46.6, 7081.0], [46.7, 7094.0], [46.8, 7106.0], [46.9, 7115.0], [47.0, 7139.0], [47.1, 7156.0], [47.2, 7165.0], [47.3, 7171.0], [47.4, 7178.0], [47.5, 7182.0], [47.6, 7187.0], [47.7, 7193.0], [47.8, 7219.0], [47.9, 7228.0], [48.0, 7246.0], [48.1, 7277.0], [48.2, 7318.0], [48.3, 7375.0], [48.4, 7380.0], [48.5, 7384.0], [48.6, 7411.0], [48.7, 7431.0], [48.8, 7437.0], [48.9, 7442.0], [49.0, 7447.0], [49.1, 7454.0], [49.2, 7460.0], [49.3, 7471.0], [49.4, 7484.0], [49.5, 7489.0], [49.6, 7496.0], [49.7, 7508.0], [49.8, 7515.0], [49.9, 7530.0], [50.0, 7541.0], [50.1, 7551.0], [50.2, 7557.0], [50.3, 7565.0], [50.4, 7573.0], [50.5, 7579.0], [50.6, 7585.0], [50.7, 7594.0], [50.8, 7598.0], [50.9, 7604.0], [51.0, 7607.0], [51.1, 7613.0], [51.2, 7617.0], [51.3, 7630.0], [51.4, 7636.0], [51.5, 7644.0], [51.6, 7669.0], [51.7, 7709.0], [51.8, 7779.0], [51.9, 7824.0], [52.0, 7852.0], [52.1, 7863.0], [52.2, 7873.0], [52.3, 7897.0], [52.4, 7923.0], [52.5, 7945.0], [52.6, 7956.0], [52.7, 7972.0], [52.8, 7996.0], [52.9, 8006.0], [53.0, 8019.0], [53.1, 8031.0], [53.2, 8051.0], [53.3, 8080.0], [53.4, 8116.0], [53.5, 8143.0], [53.6, 8166.0], [53.7, 8182.0], [53.8, 8200.0], [53.9, 8217.0], [54.0, 8239.0], [54.1, 8248.0], [54.2, 8329.0], [54.3, 8341.0], [54.4, 8360.0], [54.5, 8411.0], [54.6, 8435.0], [54.7, 8460.0], [54.8, 8489.0], [54.9, 8529.0], [55.0, 8553.0], [55.1, 8577.0], [55.2, 8605.0], [55.3, 8624.0], [55.4, 8634.0], [55.5, 8645.0], [55.6, 8662.0], [55.7, 8675.0], [55.8, 8686.0], [55.9, 8700.0], [56.0, 8707.0], [56.1, 8710.0], [56.2, 8713.0], [56.3, 8727.0], [56.4, 8740.0], [56.5, 8752.0], [56.6, 8784.0], [56.7, 8797.0], [56.8, 8806.0], [56.9, 8816.0], [57.0, 8842.0], [57.1, 8863.0], [57.2, 8881.0], [57.3, 8907.0], [57.4, 8934.0], [57.5, 8955.0], [57.6, 8971.0], [57.7, 9008.0], [57.8, 9061.0], [57.9, 9075.0], [58.0, 9088.0], [58.1, 9109.0], [58.2, 9145.0], [58.3, 9155.0], [58.4, 9161.0], [58.5, 9176.0], [58.6, 9185.0], [58.7, 9196.0], [58.8, 9205.0], [58.9, 9212.0], [59.0, 9218.0], [59.1, 9229.0], [59.2, 9246.0], [59.3, 9263.0], [59.4, 9296.0], [59.5, 9309.0], [59.6, 9321.0], [59.7, 9330.0], [59.8, 9337.0], [59.9, 9342.0], [60.0, 9348.0], [60.1, 9354.0], [60.2, 9364.0], [60.3, 9375.0], [60.4, 9387.0], [60.5, 9404.0], [60.6, 9419.0], [60.7, 9436.0], [60.8, 9477.0], [60.9, 9500.0], [61.0, 9510.0], [61.1, 9519.0], [61.2, 9527.0], [61.3, 9533.0], [61.4, 9549.0], [61.5, 9575.0], [61.6, 9598.0], [61.7, 9610.0], [61.8, 9622.0], [61.9, 9635.0], [62.0, 9646.0], [62.1, 9662.0], [62.2, 9692.0], [62.3, 9711.0], [62.4, 9723.0], [62.5, 9731.0], [62.6, 9741.0], [62.7, 9760.0], [62.8, 9779.0], [62.9, 9804.0], [63.0, 9833.0], [63.1, 9856.0], [63.2, 9877.0], [63.3, 9884.0], [63.4, 9900.0], [63.5, 9945.0], [63.6, 9966.0], [63.7, 9980.0], [63.8, 10000.0], [63.9, 10018.0], [64.0, 10042.0], [64.1, 10064.0], [64.2, 10084.0], [64.3, 10099.0], [64.4, 10121.0], [64.5, 10156.0], [64.6, 10220.0], [64.7, 10275.0], [64.8, 10295.0], [64.9, 10342.0], [65.0, 10395.0], [65.1, 10434.0], [65.2, 10451.0], [65.3, 10470.0], [65.4, 10488.0], [65.5, 10510.0], [65.6, 10523.0], [65.7, 10539.0], [65.8, 10596.0], [65.9, 10618.0], [66.0, 10648.0], [66.1, 10674.0], [66.2, 10696.0], [66.3, 10721.0], [66.4, 10763.0], [66.5, 10790.0], [66.6, 10828.0], [66.7, 10842.0], [66.8, 10975.0], [66.9, 11027.0], [67.0, 11041.0], [67.1, 11061.0], [67.2, 11106.0], [67.3, 11282.0], [67.4, 11310.0], [67.5, 11351.0], [67.6, 11448.0], [67.7, 11470.0], [67.8, 11672.0], [67.9, 11707.0], [68.0, 11756.0], [68.1, 11783.0], [68.2, 11787.0], [68.3, 11800.0], [68.4, 11930.0], [68.5, 11941.0], [68.6, 12014.0], [68.7, 12076.0], [68.8, 12129.0], [68.9, 12273.0], [69.0, 12341.0], [69.1, 12365.0], [69.2, 12471.0], [69.3, 12500.0], [69.4, 12518.0], [69.5, 12539.0], [69.6, 12543.0], [69.7, 12547.0], [69.8, 12553.0], [69.9, 12565.0], [70.0, 12583.0], [70.1, 12605.0], [70.2, 12683.0], [70.3, 12867.0], [70.4, 12884.0], [70.5, 12893.0], [70.6, 12906.0], [70.7, 12920.0], [70.8, 12935.0], [70.9, 13115.0], [71.0, 13292.0], [71.1, 13731.0], [71.2, 13803.0], [71.3, 13824.0], [71.4, 13845.0], [71.5, 13882.0], [71.6, 13922.0], [71.7, 13954.0], [71.8, 14443.0], [71.9, 14640.0], [72.0, 14761.0], [72.1, 14826.0], [72.2, 14984.0], [72.3, 15060.0], [72.4, 15069.0], [72.5, 15082.0], [72.6, 15094.0], [72.7, 15111.0], [72.8, 15138.0], [72.9, 15151.0], [73.0, 15175.0], [73.1, 15192.0], [73.2, 15202.0], [73.3, 15213.0], [73.4, 15248.0], [73.5, 15310.0], [73.6, 15335.0], [73.7, 15355.0], [73.8, 15386.0], [73.9, 15429.0], [74.0, 15459.0], [74.1, 15521.0], [74.2, 15543.0], [74.3, 15565.0], [74.4, 15581.0], [74.5, 15592.0], [74.6, 15601.0], [74.7, 15623.0], [74.8, 15644.0], [74.9, 15677.0], [75.0, 15713.0], [75.1, 15738.0], [75.2, 15769.0], [75.3, 16041.0], [75.4, 16157.0], [75.5, 16189.0], [75.6, 16220.0], [75.7, 16442.0], [75.8, 16804.0], [75.9, 16991.0], [76.0, 17246.0], [76.1, 17287.0], [76.2, 17660.0], [76.3, 17850.0], [76.4, 17877.0], [76.5, 17946.0], [76.6, 18076.0], [76.7, 18361.0], [76.8, 18640.0], [76.9, 19077.0], [77.0, 19269.0], [77.1, 19431.0], [77.2, 19500.0], [77.3, 19590.0], [77.4, 19668.0], [77.5, 19889.0], [77.6, 20173.0], [77.7, 20232.0], [77.8, 20259.0], [77.9, 20272.0], [78.0, 20281.0], [78.1, 20291.0], [78.2, 20606.0], [78.3, 20850.0], [78.4, 20874.0], [78.5, 21020.0], [78.6, 21029.0], [78.7, 21030.0], [78.8, 21031.0], [78.9, 21032.0], [79.0, 21033.0], [79.1, 21034.0], [79.2, 21036.0], [79.3, 21037.0], [79.4, 21037.0], [79.5, 21039.0], [79.6, 21040.0], [79.7, 21041.0], [79.8, 21041.0], [79.9, 21042.0], [80.0, 21043.0], [80.1, 21044.0], [80.2, 21044.0], [80.3, 21045.0], [80.4, 21046.0], [80.5, 21046.0], [80.6, 21046.0], [80.7, 21047.0], [80.8, 21047.0], [80.9, 21048.0], [81.0, 21048.0], [81.1, 21049.0], [81.2, 21049.0], [81.3, 21050.0], [81.4, 21050.0], [81.5, 21050.0], [81.6, 21051.0], [81.7, 21051.0], [81.8, 21052.0], [81.9, 21052.0], [82.0, 21052.0], [82.1, 21053.0], [82.2, 21053.0], [82.3, 21054.0], [82.4, 21054.0], [82.5, 21055.0], [82.6, 21055.0], [82.7, 21056.0], [82.8, 21056.0], [82.9, 21057.0], [83.0, 21057.0], [83.1, 21058.0], [83.2, 21059.0], [83.3, 21060.0], [83.4, 21061.0], [83.5, 21062.0], [83.6, 21064.0], [83.7, 21066.0], [83.8, 21068.0], [83.9, 21070.0], [84.0, 21072.0], [84.1, 21077.0], [84.2, 21107.0], [84.3, 21304.0], [84.4, 21344.0], [84.5, 21503.0], [84.6, 21957.0], [84.7, 22150.0], [84.8, 22193.0], [84.9, 22235.0], [85.0, 22288.0], [85.1, 22394.0], [85.2, 22435.0], [85.3, 22462.0], [85.4, 22491.0], [85.5, 22506.0], [85.6, 22524.0], [85.7, 22612.0], [85.8, 22688.0], [85.9, 22786.0], [86.0, 22818.0], [86.1, 22834.0], [86.2, 22870.0], [86.3, 22890.0], [86.4, 22911.0], [86.5, 23173.0], [86.6, 23224.0], [86.7, 23239.0], [86.8, 23276.0], [86.9, 23325.0], [87.0, 23467.0], [87.1, 23590.0], [87.2, 23609.0], [87.3, 23672.0], [87.4, 23750.0], [87.5, 23777.0], [87.6, 23803.0], [87.7, 24143.0], [87.8, 24395.0], [87.9, 24721.0], [88.0, 25037.0], [88.1, 25449.0], [88.2, 25940.0], [88.3, 26345.0], [88.4, 26579.0], [88.5, 26712.0], [88.6, 27323.0], [88.7, 27702.0], [88.8, 28029.0], [88.9, 28050.0], [89.0, 28077.0], [89.1, 28140.0], [89.2, 28382.0], [89.3, 28406.0], [89.4, 28570.0], [89.5, 28740.0], [89.6, 28872.0], [89.7, 29181.0], [89.8, 29683.0], [89.9, 30172.0], [90.0, 30621.0], [90.1, 31114.0], [90.2, 31492.0], [90.3, 32042.0], [90.4, 32447.0], [90.5, 32945.0], [90.6, 33299.0], [90.7, 33931.0], [90.8, 34171.0], [90.9, 34719.0], [91.0, 35049.0], [91.1, 35116.0], [91.2, 35311.0], [91.3, 35635.0], [91.4, 36247.0], [91.5, 36625.0], [91.6, 37097.0], [91.7, 37449.0], [91.8, 38010.0], [91.9, 38437.0], [92.0, 38896.0], [92.1, 39346.0], [92.2, 39819.0], [92.3, 40317.0], [92.4, 40802.0], [92.5, 41074.0], [92.6, 41626.0], [92.7, 42073.0], [92.8, 42440.0], [92.9, 42774.0], [93.0, 43181.0], [93.1, 43827.0], [93.2, 44142.0], [93.3, 44506.0], [93.4, 45043.0], [93.5, 45413.0], [93.6, 45934.0], [93.7, 46414.0], [93.8, 47096.0], [93.9, 47418.0], [94.0, 47815.0], [94.1, 48073.0], [94.2, 48701.0], [94.3, 49180.0], [94.4, 49627.0], [94.5, 50316.0], [94.6, 50599.0], [94.7, 51189.0], [94.8, 51491.0], [94.9, 51963.0], [95.0, 52291.0], [95.1, 52824.0], [95.2, 53213.0], [95.3, 53579.0], [95.4, 54251.0], [95.5, 54635.0], [95.6, 55226.0], [95.7, 55734.0], [95.8, 56068.0], [95.9, 56548.0], [96.0, 56951.0], [96.1, 57507.0], [96.2, 57978.0], [96.3, 58523.0], [96.4, 58956.0], [96.5, 59478.0], [96.6, 59764.0], [96.7, 60403.0], [96.8, 60704.0], [96.9, 61213.0], [97.0, 61802.0], [97.1, 62210.0], [97.2, 62627.0], [97.3, 63087.0], [97.4, 63533.0], [97.5, 64057.0], [97.6, 64463.0], [97.7, 64886.0], [97.8, 65360.0], [97.9, 65975.0], [98.0, 66228.0], [98.1, 66815.0], [98.2, 67124.0], [98.3, 67673.0], [98.4, 68072.0], [98.5, 68517.0], [98.6, 69096.0], [98.7, 69450.0], [98.8, 70074.0], [98.9, 70396.0], [99.0, 70878.0], [99.1, 71329.0], [99.2, 71768.0], [99.3, 72168.0], [99.4, 72634.0], [99.5, 73121.0], [99.6, 73476.0], [99.7, 73837.0], [99.8, 74496.0], [99.9, 74912.0], [100.0, 75554.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 687.0, "series": [{"data": [[0.0, 80.0], [66700.0, 3.0], [68300.0, 4.0], [69900.0, 1.0], [71500.0, 1.0], [73100.0, 5.0], [100.0, 108.0], [32900.0, 3.0], [33700.0, 1.0], [34500.0, 3.0], [35300.0, 6.0], [36100.0, 2.0], [36900.0, 2.0], [37700.0, 1.0], [38500.0, 2.0], [39300.0, 2.0], [40900.0, 5.0], [41700.0, 3.0], [42500.0, 4.0], [44100.0, 4.0], [44900.0, 2.0], [46500.0, 2.0], [47300.0, 3.0], [48100.0, 1.0], [48900.0, 4.0], [49700.0, 4.0], [50500.0, 6.0], [200.0, 121.0], [51300.0, 3.0], [52900.0, 1.0], [54500.0, 4.0], [55300.0, 1.0], [56100.0, 2.0], [56900.0, 6.0], [57700.0, 3.0], [58500.0, 2.0], [59300.0, 2.0], [60100.0, 2.0], [60900.0, 2.0], [61700.0, 4.0], [62500.0, 2.0], [63300.0, 6.0], [64100.0, 6.0], [64900.0, 3.0], [65800.0, 2.0], [67400.0, 3.0], [69000.0, 3.0], [70600.0, 3.0], [72200.0, 3.0], [300.0, 69.0], [73800.0, 5.0], [400.0, 64.0], [500.0, 12.0], [600.0, 15.0], [700.0, 38.0], [800.0, 52.0], [900.0, 105.0], [1000.0, 66.0], [1100.0, 40.0], [1200.0, 141.0], [1300.0, 216.0], [1400.0, 154.0], [1500.0, 183.0], [1600.0, 156.0], [1700.0, 124.0], [1800.0, 206.0], [1900.0, 164.0], [2000.0, 68.0], [2100.0, 47.0], [2200.0, 62.0], [2300.0, 54.0], [2400.0, 235.0], [2500.0, 172.0], [2600.0, 144.0], [2700.0, 37.0], [2800.0, 20.0], [2900.0, 26.0], [3000.0, 62.0], [3100.0, 141.0], [3200.0, 141.0], [3300.0, 84.0], [3400.0, 117.0], [3500.0, 226.0], [3600.0, 185.0], [3700.0, 131.0], [3800.0, 104.0], [3900.0, 36.0], [4000.0, 26.0], [4100.0, 41.0], [4300.0, 10.0], [4200.0, 1.0], [66500.0, 2.0], [68100.0, 1.0], [4600.0, 43.0], [4500.0, 49.0], [4400.0, 10.0], [69700.0, 2.0], [71300.0, 2.0], [72900.0, 2.0], [4700.0, 81.0], [4800.0, 92.0], [74500.0, 2.0], [4900.0, 18.0], [5000.0, 41.0], [5100.0, 55.0], [5300.0, 56.0], [5200.0, 123.0], [5500.0, 34.0], [5400.0, 26.0], [5600.0, 56.0], [5700.0, 25.0], [5800.0, 47.0], [5900.0, 29.0], [6100.0, 20.0], [6000.0, 31.0], [6200.0, 78.0], [6300.0, 13.0], [6400.0, 76.0], [6500.0, 102.0], [6600.0, 46.0], [6700.0, 87.0], [6900.0, 12.0], [6800.0, 5.0], [7000.0, 68.0], [7100.0, 124.0], [7300.0, 47.0], [7400.0, 129.0], [7200.0, 50.0], [7500.0, 141.0], [7600.0, 106.0], [7700.0, 15.0], [7800.0, 59.0], [7900.0, 61.0], [8000.0, 67.0], [8100.0, 50.0], [8200.0, 40.0], [8400.0, 39.0], [8600.0, 83.0], [8800.0, 65.0], [9000.0, 48.0], [9200.0, 82.0], [9400.0, 52.0], [9600.0, 75.0], [9800.0, 61.0], [10200.0, 28.0], [10000.0, 61.0], [10400.0, 54.0], [10600.0, 49.0], [10800.0, 27.0], [11000.0, 39.0], [11200.0, 16.0], [11600.0, 16.0], [11400.0, 17.0], [11800.0, 7.0], [12000.0, 21.0], [12200.0, 12.0], [12400.0, 16.0], [12600.0, 18.0], [12800.0, 35.0], [13000.0, 3.0], [13200.0, 7.0], [13600.0, 3.0], [13400.0, 1.0], [13800.0, 46.0], [14000.0, 2.0], [14200.0, 3.0], [14400.0, 4.0], [14600.0, 10.0], [14800.0, 9.0], [15000.0, 54.0], [15200.0, 35.0], [15400.0, 22.0], [15600.0, 46.0], [15800.0, 7.0], [16000.0, 6.0], [16200.0, 16.0], [17200.0, 19.0], [16400.0, 5.0], [16800.0, 6.0], [17600.0, 3.0], [18000.0, 9.0], [18400.0, 3.0], [18800.0, 4.0], [19200.0, 10.0], [19600.0, 16.0], [20000.0, 3.0], [20400.0, 1.0], [20800.0, 14.0], [21200.0, 9.0], [22000.0, 5.0], [22400.0, 41.0], [22800.0, 48.0], [23200.0, 32.0], [23600.0, 27.0], [24000.0, 3.0], [24400.0, 8.0], [24800.0, 8.0], [25200.0, 1.0], [25600.0, 3.0], [26000.0, 3.0], [26400.0, 3.0], [26800.0, 1.0], [27600.0, 2.0], [28400.0, 9.0], [28000.0, 36.0], [28800.0, 6.0], [29200.0, 1.0], [29600.0, 4.0], [30000.0, 3.0], [30800.0, 2.0], [31200.0, 2.0], [31600.0, 2.0], [32000.0, 4.0], [32400.0, 1.0], [32800.0, 1.0], [33600.0, 2.0], [34400.0, 2.0], [35200.0, 2.0], [36000.0, 3.0], [36800.0, 2.0], [37600.0, 4.0], [38400.0, 4.0], [39200.0, 3.0], [40000.0, 6.0], [40800.0, 6.0], [41600.0, 3.0], [42400.0, 3.0], [43200.0, 1.0], [44000.0, 3.0], [44800.0, 3.0], [45600.0, 1.0], [46400.0, 3.0], [47200.0, 4.0], [48000.0, 5.0], [48800.0, 5.0], [49600.0, 4.0], [50400.0, 5.0], [51200.0, 6.0], [52000.0, 5.0], [52800.0, 6.0], [54400.0, 1.0], [55200.0, 1.0], [56000.0, 2.0], [56800.0, 2.0], [57600.0, 1.0], [58400.0, 4.0], [59200.0, 2.0], [60000.0, 2.0], [60800.0, 2.0], [61600.0, 2.0], [62400.0, 2.0], [64000.0, 2.0], [64800.0, 2.0], [65600.0, 3.0], [67200.0, 1.0], [68800.0, 2.0], [70400.0, 1.0], [73600.0, 4.0], [67100.0, 2.0], [68700.0, 3.0], [70300.0, 6.0], [71900.0, 3.0], [73500.0, 1.0], [75100.0, 1.0], [33100.0, 2.0], [33900.0, 3.0], [34700.0, 2.0], [35500.0, 4.0], [36300.0, 2.0], [37100.0, 3.0], [37900.0, 2.0], [39500.0, 2.0], [40300.0, 3.0], [41100.0, 2.0], [41900.0, 2.0], [42700.0, 2.0], [43500.0, 2.0], [44300.0, 4.0], [45100.0, 4.0], [45900.0, 2.0], [46700.0, 3.0], [47500.0, 1.0], [49100.0, 2.0], [49900.0, 2.0], [50700.0, 1.0], [51500.0, 4.0], [53100.0, 3.0], [53900.0, 4.0], [54700.0, 3.0], [55500.0, 2.0], [56300.0, 5.0], [57100.0, 1.0], [57900.0, 2.0], [58700.0, 2.0], [59500.0, 1.0], [60300.0, 2.0], [61100.0, 1.0], [61900.0, 4.0], [62700.0, 3.0], [63500.0, 3.0], [65100.0, 1.0], [66200.0, 2.0], [67800.0, 3.0], [69400.0, 5.0], [71000.0, 3.0], [72600.0, 4.0], [74200.0, 3.0], [66900.0, 2.0], [68500.0, 4.0], [70100.0, 2.0], [71700.0, 4.0], [73300.0, 4.0], [74900.0, 4.0], [16900.0, 7.0], [17300.0, 4.0], [17700.0, 2.0], [18900.0, 5.0], [18500.0, 1.0], [19300.0, 6.0], [19700.0, 4.0], [20100.0, 12.0], [20500.0, 2.0], [20900.0, 6.0], [21300.0, 24.0], [21700.0, 3.0], [22100.0, 19.0], [22500.0, 27.0], [22900.0, 12.0], [23300.0, 15.0], [23700.0, 29.0], [24100.0, 3.0], [24500.0, 1.0], [24900.0, 1.0], [25300.0, 4.0], [25700.0, 4.0], [26100.0, 5.0], [26500.0, 6.0], [26900.0, 1.0], [27300.0, 4.0], [27700.0, 3.0], [28100.0, 10.0], [28500.0, 8.0], [28900.0, 5.0], [29300.0, 1.0], [29700.0, 1.0], [30100.0, 4.0], [30500.0, 2.0], [30900.0, 3.0], [31300.0, 4.0], [31700.0, 1.0], [32100.0, 2.0], [32500.0, 2.0], [33000.0, 2.0], [33800.0, 1.0], [34600.0, 4.0], [35400.0, 2.0], [36200.0, 3.0], [37000.0, 3.0], [37800.0, 3.0], [38600.0, 5.0], [39400.0, 3.0], [40200.0, 2.0], [41000.0, 2.0], [41800.0, 2.0], [42600.0, 6.0], [43400.0, 2.0], [44200.0, 5.0], [45000.0, 3.0], [47400.0, 5.0], [48200.0, 3.0], [49000.0, 1.0], [49800.0, 1.0], [50600.0, 3.0], [51400.0, 3.0], [52200.0, 6.0], [53000.0, 3.0], [53800.0, 1.0], [54600.0, 4.0], [55400.0, 4.0], [56200.0, 2.0], [57000.0, 2.0], [57800.0, 4.0], [58600.0, 3.0], [59400.0, 4.0], [60200.0, 1.0], [61000.0, 5.0], [61800.0, 4.0], [62600.0, 1.0], [63400.0, 1.0], [64200.0, 1.0], [65000.0, 4.0], [66000.0, 6.0], [67600.0, 4.0], [69200.0, 2.0], [70800.0, 3.0], [72400.0, 2.0], [74000.0, 2.0], [65900.0, 4.0], [67500.0, 3.0], [69100.0, 4.0], [70700.0, 4.0], [72300.0, 2.0], [75500.0, 1.0], [33300.0, 2.0], [34100.0, 2.0], [34900.0, 2.0], [35700.0, 2.0], [36500.0, 6.0], [37300.0, 3.0], [38100.0, 6.0], [38900.0, 2.0], [39700.0, 1.0], [40500.0, 4.0], [41300.0, 5.0], [42100.0, 3.0], [42900.0, 3.0], [43700.0, 2.0], [44500.0, 2.0], [45300.0, 3.0], [46100.0, 1.0], [46900.0, 2.0], [47700.0, 2.0], [48500.0, 1.0], [49300.0, 2.0], [50900.0, 3.0], [51700.0, 4.0], [52500.0, 1.0], [53300.0, 2.0], [54100.0, 2.0], [54900.0, 2.0], [55700.0, 6.0], [56500.0, 2.0], [57300.0, 2.0], [58100.0, 2.0], [58900.0, 1.0], [59700.0, 6.0], [60500.0, 3.0], [61300.0, 2.0], [62100.0, 1.0], [62900.0, 3.0], [64500.0, 5.0], [65300.0, 2.0], [66600.0, 1.0], [68200.0, 2.0], [69800.0, 1.0], [71400.0, 3.0], [73000.0, 3.0], [74600.0, 2.0], [65700.0, 2.0], [67300.0, 2.0], [68900.0, 1.0], [70500.0, 1.0], [72100.0, 6.0], [73700.0, 2.0], [75300.0, 3.0], [8300.0, 43.0], [8500.0, 45.0], [8700.0, 103.0], [8900.0, 48.0], [9100.0, 79.0], [9300.0, 124.0], [9500.0, 88.0], [9700.0, 77.0], [9900.0, 48.0], [10100.0, 33.0], [10300.0, 23.0], [10500.0, 42.0], [10700.0, 37.0], [11100.0, 5.0], [10900.0, 14.0], [11300.0, 24.0], [11500.0, 5.0], [11700.0, 50.0], [11900.0, 25.0], [12100.0, 9.0], [12300.0, 29.0], [12500.0, 92.0], [12700.0, 3.0], [12900.0, 41.0], [13100.0, 6.0], [13300.0, 1.0], [13500.0, 2.0], [13700.0, 13.0], [13900.0, 19.0], [14100.0, 4.0], [14300.0, 1.0], [14500.0, 1.0], [14700.0, 18.0], [14900.0, 7.0], [15100.0, 62.0], [15300.0, 46.0], [15500.0, 66.0], [15700.0, 30.0], [16100.0, 25.0], [16300.0, 4.0], [16600.0, 4.0], [17400.0, 3.0], [17800.0, 23.0], [18200.0, 3.0], [18600.0, 3.0], [19000.0, 3.0], [19400.0, 15.0], [19800.0, 5.0], [20200.0, 59.0], [21000.0, 687.0], [20600.0, 6.0], [21400.0, 1.0], [21800.0, 4.0], [22200.0, 22.0], [22600.0, 16.0], [23000.0, 3.0], [23400.0, 10.0], [23800.0, 8.0], [24200.0, 3.0], [25000.0, 4.0], [24600.0, 1.0], [25400.0, 4.0], [25800.0, 1.0], [26200.0, 2.0], [26600.0, 7.0], [27000.0, 4.0], [27400.0, 7.0], [27800.0, 3.0], [28200.0, 1.0], [28600.0, 2.0], [29000.0, 4.0], [29400.0, 2.0], [29800.0, 2.0], [30200.0, 2.0], [30600.0, 6.0], [31000.0, 1.0], [31400.0, 3.0], [31800.0, 3.0], [32200.0, 4.0], [32600.0, 2.0], [33200.0, 7.0], [34000.0, 8.0], [34800.0, 3.0], [35600.0, 2.0], [36400.0, 1.0], [37200.0, 3.0], [38000.0, 2.0], [38800.0, 3.0], [39600.0, 3.0], [40400.0, 1.0], [41200.0, 3.0], [42000.0, 4.0], [42800.0, 5.0], [43600.0, 2.0], [44400.0, 1.0], [45200.0, 3.0], [46000.0, 5.0], [46800.0, 1.0], [47600.0, 2.0], [48400.0, 3.0], [49200.0, 2.0], [50800.0, 1.0], [52400.0, 4.0], [53200.0, 5.0], [54000.0, 2.0], [54800.0, 2.0], [55600.0, 3.0], [56400.0, 2.0], [57200.0, 2.0], [58000.0, 2.0], [58800.0, 5.0], [59600.0, 4.0], [60400.0, 6.0], [61200.0, 3.0], [62000.0, 3.0], [62800.0, 4.0], [63600.0, 3.0], [64400.0, 6.0], [65200.0, 2.0], [66400.0, 3.0], [68000.0, 4.0], [69600.0, 2.0], [71200.0, 3.0], [74400.0, 4.0], [66300.0, 1.0], [67900.0, 2.0], [69500.0, 2.0], [71100.0, 1.0], [72700.0, 3.0], [33500.0, 3.0], [35100.0, 11.0], [35900.0, 1.0], [36700.0, 4.0], [37500.0, 1.0], [38300.0, 1.0], [39100.0, 3.0], [39900.0, 2.0], [40700.0, 1.0], [42300.0, 1.0], [43100.0, 3.0], [43900.0, 4.0], [44700.0, 2.0], [45500.0, 5.0], [46300.0, 3.0], [47100.0, 4.0], [47900.0, 2.0], [48700.0, 2.0], [49500.0, 4.0], [50300.0, 2.0], [51100.0, 1.0], [51900.0, 3.0], [52700.0, 2.0], [53500.0, 3.0], [54300.0, 2.0], [55100.0, 2.0], [55900.0, 2.0], [56700.0, 1.0], [57500.0, 3.0], [58300.0, 2.0], [59100.0, 2.0], [59900.0, 2.0], [60700.0, 2.0], [62300.0, 4.0], [63100.0, 3.0], [63900.0, 1.0], [64700.0, 2.0], [67000.0, 1.0], [70200.0, 4.0], [71800.0, 3.0], [73400.0, 4.0], [75000.0, 4.0], [66100.0, 3.0], [67700.0, 3.0], [69300.0, 3.0], [70900.0, 3.0], [72500.0, 2.0], [74100.0, 3.0], [16700.0, 3.0], [17100.0, 5.0], [17500.0, 3.0], [17900.0, 18.0], [18300.0, 10.0], [18700.0, 1.0], [19100.0, 1.0], [19500.0, 14.0], [19900.0, 3.0], [20300.0, 2.0], [20700.0, 6.0], [21100.0, 3.0], [21500.0, 4.0], [21900.0, 6.0], [22300.0, 10.0], [22700.0, 16.0], [23100.0, 9.0], [23500.0, 13.0], [23900.0, 2.0], [24300.0, 8.0], [24700.0, 2.0], [25100.0, 2.0], [25500.0, 1.0], [25900.0, 3.0], [26300.0, 7.0], [27100.0, 3.0], [26700.0, 3.0], [28300.0, 17.0], [27900.0, 1.0], [28700.0, 15.0], [29100.0, 2.0], [29500.0, 3.0], [29900.0, 4.0], [30300.0, 3.0], [30700.0, 2.0], [31100.0, 4.0], [31500.0, 3.0], [31900.0, 1.0], [32700.0, 5.0], [32300.0, 3.0], [33400.0, 2.0], [34200.0, 2.0], [35000.0, 16.0], [35800.0, 1.0], [36600.0, 3.0], [37400.0, 3.0], [38200.0, 2.0], [39000.0, 3.0], [39800.0, 3.0], [40600.0, 3.0], [41400.0, 1.0], [42200.0, 5.0], [43000.0, 2.0], [43800.0, 3.0], [44600.0, 2.0], [45400.0, 5.0], [46200.0, 1.0], [47000.0, 3.0], [47800.0, 8.0], [48600.0, 3.0], [49400.0, 2.0], [50200.0, 1.0], [51000.0, 3.0], [51800.0, 2.0], [52600.0, 3.0], [54200.0, 5.0], [53400.0, 3.0], [55000.0, 1.0], [55800.0, 4.0], [56600.0, 4.0], [57400.0, 2.0], [58200.0, 1.0], [59000.0, 3.0], [59800.0, 2.0], [60600.0, 3.0], [61400.0, 1.0], [62200.0, 4.0], [63000.0, 3.0], [63800.0, 4.0], [64600.0, 2.0], [65400.0, 3.0], [66800.0, 8.0], [68400.0, 3.0], [70000.0, 3.0], [71600.0, 4.0], [73200.0, 1.0], [74800.0, 7.0]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 75500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 443.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 9898.0, "series": [{"data": [[0.0, 443.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 834.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 9898.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 825.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 194.56185567010314, "minX": 1.63090134E12, "maxY": 1184.680904522613, "series": [{"data": [[1.63090134E12, 963.2860000000005]], "isOverall": false, "label": "addDemand", "isController": false}, {"data": [[1.63090146E12, 1052.6810000000005]], "isOverall": false, "label": "getDemandByIde", "isController": false}, {"data": [[1.63090152E12, 990.1600000000005]], "isOverall": false, "label": "editDemand", "isController": false}, {"data": [[1.63090146E12, 949.3385000000005]], "isOverall": false, "label": "listOnesDemandsByPage", "isController": false}, {"data": [[1.63090134E12, 691.3135000000008]], "isOverall": false, "label": "removeDemand", "isController": false}, {"data": [[1.63090146E12, 194.56185567010314], [1.63090134E12, 1022.1500000000001], [1.6309014E12, 1184.680904522613]], "isOverall": false, "label": "listAllDemandsByPage", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090152E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 922.4, "minX": 1.0, "maxY": 74920.0, "series": [{"data": [[2.0, 37422.666666666664], [3.0, 27661.8], [4.0, 11997.666666666666], [5.0, 37349.6], [6.0, 22191.4], [7.0, 20972.0], [8.0, 32082.833333333332], [9.0, 30023.333333333332], [10.0, 29329.0], [11.0, 26448.625], [12.0, 33068.2], [13.0, 21841.0], [14.0, 25050.714285714286], [15.0, 24743.0], [16.0, 28123.666666666668], [17.0, 30084.25], [18.0, 17581.8], [19.0, 23851.6], [20.0, 20794.4], [21.0, 28324.06666666667], [22.0, 28723.0], [23.0, 74920.0], [24.0, 15418.999999999998], [25.0, 74850.0], [26.0, 38807.5], [27.0, 31009.666666666668], [28.0, 26322.0], [29.0, 44860.0], [30.0, 13747.5], [31.0, 41784.0], [33.0, 18730.666666666668], [32.0, 12292.888888888889], [35.0, 16685.714285714286], [34.0, 35392.666666666664], [37.0, 32235.666666666668], [36.0, 4309.0], [39.0, 32374.285714285714], [38.0, 3334.666666666667], [41.0, 14882.78260869565], [40.0, 35176.666666666664], [43.0, 26347.25], [42.0, 26169.2], [44.0, 27168.5], [45.0, 39801.75], [47.0, 3294.0], [46.0, 26582.75], [49.0, 16022.0], [48.0, 41905.25], [50.0, 25151.2], [51.0, 23454.875], [53.0, 16351.470588235294], [52.0, 9004.454545454546], [55.0, 6523.733333333334], [54.0, 30589.666666666668], [57.0, 30578.333333333332], [56.0, 16499.642857142855], [59.0, 14268.0], [58.0, 23751.75], [61.0, 23619.0], [60.0, 17698.4], [63.0, 24089.75], [62.0, 28772.0], [67.0, 6241.833333333333], [66.0, 11804.250000000004], [65.0, 25514.5], [64.0, 20062.777777777777], [70.0, 15346.125], [71.0, 38689.5], [68.0, 41324.5], [69.0, 44161.5], [75.0, 17762.899999999998], [72.0, 16213.772727272728], [74.0, 72742.0], [73.0, 72590.0], [77.0, 9229.5], [76.0, 26822.666666666668], [78.0, 14979.400000000001], [79.0, 27733.857142857145], [83.0, 10126.222222222223], [82.0, 27117.333333333332], [81.0, 17383.599999999995], [80.0, 23846.25], [87.0, 13268.5], [86.0, 24003.0], [85.0, 22276.0], [84.0, 10951.733333333334], [91.0, 25192.0], [90.0, 18491.44444444444], [89.0, 26626.666666666668], [88.0, 24407.999999999996], [95.0, 17816.749999999996], [93.0, 11571.272727272728], [92.0, 18332.0], [94.0, 24869.333333333332], [99.0, 35967.85714285714], [97.0, 3378.0], [96.0, 25070.0], [98.0, 4775.8], [103.0, 15149.0], [102.0, 25037.75], [101.0, 13292.0], [100.0, 27515.666666666668], [107.0, 33764.0], [106.0, 12161.636363636364], [105.0, 18480.166666666668], [104.0, 22131.0], [110.0, 13042.57142857143], [108.0, 28339.666666666664], [111.0, 25074.0], [109.0, 17845.285714285714], [115.0, 11107.76923076923], [114.0, 15846.0], [113.0, 16415.46153846154], [112.0, 16495.142857142855], [117.0, 17256.2], [118.0, 23234.2], [119.0, 17009.8], [116.0, 71207.0], [123.0, 22751.166666666668], [122.0, 18589.25], [121.0, 16148.166666666666], [120.0, 12495.166666666666], [127.0, 11221.538461538461], [124.0, 5661.2941176470595], [125.0, 23669.0], [126.0, 20610.285714285714], [135.0, 12728.142857142859], [134.0, 12370.499999999998], [133.0, 13795.142857142859], [128.0, 24152.166666666664], [132.0, 10015.222222222223], [131.0, 12225.850000000002], [130.0, 10498.529411764706], [129.0, 15074.5], [143.0, 36606.5], [142.0, 16686.2], [139.0, 36722.5], [138.0, 12838.75], [136.0, 18527.8], [137.0, 17792.6], [141.0, 16843.2], [140.0, 32711.0], [151.0, 25452.0], [150.0, 23479.25], [149.0, 13949.75], [148.0, 16017.0], [147.0, 25626.333333333332], [146.0, 24427.0], [145.0, 13998.5], [144.0, 70261.0], [159.0, 26654.5], [158.0, 23157.5], [157.0, 21632.125], [156.0, 16654.0], [152.0, 9231.125], [154.0, 17585.375], [153.0, 24684.083333333332], [155.0, 20280.714285714286], [167.0, 24664.6], [166.0, 16642.6], [165.0, 20664.6], [164.0, 36275.0], [163.0, 23391.5], [162.0, 32002.333333333332], [161.0, 16698.57142857143], [160.0, 14385.25], [175.0, 12838.714285714286], [171.0, 12910.714285714286], [170.0, 36169.5], [169.0, 23873.0], [174.0, 68721.0], [173.0, 68952.0], [172.0, 69164.0], [168.0, 46286.5], [183.0, 36141.0], [182.0, 11674.0], [181.0, 36135.5], [180.0, 35849.0], [179.0, 35847.0], [178.0, 35964.0], [177.0, 35902.0], [176.0, 16425.6], [191.0, 12649.375], [189.0, 17663.125], [188.0, 4393.428571428572], [187.0, 24271.5], [186.0, 17285.833333333332], [190.0, 15383.42857142857], [184.0, 25204.0], [185.0, 68293.0], [199.0, 18184.4], [198.0, 15836.399999999998], [197.0, 4072.833333333333], [196.0, 11740.285714285714], [195.0, 9939.909090909092], [194.0, 11253.999999999998], [193.0, 23591.14285714286], [192.0, 2836.0], [205.0, 20005.5], [204.0, 22251.0], [203.0, 15016.714285714286], [202.0, 20657.187499999996], [200.0, 9618.181818181818], [206.0, 14361.8], [201.0, 19810.5], [207.0, 14190.757575757576], [215.0, 17089.0], [214.0, 10999.60975609756], [213.0, 12341.333333333334], [211.0, 17761.0], [210.0, 16303.8], [209.0, 26044.75], [208.0, 11505.272727272728], [212.0, 14445.666666666666], [223.0, 27499.666666666668], [222.0, 10622.857142857143], [220.0, 17758.5], [219.0, 23322.333333333332], [218.0, 13394.555555555555], [216.0, 26275.625], [221.0, 19023.166666666668], [217.0, 17679.0], [230.0, 11227.77777777778], [228.0, 10693.000000000002], [225.0, 14464.166666666666], [227.0, 7998.461538461539], [226.0, 16553.0], [231.0, 14450.25], [229.0, 33326.5], [224.0, 13630.624999999998], [239.0, 10546.0], [236.0, 19819.666666666668], [234.0, 19448.545454545456], [233.0, 2092.5], [232.0, 5359.111111111111], [238.0, 19827.230769230766], [237.0, 19953.800000000003], [235.0, 31693.333333333332], [245.0, 34598.0], [244.0, 26929.666666666668], [243.0, 14540.000000000002], [246.0, 21375.374999999996], [242.0, 11804.857142857141], [240.0, 33133.5], [247.0, 10859.235294117647], [241.0, 38570.0], [255.0, 10730.000000000002], [254.0, 18857.25], [253.0, 34573.5], [251.0, 19252.272727272728], [249.0, 15971.400000000001], [248.0, 16711.833333333336], [250.0, 11491.0], [252.0, 66035.0], [270.0, 34217.5], [271.0, 20917.4], [269.0, 17191.5], [268.0, 16976.777777777777], [267.0, 34400.0], [266.0, 19185.666666666664], [265.0, 16171.7], [264.0, 34387.0], [263.0, 34301.5], [257.0, 14608.363636363638], [256.0, 23391.75], [259.0, 17363.625], [258.0, 20207.833333333336], [262.0, 19027.69230769231], [261.0, 25981.0], [260.0, 17336.9], [286.0, 33820.0], [287.0, 18677.5], [285.0, 23991.0], [275.0, 30257.333333333332], [284.0, 64463.0], [274.0, 20354.999999999996], [272.0, 15097.5], [273.0, 43720.5], [279.0, 17498.125000000004], [283.0, 19013.333333333336], [282.0, 10525.7], [281.0, 12237.142857142857], [280.0, 23875.333333333332], [278.0, 34397.0], [277.0, 18813.5], [276.0, 24032.666666666668], [300.0, 20810.25], [299.0, 20799.75], [298.0, 6989.454545454546], [296.0, 13627.0], [297.0, 37919.0], [303.0, 29521.4], [301.0, 16391.833333333336], [302.0, 11783.0], [295.0, 12990.555555555555], [289.0, 13692.6], [288.0, 10298.75], [294.0, 33790.0], [293.0, 11536.25], [292.0, 18333.6], [291.0, 10216.8], [290.0, 19904.0], [316.0, 27950.75], [318.0, 33353.5], [319.0, 33531.5], [312.0, 17517.370370370372], [317.0, 19631.315789473683], [315.0, 15352.8], [314.0, 12867.814814814814], [313.0, 23141.0], [311.0, 15221.9], [304.0, 13538.545454545454], [306.0, 33336.5], [307.0, 32793.5], [305.0, 33593.0], [310.0, 13893.857142857143], [309.0, 20624.222222222226], [308.0, 43176.5], [323.0, 18490.0], [335.0, 33121.0], [334.0, 12694.0], [333.0, 14101.625], [332.0, 11496.923076923076], [322.0, 27473.0], [321.0, 3605.0], [320.0, 26852.4], [330.0, 22435.75], [331.0, 21093.333333333336], [329.0, 19943.714285714286], [328.0, 33338.0], [327.0, 15338.8], [326.0, 22821.125000000004], [325.0, 32951.5], [324.0, 19110.8], [350.0, 22878.0], [348.0, 17598.333333333332], [349.0, 28374.666666666664], [339.0, 18170.461538461543], [338.0, 14125.166666666668], [337.0, 16536.4], [336.0, 36293.5], [346.0, 25416.333333333332], [347.0, 26760.85714285714], [345.0, 16541.8], [344.0, 12934.421052631578], [351.0, 15248.8], [343.0, 17816.0], [342.0, 14026.599999999999], [341.0, 18887.5], [340.0, 7295.5], [366.0, 25552.166666666664], [367.0, 32489.5], [364.0, 22792.25], [365.0, 16833.0], [355.0, 10307.291666666664], [354.0, 19772.2], [353.0, 29227.833333333332], [352.0, 36967.5], [362.0, 32567.5], [363.0, 42181.0], [361.0, 3686.5], [360.0, 11818.0], [359.0, 23110.333333333332], [357.0, 32894.5], [358.0, 61911.0], [356.0, 27644.75], [382.0, 17727.75], [383.0, 22541.75], [380.0, 32138.5], [371.0, 23693.8], [381.0, 13811.888888888889], [370.0, 22288.6], [369.0, 15723.545454545454], [368.0, 12761.333333333332], [374.0, 12695.0], [375.0, 26098.81818181818], [379.0, 13120.0], [378.0, 9822.142857142857], [377.0, 11537.5], [376.0, 11976.166666666668], [373.0, 17530.2], [372.0, 14287.384615384615], [387.0, 9299.777777777777], [399.0, 12448.25], [392.0, 17183.363636363636], [398.0, 18668.75], [396.0, 12819.5], [397.0, 25323.25], [394.0, 12060.999999999998], [395.0, 14887.9], [393.0, 19159.999999999996], [391.0, 13334.166666666666], [390.0, 16534.142857142855], [389.0, 9561.666666666666], [388.0, 35560.5], [385.0, 13710.888888888889], [386.0, 14085.538461538463], [384.0, 22461.666666666668], [402.0, 20380.0], [415.0, 3385.6666666666665], [412.0, 31653.5], [403.0, 60453.0], [413.0, 10560.375], [414.0, 59676.0], [411.0, 14419.6], [410.0, 12774.749999999998], [409.0, 15324.142857142859], [407.0, 13557.545454545454], [406.0, 9482.083333333334], [404.0, 12296.8], [405.0, 20898.625], [401.0, 9821.111111111111], [400.0, 19136.571428571428], [408.0, 14016.624999999998], [430.0, 7435.166666666666], [431.0, 20915.5], [429.0, 12251.5], [428.0, 23929.666666666668], [427.0, 20108.0], [426.0, 31223.0], [425.0, 12761.833333333332], [424.0, 31579.0], [423.0, 21116.75], [419.0, 24500.333333333332], [418.0, 17428.25], [417.0, 17434.5], [416.0, 40910.0], [422.0, 17166.5], [421.0, 14082.0], [420.0, 16471.777777777774], [446.0, 14449.800000000001], [447.0, 15579.000000000002], [445.0, 16178.384615384613], [444.0, 16141.23076923077], [443.0, 12359.809523809523], [440.0, 18078.14285714286], [441.0, 20860.666666666664], [442.0, 18294.666666666668], [438.0, 14730.571428571428], [432.0, 23601.333333333332], [439.0, 17166.0], [435.0, 13035.300000000001], [434.0, 16356.6], [433.0, 11992.083333333334], [437.0, 13800.142857142857], [436.0, 13274.285714285714], [450.0, 13402.333333333334], [461.0, 15515.333333333332], [460.0, 33368.0], [451.0, 42093.333333333336], [459.0, 14532.875], [458.0, 10622.25], [452.0, 21828.666666666668], [453.0, 25387.142857142855], [449.0, 30874.0], [448.0, 14604.6], [462.0, 15765.0], [463.0, 33321.666666666664], [457.0, 57863.0], [456.0, 57889.0], [455.0, 10308.75], [454.0, 58161.0], [476.0, 30196.0], [478.0, 25533.5], [479.0, 21085.5], [473.0, 20898.5], [472.0, 21326.4], [477.0, 16759.75], [475.0, 10830.083333333332], [474.0, 17113.8], [471.0, 21191.666666666668], [464.0, 18120.333333333332], [465.0, 57750.0], [467.0, 21037.0], [466.0, 11183.714285714286], [470.0, 16602.6], [468.0, 21214.625], [469.0, 33557.0], [494.0, 19503.0], [495.0, 14965.857142857143], [493.0, 17736.444444444445], [492.0, 13167.181818181818], [491.0, 17697.25], [490.0, 16161.8], [488.0, 22701.333333333332], [489.0, 38680.5], [487.0, 11357.142857142855], [480.0, 30339.0], [481.0, 17445.8], [482.0, 19947.75], [483.0, 15579.499999999998], [486.0, 22858.666666666668], [485.0, 9398.8], [484.0, 33347.0], [508.0, 10024.363636363636], [511.0, 22367.0], [510.0, 12833.769230769232], [509.0, 21970.0], [504.0, 12454.09090909091], [506.0, 15022.6], [505.0, 26851.0], [507.0, 19480.5], [503.0, 15687.571428571428], [501.0, 13739.142857142857], [500.0, 30426.75], [502.0, 14253.0], [499.0, 8998.714285714284], [498.0, 16457.11111111111], [497.0, 8585.25], [496.0, 18286.428571428572], [538.0, 28326.0], [542.0, 18951.25], [530.0, 15364.000000000002], [528.0, 27817.2], [532.0, 19182.25], [540.0, 8840.0], [518.0, 7850.928571428572], [536.0, 24491.333333333332], [516.0, 19612.0], [514.0, 14903.0], [512.0, 13503.2], [524.0, 16029.25], [526.0, 32797.0], [522.0, 11201.785714285714], [520.0, 13677.0], [534.0, 16582.363636363636], [568.0, 28052.5], [574.0, 15180.571428571428], [560.0, 11652.857142857143], [562.0, 16438.428571428572], [570.0, 23778.8], [572.0, 26064.75], [550.0, 7724.199999999999], [548.0, 12427.214285714286], [546.0, 20283.333333333332], [544.0, 23011.4], [558.0, 20090.666666666668], [556.0, 22231.333333333332], [554.0, 19708.166666666664], [552.0, 25698.666666666668], [566.0, 10923.833333333334], [564.0, 25089.125], [602.0, 16244.285714285714], [600.0, 14432.833333333332], [606.0, 10044.105263157893], [594.0, 19151.75], [592.0, 19499.0], [604.0, 12352.105263157895], [590.0, 13159.300000000001], [578.0, 10473.5], [576.0, 4436.666666666666], [580.0, 2942.0], [582.0, 21459.0], [588.0, 16431.0], [586.0, 16356.333333333334], [584.0, 15849.5], [596.0, 21067.333333333336], [598.0, 31142.4], [632.0, 18156.5], [634.0, 10532.57142857143], [636.0, 19608.6], [608.0, 27034.5], [612.0, 27409.5], [610.0, 17407.25], [614.0, 21608.2], [630.0, 5579.0], [628.0, 20021.090909090908], [626.0, 18770.0], [624.0, 51491.0], [638.0, 19477.333333333336], [622.0, 18472.0], [620.0, 15564.0], [618.0, 11989.999999999998], [616.0, 15956.42857142857], [666.0, 18912.6], [670.0, 19077.833333333332], [656.0, 17814.75], [668.0, 12238.125], [640.0, 19421.363636363636], [664.0, 17455.6], [646.0, 20508.833333333332], [644.0, 19389.0], [642.0, 50450.0], [654.0, 10997.68181818182], [652.0, 20654.0], [650.0, 6207.25], [648.0, 21154.81818181818], [660.0, 12090.357142857143], [662.0, 25260.85714285714], [658.0, 18687.0], [698.0, 12869.5], [700.0, 5864.642857142858], [702.0, 10832.90909090909], [688.0, 19530.333333333332], [690.0, 25158.0], [696.0, 14185.0], [678.0, 7670.083333333333], [676.0, 11524.5], [674.0, 21787.0], [672.0, 20820.0], [686.0, 9226.272727272728], [684.0, 11751.5], [682.0, 20482.333333333332], [680.0, 23444.0], [694.0, 10850.888888888889], [692.0, 16518.42857142857], [730.0, 23681.333333333332], [734.0, 8623.083333333332], [720.0, 9513.333333333332], [722.0, 29964.0], [732.0, 18012.4], [728.0, 24771.5], [710.0, 19546.666666666668], [708.0, 6879.125], [706.0, 18092.5], [704.0, 14127.777777777777], [718.0, 11706.833333333334], [714.0, 10477.785714285714], [716.0, 48276.0], [712.0, 9629.833333333332], [726.0, 1859.0], [724.0, 47613.0], [764.0, 11854.25], [760.0, 10463.666666666668], [752.0, 19138.666666666668], [756.0, 13605.5], [754.0, 12217.555555555555], [766.0, 10214.5], [762.0, 12688.6], [736.0, 18261.499999999996], [738.0, 10652.142857142859], [740.0, 24758.5], [742.0, 24531.0], [750.0, 13022.666666666668], [748.0, 16724.5], [746.0, 7311.5], [744.0, 24172.0], [758.0, 11410.2], [792.0, 8225.454545454546], [796.0, 23259.0], [768.0, 13226.7], [782.0, 33277.5], [770.0, 11264.142857142857], [772.0, 13898.833333333334], [774.0, 22729.333333333332], [780.0, 6658.166666666667], [776.0, 14446.8], [778.0, 15874.357142857143], [798.0, 17691.0], [784.0, 2295.0], [786.0, 13245.375], [794.0, 23646.0], [788.0, 23305.5], [790.0, 44879.0], [802.0, 16034.333333333334], [830.0, 21901.0], [826.0, 11216.9], [804.0, 9550.333333333332], [824.0, 44251.0], [806.0, 11214.583333333336], [800.0, 6863.59090909091], [814.0, 9024.857142857143], [812.0, 22256.0], [810.0, 15927.333333333334], [808.0, 9483.333333333332], [816.0, 16179.333333333334], [820.0, 11190.500000000002], [818.0, 44612.0], [828.0, 7293.545454545455], [822.0, 22557.0], [856.0, 14762.25], [860.0, 12612.222222222223], [850.0, 12156.6], [854.0, 11588.0], [852.0, 25687.5], [848.0, 13686.8], [862.0, 11952.666666666668], [858.0, 15842.666666666666], [832.0, 13265.625], [834.0, 14338.666666666668], [836.0, 18008.0], [838.0, 17027.714285714286], [846.0, 4099.444444444444], [844.0, 21910.666666666668], [842.0, 18047.6], [840.0, 9918.666666666666], [894.0, 4697.266666666666], [890.0, 14848.0], [888.0, 14196.4], [870.0, 18814.57142857143], [892.0, 11494.0], [884.0, 15721.363636363636], [886.0, 41833.0], [882.0, 11616.0], [880.0, 17319.333333333332], [878.0, 10268.0], [872.0, 8602.57142857143], [876.0, 12551.75], [874.0, 24097.0], [868.0, 16489.0], [866.0, 10798.0], [864.0, 19202.333333333336], [922.0, 13003.5], [916.0, 15067.23076923077], [914.0, 12045.125], [912.0, 40970.0], [926.0, 7532.888888888888], [924.0, 924.0], [920.0, 1252.9000000000003], [902.0, 3213.0000000000005], [900.0, 14585.666666666668], [910.0, 9460.666666666668], [898.0, 15733.833333333332], [896.0, 10235.333333333332], [908.0, 15070.333333333334], [904.0, 11576.166666666668], [906.0, 16854.25], [918.0, 9869.111111111111], [958.0, 10911.5], [932.0, 11277.428571428572], [952.0, 14090.666666666666], [934.0, 22999.333333333332], [956.0, 14605.8], [954.0, 30257.0], [930.0, 6513.833333333334], [942.0, 27282.666666666668], [928.0, 6902.714285714286], [948.0, 14481.333333333334], [946.0, 22347.6], [944.0, 17556.0], [950.0, 22424.6], [940.0, 13360.6], [936.0, 8264.333333333334], [938.0, 10510.9], [986.0, 13958.333333333334], [988.0, 12057.285714285714], [984.0, 7135.900000000001], [966.0, 23912.5], [964.0, 5992.625], [962.0, 10732.2], [960.0, 8543.8], [982.0, 7532.222222222223], [980.0, 12091.0], [978.0, 20745.636363636364], [976.0, 13505.4], [990.0, 15865.0], [974.0, 8449.5], [970.0, 9196.4], [972.0, 19791.0], [968.0, 10888.857142857143], [998.0, 7011.8], [1022.0, 15399.92857142857], [1020.0, 13614.5], [1018.0, 21612.0], [1016.0, 28833.5], [1014.0, 10616.25], [1012.0, 7261.999999999999], [1008.0, 7385.8], [1010.0, 28989.5], [1004.0, 14279.0], [996.0, 12385.3], [994.0, 18961.666666666668], [992.0, 10065.666666666666], [1006.0, 15990.4], [1000.0, 13544.25], [1002.0, 15200.285714285714], [1080.0, 12948.75], [1076.0, 19019.333333333332], [1084.0, 11638.4], [1056.0, 16887.125], [1060.0, 14660.4], [1064.0, 12941.5], [1068.0, 11546.5], [1072.0, 14796.0], [1028.0, 12287.333333333332], [1024.0, 14843.75], [1032.0, 9746.545454545454], [1036.0, 9657.57142857143], [1052.0, 9378.100000000002], [1048.0, 12271.0], [1044.0, 13813.727272727272], [1040.0, 8678.0], [1148.0, 9795.9375], [1124.0, 18197.85714285714], [1128.0, 9034.076923076924], [1120.0, 15568.75], [1132.0, 13765.666666666666], [1140.0, 2576.2], [1144.0, 15277.4], [1136.0, 16745.0], [1088.0, 19931.833333333336], [1092.0, 11477.916666666668], [1096.0, 17735.0], [1100.0, 12478.666666666666], [1116.0, 18450.333333333332], [1108.0, 9005.222222222223], [1112.0, 12927.142857142857], [1104.0, 15230.666666666666], [1208.0, 11634.357142857143], [1188.0, 6010.857142857143], [1192.0, 9389.6], [1212.0, 17529.333333333332], [1184.0, 17869.5], [1200.0, 9824.333333333332], [1164.0, 17121.25], [1160.0, 15591.666666666668], [1204.0, 17520.0], [1196.0, 12902.833333333334], [1176.0, 9906.75], [1168.0, 26126.0], [1180.0, 30677.0], [1152.0, 18378.42857142857], [1156.0, 14938.4], [1268.0, 10470.0], [1264.0, 6701.833333333334], [1248.0, 10632.4], [1256.0, 17471.4], [1252.0, 27702.0], [1260.0, 27429.0], [1276.0, 15133.416666666666], [1272.0, 11062.75], [1244.0, 7958.0], [1240.0, 11243.5], [1236.0, 4652.090909090909], [1232.0, 15382.0], [1220.0, 15760.0], [1216.0, 23129.0], [1224.0, 9791.285714285716], [1228.0, 16765.0], [1336.0, 9480.8], [1288.0, 7428.363636363637], [1292.0, 10071.666666666668], [1332.0, 15289.0], [1328.0, 21071.5], [1340.0, 15713.0], [1280.0, 4658.083333333333], [1308.0, 9904.4], [1304.0, 19851.25], [1300.0, 21987.0], [1296.0, 26207.0], [1284.0, 1941.125], [1316.0, 8642.1], [1312.0, 7742.75], [1320.0, 9424.0], [1324.0, 9698.500000000002], [1356.0, 8488.75], [1372.0, 4742.857142857143], [1344.0, 20187.5], [1348.0, 14033.5], [1352.0, 4485.5], [1368.0, 6740.066666666667], [1360.0, 16264.666666666666], [1364.0, 23502.5], [1388.0, 10108.25], [1384.0, 23054.0], [1380.0, 6810.25], [1376.0, 5913.0], [1404.0, 10329.866666666665], [1396.0, 4349.454545454545], [1392.0, 22473.0], [1400.0, 6002.0], [1416.0, 8047.666666666667], [1456.0, 4085.8571428571427], [1464.0, 9374.25], [1424.0, 13455.461538461539], [1428.0, 6833.2], [1420.0, 4799.818181818182], [1412.0, 6877.25], [1408.0, 8464.0], [1436.0, 20770.0], [1432.0, 13228.5], [1468.0, 10544.0], [1440.0, 7828.333333333333], [1444.0, 10103.333333333334], [1448.0, 4796.75], [1452.0, 20301.0], [1460.0, 6176.0], [1532.0, 11322.0], [1512.0, 5785.0], [1508.0, 8931.4], [1504.0, 10549.5], [1516.0, 6885.249999999999], [1528.0, 6880.749999999999], [1524.0, 17530.0], [1520.0, 6818.75], [1476.0, 4221.285714285714], [1472.0, 6712.857142857143], [1484.0, 10202.0], [1480.0, 19083.0], [1500.0, 5314.124999999999], [1496.0, 7990.625], [1492.0, 6538.857142857143], [1488.0, 13963.833333333334], [1588.0, 8738.875], [1568.0, 9045.0], [1572.0, 15747.5], [1596.0, 14809.0], [1592.0, 14937.5], [1580.0, 5089.400000000001], [1576.0, 5901.8], [1584.0, 4382.8], [1548.0, 6844.0], [1540.0, 4916.142857142858], [1544.0, 16732.0], [1536.0, 1971.5], [1560.0, 9727.75], [1564.0, 15711.5], [1552.0, 9222.0], [1556.0, 15962.5], [1660.0, 13044.0], [1636.0, 10825.0], [1640.0, 5542.0], [1644.0, 9365.5], [1632.0, 9759.2], [1604.0, 6075.333333333333], [1628.0, 5838.333333333334], [1600.0, 7579.5], [1616.0, 5425.727272727273], [1620.0, 9707.0], [1624.0, 13902.0], [1656.0, 9127.571428571428], [1652.0, 11774.777777777777], [1648.0, 13277.0], [1612.0, 8506.333333333334], [1608.0, 14692.333333333334], [1712.0, 6143.5], [1720.0, 5915.8], [1696.0, 4874.0], [1724.0, 12094.833333333334], [1700.0, 4842.0], [1708.0, 6653.25], [1704.0, 6365.142857142857], [1692.0, 8689.5], [1668.0, 12849.5], [1664.0, 10064.75], [1676.0, 8017.666666666667], [1672.0, 8744.5], [1716.0, 7638.0], [1688.0, 4319.2], [1680.0, 7765.666666666666], [1684.0, 7542.0], [1784.0, 4504.0], [1780.0, 3372.8333333333335], [1788.0, 8039.625], [1760.0, 10539.461538461539], [1764.0, 5058.6], [1768.0, 2874.75], [1776.0, 2863.6666666666665], [1736.0, 9425.0], [1740.0, 7370.666666666667], [1728.0, 6704.666666666667], [1732.0, 9767.0], [1756.0, 3362.5], [1752.0, 6870.8], [1744.0, 9740.333333333334], [1748.0, 8484.25], [1772.0, 4724.9], [1848.0, 7581.0], [1800.0, 3920.7500000000005], [1840.0, 4962.4], [1844.0, 8374.666666666666], [1824.0, 5329.666666666666], [1828.0, 5950.0], [1832.0, 5739.000000000001], [1836.0, 6115.5], [1852.0, 7245.0], [1804.0, 5130.666666666666], [1796.0, 4921.571428571429], [1792.0, 5100.5], [1820.0, 5502.0], [1816.0, 6518.0], [1812.0, 6325.0], [1808.0, 6694.0], [1860.0, 6152.25], [1868.0, 4781.0], [1912.0, 5200.599999999999], [1904.0, 8166.0], [1916.0, 3086.0], [1888.0, 5074.333333333333], [1896.0, 4728.8], [1856.0, 5414.333333333333], [1864.0, 4772.142857142857], [1884.0, 5103.0], [1880.0, 6529.833333333334], [1876.0, 3986.8333333333335], [1872.0, 4707.0], [1928.0, 3363.666666666667], [1960.0, 3699.0], [1980.0, 2930.6666666666665], [1932.0, 2659.0], [1972.0, 2583.0], [1968.0, 2571.6666666666665], [1948.0, 3832.0], [1924.0, 3696.0], [1920.0, 3843.75], [1944.0, 3816.0], [1940.0, 3895.2], [1936.0, 3293.2857142857147], [1964.0, 3649.5], [1956.0, 3227.3333333333335], [1952.0, 3731.0], [1081.0, 10104.375], [1085.0, 11273.0], [1057.0, 13096.0], [1061.0, 7894.125], [1065.0, 13536.2], [1069.0, 12940.250000000002], [1077.0, 12263.857142857141], [1073.0, 10777.666666666666], [1025.0, 13170.0], [1029.0, 15899.124999999998], [1033.0, 18857.5], [1037.0, 6530.857142857143], [1053.0, 17918.5], [1049.0, 18496.5], [1045.0, 13203.666666666668], [1041.0, 7112.0], [1137.0, 9385.285714285716], [1145.0, 9893.833333333334], [1141.0, 32042.0], [1149.0, 10305.2], [1129.0, 14137.333333333334], [1125.0, 13617.0], [1121.0, 20728.5], [1133.0, 20479.333333333332], [1117.0, 12519.75], [1089.0, 17720.0], [1093.0, 17827.0], [1097.0, 19900.0], [1101.0, 12399.2], [1113.0, 10635.875], [1105.0, 12722.0], [1109.0, 21396.5], [1209.0, 19169.333333333332], [1185.0, 5507.428571428572], [1193.0, 2183.5], [1189.0, 11095.142857142857], [1197.0, 25467.5], [1161.0, 10974.375], [1205.0, 11502.666666666666], [1201.0, 30051.0], [1165.0, 13643.666666666668], [1213.0, 29181.0], [1153.0, 9975.75], [1157.0, 6460.400000000001], [1173.0, 13546.449999999999], [1169.0, 31163.0], [1181.0, 30540.0], [1177.0, 7444.5], [1229.0, 16856.666666666668], [1257.0, 2701.0], [1253.0, 8170.75], [1265.0, 14270.0], [1269.0, 22120.0], [1277.0, 16221.0], [1249.0, 13435.666666666666], [1273.0, 27442.0], [1221.0, 15207.0], [1217.0, 29216.0], [1225.0, 28780.0], [1245.0, 16914.75], [1241.0, 12501.666666666666], [1233.0, 18780.11111111111], [1237.0, 18085.5], [1261.0, 5377.5], [1289.0, 5834.857142857143], [1293.0, 13387.000000000002], [1333.0, 18890.75], [1329.0, 25069.0], [1285.0, 7754.4], [1321.0, 5403.5], [1317.0, 13436.0], [1337.0, 9530.333333333332], [1341.0, 14940.5], [1313.0, 21638.5], [1325.0, 7356.6], [1301.0, 9634.666666666668], [1297.0, 7686.75], [1305.0, 7045.285714285714], [1309.0, 13654.0], [1281.0, 11081.0], [1357.0, 6179.2], [1345.0, 12079.0], [1373.0, 9535.916666666666], [1349.0, 3911.0], [1353.0, 14636.5], [1369.0, 4607.727272727272], [1365.0, 18972.666666666668], [1361.0, 23806.0], [1405.0, 6451.2], [1389.0, 19303.5], [1385.0, 18066.666666666668], [1381.0, 16934.777777777777], [1377.0, 23067.0], [1401.0, 10816.0], [1397.0, 10430.75], [1393.0, 8917.333333333332], [1421.0, 9777.4], [1409.0, 4863.545454545455], [1461.0, 1566.1219512195125], [1437.0, 2419.25], [1433.0, 7523.777777777777], [1425.0, 4622.222222222223], [1429.0, 10486.0], [1413.0, 7197.166666666667], [1417.0, 5220.0], [1441.0, 7368.0], [1449.0, 8707.333333333334], [1445.0, 20735.0], [1453.0, 8580.8], [1465.0, 9203.125], [1469.0, 1937.5], [1457.0, 5719.75], [1529.0, 4760.0], [1509.0, 10850.8], [1513.0, 5440.0], [1517.0, 12484.0], [1533.0, 3612.777777777778], [1505.0, 12539.333333333334], [1525.0, 12374.0], [1521.0, 4969.8], [1485.0, 4556.666666666667], [1481.0, 19140.0], [1473.0, 7020.0], [1501.0, 9383.666666666666], [1477.0, 5850.2], [1497.0, 1824.0], [1493.0, 10293.0], [1489.0, 6947.666666666667], [1585.0, 5909.666666666667], [1589.0, 7466.0], [1593.0, 10601.666666666666], [1569.0, 8984.5], [1597.0, 9977.0], [1573.0, 7292.25], [1577.0, 8810.0], [1549.0, 8394.375], [1545.0, 4761.272727272727], [1541.0, 13560.42857142857], [1537.0, 10856.166666666668], [1565.0, 6501.666666666667], [1561.0, 8834.75], [1553.0, 7531.714285714286], [1557.0, 8094.333333333333], [1581.0, 4419.833333333333], [1613.0, 5977.0], [1637.0, 7550.5], [1633.0, 13241.0], [1645.0, 9302.0], [1641.0, 8898.5], [1605.0, 6065.0], [1609.0, 8263.0], [1601.0, 7251.333333333333], [1625.0, 11386.6], [1629.0, 13374.0], [1621.0, 6826.333333333333], [1617.0, 14712.42857142857], [1661.0, 12965.0], [1657.0, 12063.8], [1653.0, 9798.0], [1649.0, 13308.5], [1721.0, 4122.0], [1697.0, 4595.875], [1705.0, 6606.75], [1701.0, 12097.25], [1709.0, 7979.0], [1725.0, 5064.666666666667], [1717.0, 5957.0], [1713.0, 4065.0], [1693.0, 6879.0], [1669.0, 10809.333333333334], [1665.0, 12184.0], [1677.0, 11297.5], [1673.0, 6723.666666666666], [1689.0, 10014.636363636364], [1685.0, 11598.0], [1681.0, 2947.78947368421], [1785.0, 3785.142857142857], [1781.0, 4781.6], [1789.0, 9487.6], [1761.0, 7343.2], [1765.0, 6640.0], [1769.0, 3499.0], [1777.0, 2548.0], [1737.0, 6089.8], [1741.0, 11479.333333333334], [1733.0, 4304.0], [1729.0, 7627.5], [1757.0, 6153.166666666666], [1753.0, 5527.25], [1745.0, 10194.75], [1749.0, 6511.333333333333], [1773.0, 6567.0], [1801.0, 6904.0], [1849.0, 6491.684210526315], [1793.0, 9457.714285714286], [1805.0, 12101.23076923077], [1821.0, 5275.666666666667], [1817.0, 8040.2], [1813.0, 6524.0], [1809.0, 5284.5], [1825.0, 5777.0], [1829.0, 9564.190476190477], [1833.0, 4996.2], [1853.0, 7278.5], [1845.0, 6922.8], [1841.0, 7731.5], [1865.0, 6397.833333333334], [1917.0, 2657.0], [1913.0, 1973.0], [1869.0, 4748.2], [1861.0, 6358.8], [1857.0, 6642.0], [1897.0, 2743.8], [1893.0, 3871.0], [1901.0, 3753.5], [1889.0, 7644.142857142857], [1885.0, 4422.0], [1873.0, 3838.0], [1877.0, 7215.0], [1881.0, 7685.666666666667], [1933.0, 3718.4], [1977.0, 2815.3333333333335], [1973.0, 2910.0], [1965.0, 3721.0], [1961.0, 3813.0], [1953.0, 3803.833333333333], [1945.0, 3894.5], [1921.0, 3784.0], [1929.0, 3853.0], [1925.0, 3877.5], [1937.0, 3864.0], [541.0, 13901.000000000002], [543.0, 19764.428571428572], [529.0, 12252.624999999998], [533.0, 20806.0], [531.0, 15200.142857142857], [539.0, 19243.0], [537.0, 14731.888888888889], [519.0, 12333.35294117647], [517.0, 26235.666666666668], [515.0, 10146.42857142857], [513.0, 20894.333333333336], [527.0, 13014.999999999998], [525.0, 17891.0], [523.0, 18348.85714285714], [521.0, 21706.0], [535.0, 15267.727272727272], [551.0, 24463.2], [569.0, 27671.5], [561.0, 15835.0], [571.0, 19856.666666666668], [573.0, 20561.5], [575.0, 24999.2], [549.0, 25957.333333333332], [547.0, 54353.0], [545.0, 12649.777777777777], [559.0, 21858.333333333332], [557.0, 18709.25], [555.0, 23032.57142857143], [553.0, 22251.0], [567.0, 19882.666666666668], [563.0, 20129.6], [565.0, 53260.0], [601.0, 15056.777777777777], [607.0, 16806.166666666668], [593.0, 9609.272727272728], [603.0, 8002.055555555556], [605.0, 31360.666666666668], [577.0, 26794.75], [591.0, 23880.666666666668], [579.0, 9166.666666666666], [581.0, 36010.666666666664], [583.0, 53213.0], [589.0, 12750.666666666666], [585.0, 12829.769230769232], [587.0, 37044.5], [599.0, 13364.666666666666], [597.0, 7759.333333333333], [595.0, 13787.375], [625.0, 18470.0], [635.0, 11352.5], [627.0, 11524.2], [609.0, 21329.142857142855], [615.0, 11111.555555555555], [613.0, 36285.5], [611.0, 13907.888888888889], [633.0, 51276.0], [631.0, 27093.4], [629.0, 14624.75], [639.0, 18863.0], [637.0, 17592.0], [623.0, 10213.0], [617.0, 10263.23076923077], [619.0, 51310.0], [621.0, 27208.4], [665.0, 14056.142857142857], [669.0, 16162.2], [657.0, 8595.111111111111], [671.0, 23084.666666666668], [667.0, 18413.333333333336], [655.0, 14709.75], [643.0, 50658.0], [641.0, 13493.777777777777], [647.0, 16679.2], [645.0, 3609.0], [653.0, 17951.25], [651.0, 26114.5], [649.0, 15437.4], [663.0, 14712.333333333334], [661.0, 18925.5], [659.0, 26152.0], [697.0, 19080.142857142855], [691.0, 20592.333333333332], [701.0, 17041.75], [699.0, 30345.333333333332], [703.0, 11455.625], [689.0, 23205.25], [679.0, 24149.666666666668], [677.0, 20532.2], [675.0, 26095.5], [673.0, 11348.499999999998], [687.0, 11492.1], [685.0, 19401.25], [683.0, 20447.6], [681.0, 13640.285714285716], [695.0, 9427.235294117647], [693.0, 11251.600000000002], [729.0, 22394.8], [735.0, 23553.333333333332], [721.0, 24775.8], [725.0, 12943.4], [723.0, 10327.666666666666], [731.0, 15802.000000000002], [733.0, 23902.4], [711.0, 11861.416666666668], [709.0, 18911.5], [707.0, 10650.5], [705.0, 18663.142857142855], [719.0, 13573.714285714284], [717.0, 12591.0], [715.0, 15756.750000000002], [713.0, 11085.4], [727.0, 17086.333333333332], [765.0, 18602.999999999996], [767.0, 11299.0], [753.0, 12749.6], [755.0, 24335.5], [763.0, 12786.333333333334], [761.0, 25680.0], [751.0, 22038.75], [737.0, 23334.666666666668], [739.0, 24444.5], [741.0, 24551.0], [743.0, 24519.0], [749.0, 10808.0], [747.0, 18669.42857142857], [745.0, 24431.0], [757.0, 13773.400000000001], [759.0, 13452.5], [771.0, 24017.5], [769.0, 13404.75], [775.0, 19945.4], [773.0, 12873.875], [783.0, 12815.75], [781.0, 16204.42857142857], [779.0, 9474.000000000002], [777.0, 17487.333333333332], [799.0, 11187.333333333334], [797.0, 24749.0], [785.0, 18768.57142857143], [787.0, 19492.125], [795.0, 18075.0], [793.0, 23234.5], [789.0, 10518.0], [791.0, 17114.399999999998], [805.0, 23337.0], [825.0, 10666.083333333332], [807.0, 24325.285714285717], [803.0, 16251.0], [801.0, 23753.11111111111], [815.0, 18074.666666666668], [811.0, 16569.0], [813.0, 13227.857142857143], [809.0, 10443.333333333334], [831.0, 10154.0], [819.0, 12749.875], [817.0, 12673.833333333334], [821.0, 21536.75], [829.0, 22397.0], [827.0, 21968.666666666668], [823.0, 22901.5], [857.0, 11438.0], [863.0, 14895.666666666668], [849.0, 24689.666666666668], [861.0, 10116.285714285714], [859.0, 22071.666666666668], [847.0, 17436.0], [833.0, 13790.624999999998], [835.0, 10792.0], [837.0, 10548.42857142857], [839.0, 19301.666666666668], [845.0, 17279.166666666668], [843.0, 12332.57142857143], [841.0, 15350.5], [855.0, 6740.555555555556], [853.0, 25466.8], [851.0, 8349.57142857143], [867.0, 15120.333333333334], [869.0, 21685.0], [871.0, 42691.0], [891.0, 27791.666666666668], [889.0, 14374.333333333332], [893.0, 6906.428571428572], [883.0, 18298.0], [887.0, 15567.333333333334], [885.0, 31260.5], [895.0, 10712.818181818182], [881.0, 15661.272727272728], [877.0, 12523.5], [873.0, 9917.636363636362], [875.0, 28073.666666666668], [865.0, 22102.5], [879.0, 14086.25], [921.0, 14592.090909090908], [923.0, 7022.166666666667], [925.0, 1582.0], [913.0, 7225.727272727273], [927.0, 11323.0], [915.0, 40650.0], [903.0, 24000.0], [901.0, 19792.0], [899.0, 10315.772727272728], [897.0, 14445.699999999999], [911.0, 14555.0], [909.0, 17911.899999999998], [905.0, 21369.5], [907.0, 15114.0], [919.0, 6637.624999999999], [917.0, 10523.0], [953.0, 10811.727272727276], [957.0, 5817.9333333333325], [955.0, 18009.0], [933.0, 7483.222222222223], [931.0, 30355.5], [935.0, 14512.285714285714], [929.0, 30406.909090909092], [951.0, 20226.5], [949.0, 6922.5], [947.0, 11036.25], [945.0, 30283.5], [959.0, 23502.5], [943.0, 7957.285714285714], [941.0, 18724.6], [939.0, 11075.142857142857], [937.0, 22839.666666666668], [987.0, 16878.0], [989.0, 14111.285714285714], [991.0, 37331.0], [985.0, 7620.142857142857], [967.0, 4940.384615384615], [963.0, 10132.666666666666], [965.0, 20581.13333333333], [961.0, 8926.90909090909], [981.0, 5418.090909090909], [983.0, 14132.857142857145], [979.0, 12783.0], [977.0, 10196.0], [975.0, 8521.142857142857], [973.0, 8023.0], [971.0, 10707.699999999999], [969.0, 38615.0], [1021.0, 8541.583333333334], [1023.0, 6650.571428571429], [1019.0, 14401.333333333334], [1017.0, 17028.666666666668], [1013.0, 12034.666666666668], [1015.0, 15940.333333333334], [1009.0, 8194.714285714284], [1011.0, 13123.5], [999.0, 9697.0], [995.0, 13238.333333333332], [997.0, 29242.5], [993.0, 7915.375], [1001.0, 5659.333333333333], [1003.0, 17497.100000000002], [1007.0, 15283.100000000002], [1005.0, 37281.0], [1086.0, 16044.2], [1058.0, 16165.777777777777], [1062.0, 11784.125], [1066.0, 11852.166666666666], [1070.0, 18200.5], [1082.0, 14269.333333333334], [1078.0, 11120.818181818182], [1074.0, 14858.0], [1038.0, 18994.0], [1054.0, 6566.588235294118], [1026.0, 36323.0], [1034.0, 36461.0], [1030.0, 21614.666666666664], [1050.0, 18382.0], [1046.0, 13198.166666666666], [1042.0, 6490.888888888889], [1146.0, 16212.8], [1138.0, 10352.125], [1122.0, 10989.833333333334], [1126.0, 14572.333333333334], [1134.0, 9326.666666666666], [1130.0, 14570.400000000001], [1150.0, 16698.142857142855], [1142.0, 10559.857142857143], [1118.0, 7298.999999999999], [1090.0, 8885.57142857143], [1094.0, 17622.5], [1098.0, 11802.0], [1102.0, 16415.416666666664], [1114.0, 14344.6], [1106.0, 17924.5], [1110.0, 8115.249999999999], [1202.0, 9173.5], [1162.0, 11677.111111111111], [1166.0, 19358.0], [1210.0, 8997.8], [1206.0, 11497.166666666666], [1198.0, 9089.5], [1194.0, 10812.818181818182], [1190.0, 6544.666666666667], [1186.0, 30581.0], [1214.0, 16134.714285714284], [1182.0, 15847.0], [1178.0, 21299.666666666668], [1158.0, 14807.666666666668], [1154.0, 13947.5], [1174.0, 15344.25], [1170.0, 11192.666666666666], [1274.0, 3735.5], [1278.0, 14096.0], [1250.0, 10377.0], [1254.0, 12993.285714285714], [1258.0, 6695.333333333333], [1262.0, 16148.0], [1270.0, 9871.0], [1266.0, 12824.6], [1230.0, 22100.25], [1242.0, 12313.666666666666], [1238.0, 8881.785714285714], [1234.0, 28671.0], [1246.0, 15189.8], [1222.0, 9767.57142857143], [1218.0, 22972.666666666668], [1226.0, 15587.0], [1330.0, 11279.25], [1286.0, 3645.1666666666665], [1290.0, 16898.25], [1282.0, 5980.5], [1310.0, 25420.0], [1318.0, 13487.0], [1342.0, 24309.0], [1314.0, 25700.0], [1338.0, 7000.2], [1334.0, 14575.666666666666], [1294.0, 5538.833333333335], [1326.0, 7712.0], [1322.0, 19320.85714285714], [1298.0, 10565.5], [1302.0, 8485.0], [1354.0, 6571.125], [1402.0, 7758.666666666667], [1370.0, 7142.0], [1374.0, 23019.0], [1346.0, 11234.714285714286], [1350.0, 6080.8], [1362.0, 7412.25], [1366.0, 16192.0], [1394.0, 8205.384615384615], [1358.0, 23912.5], [1398.0, 14551.0], [1406.0, 5811.428571428571], [1390.0, 5156.5], [1386.0, 3526.545454545455], [1378.0, 6678.6], [1382.0, 14765.0], [1418.0, 6979.25], [1434.0, 4641.714285714286], [1426.0, 13403.75], [1430.0, 8562.666666666668], [1422.0, 10065.5], [1458.0, 19978.0], [1410.0, 12179.0], [1414.0, 13019.0], [1438.0, 20823.0], [1466.0, 8970.8], [1470.0, 19620.0], [1462.0, 11497.666666666668], [1442.0, 7890.0], [1446.0, 11429.5], [1450.0, 11727.625000000002], [1454.0, 7577.0], [1526.0, 4068.0], [1530.0, 9981.5], [1510.0, 9612.6], [1506.0, 13750.0], [1534.0, 7115.8], [1514.0, 11249.833333333334], [1518.0, 7626.666666666666], [1474.0, 8889.333333333334], [1478.0, 10173.8], [1502.0, 11788.5], [1498.0, 18421.5], [1482.0, 6385.857142857143], [1486.0, 9787.666666666666], [1522.0, 17573.0], [1494.0, 12626.0], [1490.0, 12874.0], [1586.0, 8079.0], [1598.0, 5724.5], [1590.0, 4303.0], [1594.0, 6978.2], [1578.0, 6449.181818181818], [1570.0, 3667.75], [1574.0, 15357.625], [1546.0, 8842.666666666666], [1550.0, 8050.333333333333], [1542.0, 11089.333333333334], [1566.0, 13693.2], [1538.0, 10715.0], [1558.0, 12330.25], [1562.0, 10166.8], [1554.0, 4034.0], [1582.0, 9088.0], [1662.0, 12431.0], [1638.0, 4094.4], [1634.0, 5114.5], [1658.0, 9463.5], [1654.0, 8560.0], [1650.0, 9199.636363636364], [1614.0, 13914.0], [1610.0, 8161.3], [1646.0, 8871.0], [1642.0, 7783.666666666667], [1606.0, 6086.0], [1630.0, 5754.333333333334], [1602.0, 14457.0], [1626.0, 6496.0], [1622.0, 6509.0], [1618.0, 14451.5], [1726.0, 3721.25], [1722.0, 9941.0], [1702.0, 7445.75], [1698.0, 7542.333333333333], [1710.0, 4008.6], [1706.0, 8059.428571428572], [1694.0, 11100.0], [1690.0, 7382.6], [1714.0, 8707.5], [1678.0, 12733.777777777777], [1670.0, 9102.0], [1674.0, 6038.0], [1666.0, 9523.5], [1718.0, 8690.0], [1682.0, 6204.5], [1686.0, 11146.75], [1786.0, 8520.5], [1762.0, 11341.0], [1766.0, 4725.5], [1782.0, 7437.5], [1790.0, 7308.857142857143], [1770.0, 2795.25], [1778.0, 7301.0], [1742.0, 2820.3333333333335], [1738.0, 4491.25], [1734.0, 5513.5], [1758.0, 6132.842105263158], [1730.0, 6696.666666666667], [1754.0, 5192.5], [1750.0, 5302.0], [1746.0, 6171.5], [1774.0, 6439.875], [1850.0, 9203.142857142857], [1806.0, 5391.5], [1842.0, 5379.0], [1846.0, 5075.0], [1854.0, 6329.714285714285], [1826.0, 6140.0], [1830.0, 5813.0], [1838.0, 5842.142857142857], [1802.0, 3895.2], [1798.0, 3595.0], [1794.0, 3612.1666666666665], [1822.0, 6181.0], [1818.0, 6472.0], [1814.0, 10612.142857142857], [1810.0, 5651.0], [1866.0, 4831.0], [1914.0, 3103.25], [1918.0, 3779.5], [1910.0, 5788.333333333333], [1906.0, 3124.0], [1894.0, 3943.0], [1902.0, 6761.666666666667], [1890.0, 5006.75], [1886.0, 4103.0], [1858.0, 4856.0], [1862.0, 5476.0], [1870.0, 6433.5], [1882.0, 4878.25], [1878.0, 4697.4], [1874.0, 4405.333333333333], [1970.0, 3443.0], [1978.0, 2802.0], [1974.0, 2576.6666666666665], [1934.0, 3570.0], [1930.0, 3053.0], [1926.0, 3818.909090909091], [1922.0, 3846.0], [1950.0, 3780.375], [1946.0, 3787.5], [1938.0, 3767.6666666666665], [1966.0, 2859.25], [1962.0, 3712.0], [1954.0, 3746.3333333333335], [1958.0, 3865.0], [1083.0, 14917.4], [1087.0, 10382.727272727272], [1059.0, 12209.4], [1063.0, 18171.0], [1067.0, 14265.111111111111], [1071.0, 6531.875], [1079.0, 11300.714285714286], [1075.0, 10134.0], [1055.0, 18331.5], [1027.0, 13234.333333333334], [1031.0, 15001.25], [1035.0, 14616.538461538461], [1039.0, 10854.8], [1051.0, 8297.4], [1047.0, 18539.0], [1043.0, 21845.5], [1151.0, 12280.25], [1147.0, 9855.833333333334], [1127.0, 17754.333333333336], [1123.0, 7792.0], [1131.0, 7305.090909090909], [1135.0, 18552.0], [1143.0, 9189.4], [1119.0, 14330.666666666666], [1091.0, 13142.333333333334], [1095.0, 12256.5], [1099.0, 5887.0], [1103.0, 10113.666666666664], [1139.0, 15911.666666666668], [1115.0, 11218.888888888889], [1111.0, 16389.0], [1107.0, 10735.75], [1207.0, 10146.6], [1195.0, 10394.363636363636], [1191.0, 11241.666666666666], [1187.0, 7366.461538461538], [1199.0, 9174.5], [1163.0, 15512.0], [1203.0, 8109.666666666667], [1167.0, 19110.0], [1215.0, 8364.666666666664], [1211.0, 15941.5], [1155.0, 8536.90909090909], [1159.0, 8387.42857142857], [1175.0, 5082.166666666667], [1171.0, 24468.666666666668], [1179.0, 11075.666666666666], [1279.0, 4115.111111111111], [1275.0, 6810.5], [1255.0, 12046.2], [1251.0, 28429.0], [1259.0, 17772.166666666664], [1227.0, 13283.0], [1223.0, 15266.5], [1219.0, 8738.75], [1239.0, 8225.25], [1235.0, 28365.0], [1247.0, 19189.444444444445], [1243.0, 17210.0], [1267.0, 12970.999999999998], [1231.0, 22570.333333333332], [1271.0, 16699.5], [1263.0, 9852.5], [1331.0, 9730.0], [1287.0, 922.4], [1283.0, 13109.1], [1311.0, 25714.0], [1307.0, 14375.666666666664], [1343.0, 8838.6], [1319.0, 13375.5], [1315.0, 13638.5], [1335.0, 3703.8181818181815], [1339.0, 14902.0], [1291.0, 11221.0], [1295.0, 20651.333333333332], [1327.0, 5796.625], [1323.0, 19936.25], [1303.0, 6094.666666666667], [1299.0, 15137.333333333334], [1355.0, 9949.2], [1351.0, 5354.5], [1371.0, 7275.75], [1375.0, 11711.666666666666], [1347.0, 12826.199999999999], [1367.0, 13792.000000000002], [1363.0, 1880.5714285714284], [1387.0, 8543.333333333332], [1383.0, 7953.90909090909], [1391.0, 11655.333333333332], [1379.0, 7682.333333333333], [1403.0, 8285.0], [1407.0, 22145.0], [1399.0, 8120.6], [1395.0, 10346.0], [1359.0, 5269.75], [1463.0, 5589.5], [1435.0, 8368.0], [1427.0, 8217.75], [1431.0, 13413.5], [1411.0, 10037.714285714286], [1439.0, 9750.5], [1471.0, 6442.0], [1447.0, 7696.599999999999], [1443.0, 20990.0], [1455.0, 16442.2], [1451.0, 20331.0], [1467.0, 4798.0], [1459.0, 6577.5], [1423.0, 10821.333333333334], [1419.0, 10761.0], [1415.0, 13449.5], [1527.0, 3369.0], [1523.0, 8837.25], [1535.0, 4571.6], [1507.0, 2606.0], [1511.0, 15824.285714285714], [1515.0, 6937.5], [1519.0, 9510.25], [1531.0, 11016.0], [1487.0, 9864.0], [1503.0, 6880.714285714286], [1475.0, 4579.285714285715], [1483.0, 1999.4117647058824], [1479.0, 19684.0], [1499.0, 6359.5], [1495.0, 5161.333333333333], [1491.0, 14568.882352941177], [1587.0, 7146.0], [1591.0, 6731.8], [1595.0, 6660.25], [1599.0, 7882.0], [1571.0, 15689.0], [1575.0, 4115.8], [1579.0, 5883.750000000001], [1551.0, 4341.714285714285], [1547.0, 12869.6], [1543.0, 4956.2], [1539.0, 15759.75], [1567.0, 6494.333333333333], [1563.0, 4926.357142857142], [1559.0, 6639.299999999999], [1555.0, 15753.75], [1583.0, 7317.6], [1659.0, 13217.0], [1647.0, 5475.333333333334], [1643.0, 4718.75], [1611.0, 4959.25], [1607.0, 9864.5], [1615.0, 14141.0], [1603.0, 13492.0], [1623.0, 7297.333333333333], [1631.0, 13292.0], [1627.0, 13616.0], [1619.0, 8164.0], [1663.0, 12921.5], [1639.0, 9197.0], [1635.0, 9264.111111111111], [1655.0, 12436.0], [1651.0, 12697.0], [1727.0, 9894.0], [1723.0, 4332.666666666666], [1707.0, 5971.333333333333], [1703.0, 11224.0], [1699.0, 11146.0], [1711.0, 5744.666666666667], [1719.0, 10480.8], [1715.0, 8606.142857142857], [1679.0, 11756.0], [1695.0, 4904.0], [1667.0, 7829.785714285715], [1675.0, 8861.5], [1671.0, 12129.0], [1691.0, 8831.5], [1687.0, 7506.0], [1683.0, 8182.5], [1787.0, 9857.875], [1779.0, 4802.571428571428], [1771.0, 2659.0], [1783.0, 3070.625], [1791.0, 2685.25], [1763.0, 4606.0], [1767.0, 9052.25], [1743.0, 5311.75], [1739.0, 5587.5], [1735.0, 4788.166666666667], [1731.0, 9820.0], [1759.0, 7557.857142857143], [1755.0, 8683.0], [1751.0, 3089.6], [1747.0, 4833.0], [1775.0, 6979.033407572386], [1803.0, 6780.0], [1799.0, 6990.666666666667], [1795.0, 7398.333333333333], [1807.0, 6536.0], [1823.0, 5912.0], [1819.0, 6197.0], [1815.0, 6561.500000000001], [1811.0, 8237.142857142857], [1855.0, 6036.333333333333], [1827.0, 6528.4], [1831.0, 5238.0], [1839.0, 5196.5], [1835.0, 6134.75], [1851.0, 9215.714285714286], [1847.0, 6189.0], [1843.0, 7720.5], [1871.0, 6984.0], [1891.0, 3939.0], [1919.0, 3676.0], [1895.0, 3876.0], [1915.0, 2742.0], [1911.0, 3506.0000000000005], [1907.0, 8189.0], [1867.0, 6595.0], [1863.0, 7614.833333333334], [1859.0, 5761.5], [1903.0, 5669.0], [1899.0, 5142.666666666666], [1887.0, 4425.0], [1883.0, 4324.0], [1879.0, 7319.833333333333], [1875.0, 6352.5], [1971.0, 2773.0], [1967.0, 3154.0], [1947.0, 3746.6000000000004], [1959.0, 2866.6666666666665], [1951.0, 3735.0], [1939.0, 3805.3333333333335], [1943.0, 3864.6666666666665], [1923.0, 3696.625], [1931.0, 3838.0], [1927.0, 3866.5], [1975.0, 2576.0], [1955.0, 3859.5], [1.0, 28750.000000000004]], "isOverall": false, "label": "HTTP请求", "isController": false}, {"data": [[939.6239999999989, 12819.81383333329]], "isOverall": false, "label": "HTTP请求-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1980.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11448.55, "minX": 1.63090134E12, "maxY": 103726.55, "series": [{"data": [[1.63090146E12, 103726.55], [1.63090134E12, 22479.833333333332], [1.63090152E12, 38881.95], [1.6309014E12, 54878.583333333336]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.63090146E12, 30161.216666666667], [1.63090134E12, 34659.88333333333], [1.63090152E12, 13036.733333333334], [1.6309014E12, 11448.55]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090152E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2267.193283582083, "minX": 1.63090134E12, "maxY": 30457.34422110555, "series": [{"data": [[1.63090146E12, 13392.847538742031], [1.63090134E12, 2267.193283582083], [1.63090152E12, 18733.871000000003], [1.6309014E12, 30457.34422110555]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090152E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2246.8945273631816, "minX": 1.63090134E12, "maxY": 30380.108040201, "series": [{"data": [[1.63090146E12, 13103.781221513238], [1.63090134E12, 2246.8945273631816], [1.63090152E12, 11490.59550000002], [1.6309014E12, 30380.108040201]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090152E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1340.4574626865701, "minX": 1.63090134E12, "maxY": 11270.538000000028, "series": [{"data": [[1.63090146E12, 4832.863719234265], [1.63090134E12, 1340.4574626865701], [1.63090152E12, 11270.538000000028], [1.6309014E12, 1641.9346733668328]], "isOverall": false, "label": "HTTP请求", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090152E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 31.0, "minX": 1.63090134E12, "maxY": 75554.0, "series": [{"data": [[1.63090146E12, 75554.0], [1.63090134E12, 9931.0], [1.63090152E12, 35140.0], [1.6309014E12, 60632.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.63090146E12, 15210.1], [1.63090134E12, 3669.0], [1.63090152E12, 23771.8], [1.6309014E12, 54571.50000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.63090146E12, 73733.37000000001], [1.63090134E12, 4948.249999999998], [1.63090152E12, 35074.34], [1.6309014E12, 60052.340000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.63090146E12, 67288.34999999999], [1.63090134E12, 4108.25], [1.63090152E12, 28108.7], [1.6309014E12, 57680.549999999996]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.63090146E12, 51.0], [1.63090134E12, 31.0], [1.63090152E12, 296.0], [1.6309014E12, 2802.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.63090146E12, 8585.5], [1.63090134E12, 2092.5], [1.63090152E12, 17227.0], [1.6309014E12, 31002.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090152E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 75.0, "minX": 1.0, "maxY": 74860.0, "series": [{"data": [[2.0, 13940.0], [587.0, 2435.0], [607.0, 3519.0], [610.0, 1542.0], [668.0, 7164.0], [698.0, 1706.5], [3.0, 12815.5], [5.0, 6143.0], [6.0, 2506.5], [9.0, 15058.0], [10.0, 1458.5], [11.0, 24407.0], [12.0, 6868.5], [14.0, 2574.5], [15.0, 7044.0], [17.0, 12580.0], [18.0, 8472.0], [21.0, 20968.0], [22.0, 9882.5], [23.0, 23884.5], [24.0, 46884.5], [25.0, 31896.0], [26.0, 44283.0], [27.0, 27064.0], [28.0, 41547.0], [29.0, 32186.5], [30.0, 71928.0], [31.0, 74860.0], [35.0, 10048.5], [34.0, 5555.5], [38.0, 3877.0], [39.0, 28063.0], [40.0, 28518.5], [48.0, 14699.0], [49.0, 3860.0], [51.0, 7307.0], [58.0, 13740.0], [66.0, 3708.0], [68.0, 4817.0], [70.0, 13836.0], [75.0, 12901.0], [80.0, 974.0], [84.0, 6716.0], [87.0, 16189.0], [99.0, 15182.0], [101.0, 75.0], [111.0, 12542.0], [115.0, 20290.0], [116.0, 2406.5], [125.0, 23580.0], [154.0, 22488.5], [166.0, 9384.5], [172.0, 11787.0], [179.0, 15446.0], [188.0, 1031.0], [215.0, 7517.0], [229.0, 5536.0], [243.0, 4560.0], [1.0, 13115.0], [303.0, 9905.0], [322.0, 246.5], [321.0, 5254.0], [326.0, 10069.0], [374.0, 8793.0], [476.0, 3251.0], [468.0, 8529.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[587.0, 1315.5], [154.0, 21049.0], [668.0, 7185.5], [698.0, 21050.0], [14.0, 26515.0], [1.0, 21036.0], [80.0, 2659.0], [321.0, 5493.0], [23.0, 21049.0], [25.0, 21040.0], [26.0, 33431.0], [28.0, 31836.0], [115.0, 21038.0], [30.0, 71492.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 698.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 74860.0, "series": [{"data": [[2.0, 13940.0], [587.0, 2375.0], [607.0, 3515.0], [610.0, 1542.0], [668.0, 7139.0], [698.0, 1706.5], [3.0, 12815.5], [5.0, 6143.0], [6.0, 1979.0], [9.0, 15057.0], [10.0, 1458.5], [11.0, 24407.0], [12.0, 6868.5], [14.0, 2574.5], [15.0, 7044.0], [17.0, 12579.0], [18.0, 8472.0], [21.0, 20968.0], [22.0, 9882.5], [23.0, 23884.5], [24.0, 46884.5], [25.0, 31895.5], [26.0, 44283.0], [27.0, 27064.0], [28.0, 41547.0], [29.0, 32186.5], [30.0, 71928.0], [31.0, 74860.0], [35.0, 10048.5], [34.0, 5555.5], [38.0, 3877.0], [39.0, 28063.0], [40.0, 28518.5], [48.0, 14265.0], [49.0, 3859.0], [51.0, 6755.0], [58.0, 13740.0], [66.0, 3707.5], [68.0, 4817.0], [70.0, 13834.0], [75.0, 12901.0], [80.0, 974.0], [84.0, 6714.0], [87.0, 16189.0], [99.0, 15182.0], [101.0, 75.0], [111.0, 12542.0], [115.0, 20282.0], [116.0, 2406.5], [125.0, 23577.0], [154.0, 22487.0], [166.0, 9270.0], [172.0, 11787.0], [179.0, 15443.0], [188.0, 1030.0], [215.0, 7118.0], [229.0, 5536.0], [243.0, 4560.0], [1.0, 7303.0], [303.0, 9905.0], [322.0, 244.5], [321.0, 5254.0], [326.0, 9801.5], [374.0, 8766.0], [476.0, 3250.0], [468.0, 8442.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[587.0, 0.0], [154.0, 0.0], [668.0, 0.0], [698.0, 0.0], [14.0, 0.0], [1.0, 0.0], [80.0, 0.0], [321.0, 0.0], [23.0, 0.0], [25.0, 0.0], [26.0, 33429.0], [28.0, 21324.0], [115.0, 0.0], [30.0, 71492.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 698.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 32.88333333333333, "minX": 1.63090134E12, "maxY": 100.0, "series": [{"data": [[1.63090146E12, 67.11666666666666], [1.63090134E12, 100.0], [1.63090152E12, 32.88333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090152E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.63090134E12, "maxY": 71.36666666666666, "series": [{"data": [[1.63090146E12, 71.36666666666666], [1.63090134E12, 66.9], [1.63090152E12, 22.016666666666666], [1.6309014E12, 25.966666666666665]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.63090152E12, 0.25]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketTimeoutException", "isController": false}, {"data": [[1.63090146E12, 0.18333333333333332], [1.63090134E12, 0.03333333333333333], [1.63090152E12, 11.066666666666666], [1.6309014E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.63090146E12, 0.016666666666666666], [1.6309014E12, 0.03333333333333333]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.63090146E12, 1.5666666666666667], [1.63090134E12, 0.06666666666666667], [1.6309014E12, 0.5]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.63090152E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.63090134E12, "maxY": 71.36666666666666, "series": [{"data": [[1.63090146E12, 1.7666666666666666], [1.63090134E12, 0.1], [1.63090152E12, 11.316666666666666], [1.6309014E12, 0.5666666666666667]], "isOverall": false, "label": "HTTP请求-failure", "isController": false}, {"data": [[1.63090146E12, 71.36666666666666], [1.63090134E12, 66.9], [1.63090152E12, 22.016666666666666], [1.6309014E12, 25.966666666666665]], "isOverall": false, "label": "HTTP请求-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090152E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.63090134E12, "maxY": 71.36666666666666, "series": [{"data": [[1.63090146E12, 71.36666666666666], [1.63090134E12, 66.9], [1.63090152E12, 22.016666666666666], [1.6309014E12, 25.966666666666665]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.63090146E12, 1.7666666666666666], [1.63090134E12, 0.1], [1.63090152E12, 11.316666666666666], [1.6309014E12, 0.5666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.63090152E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 28800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

